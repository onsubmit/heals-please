(()=>{var __webpack_modules__={1921:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "body {\\n  font-family: georgia, arial, helvetica, sans-serif;\\n  font-size: 1em;\\n  line-height: 1.3em;\\n  margin: 0;\\n  padding: 0;\\n  background: #4e4339;\\n}\\na:link,\\na:visited {\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\na:hover {\\n  color: #ccc;\\n  text-shadow: 1px 1px 1px #000;\\n}\\na:active {\\n  color: #aaa;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.outer {\\n  padding: 10px;\\n  min-width: 300px;\\n}\\n.bottom {\\n  position: fixed;\\n  bottom: 10px;\\n  left: 10px;\\n  width: calc(100% - 20px);\\n}\\n.intro {\\n  text-align: center;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.intro * {\\n  line-height: 1em;\\n}\\n.intro h1 {\\n  font-size: 4em;\\n}\\n.intro h2 {\\n  font-size: 2em;\\n}\\n.intro button {\\n  font-family: georgia, arial, helvetica, sans-serif;\\n  font-weight: bold;\\n  font-size: 2em;\\n  padding: 10px;\\n  margin-bottom: 30px;\\n}\\n.intro .help {\\n  color: #ccc;\\n}\\n.intro .help h5 {\\n  font-size: 1.2em;\\n  margin-bottom: 5px;\\n}\\n.intro .help table {\\n  margin-left: auto;\\n  margin-right: auto;\\n  border-spacing: 0;\\n  border-collapse: collapse;\\n}\\n.intro .help tr {\\n  border-bottom: 1px solid #bbb;\\n}\\n.intro .help td {\\n  text-align: left;\\n}\\n.intro .help td.key {\\n  text-align: right;\\n  vertical-align: top;\\n  font-weight: bold;\\n  padding: 8px;\\n}\\n.game-actions {\\n  float: right;\\n  margin: 5px;\\n}\\n.game-actions div {\\n  background: #333;\\n  padding: 3px;\\n  width: 60px;\\n  text-align: center;\\n  font-size: 0.8em;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.game-actions div:active {\\n  background: #000;\\n}\\n.boss {\\n  margin-bottom: 40px;\\n}\\n.boss-name {\\n  padding: 10px;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.raid {\\n  margin-top: 110px;\\n  position: absolute;\\n  width: 150px;\\n  min-height: 400px;\\n  z-index: 1;\\n}\\n.stats {\\n  margin-top: 110px;\\n  position: absolute;\\n  width: calc(100% - 25px);\\n  max-height: 310px;\\n  overflow-y: auto;\\n  color: #fff;\\n  border: 1px solid #000;\\n  box-shadow: 0 0 5px #000;\\n  background: #000;\\n  font-size: 12px;\\n}\\n.stats > table {\\n  width: 100%;\\n}\\n.stats > table th,\\n.stats > table td {\\n  padding: 1px 2px;\\n  white-space: nowrap;\\n  text-align: center;\\n}\\n.stats > table thead tr {\\n  background-color: #333;\\n  color: #fff;\\n  text-align: left;\\n}\\n.stats > table tbody tr:nth-of-type(even) {\\n  background-color: #222;\\n}\\n.stats > table tbody tr:nth-of-type(odd) {\\n  background-color: #111;\\n}\\n.frame {\\n  cursor: pointer;\\n  border: 1px solid #000;\\n  box-shadow: 0 0 5px #000;\\n  background: linear-gradient(to bottom, #666, #000);\\n  color: #fff;\\n  padding: 4px;\\n  border-radius: 4px;\\n}\\n.frame.thin {\\n  padding: 1px;\\n  border-radius: 1px;\\n}\\n.frame.unselectable {\\n  cursor: default;\\n}\\n.frame div {\\n  border-radius: 2px;\\n}\\n.frame.selected {\\n  border: 1px solid #fff;\\n}\\n.health-bar-background {\\n  position: relative;\\n  background: #001800;\\n  border: 1px solid #001800;\\n}\\n.health-bar {\\n  background: linear-gradient(to top right, #00c800, #009600);\\n}\\n.health-bar-text {\\n  top: 0;\\n  left: 4px;\\n  position: absolute;\\n  font-size: 16px;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.health-bar-last-heal {\\n  top: 0;\\n  right: 4px;\\n  position: absolute;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.party {\\n  width: 150px;\\n  z-index: 1;\\n}\\n.party .frame {\\n  margin: 0px 0px 10px 0px;\\n  max-width: 150px;\\n}\\n.party-member {\\n  width: 100%;\\n  max-width: 300px;\\n}\\n.party-member .health-bar {\\n  text-align: center;\\n}\\n.party-member-name {\\n  font-size: 16px;\\n  line-height: 16px;\\n  background: black;\\n  border: 1px solid black;\\n  padding: 4px;\\n}\\n.party-member-name.targeted {\\n  background: linear-gradient(to top, #a00, #300);\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.party-member-health {\\n  background: red;\\n}\\n.party-member-health-bar {\\n  background: green;\\n}\\n.party-member-buffs-container,\\n.party-member-debuffs-container {\\n  position: relative;\\n}\\n.party-member-buffs,\\n.party-member-debuffs {\\n  position: absolute;\\n}\\n.party-member-buffs img,\\n.party-member-debuffs img {\\n  margin-right: 2px;\\n}\\n.party-member-buffs img:nth-last-child(1),\\n.party-member-debuffs img:nth-last-child(1) {\\n  margin: 0;\\n}\\n.party-member-buffs {\\n  right: 60px;\\n  bottom: 40px;\\n}\\n.party-member-debuffs {\\n  right: 8px;\\n  bottom: 40px;\\n}\\n.buff-renew {\\n  color: #0f0;\\n}\\na.icon {\\n  text-decoration: none;\\n}\\n.cast-bar-background {\\n  background: #181800;\\n  border-radius: 4px;\\n  position: relative;\\n  height: 24px;\\n}\\n.cast-bar {\\n  background: linear-gradient(to top, #db7500, #682a00);\\n  border-radius: 4px;\\n  width: 0;\\n  text-align: center;\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n.cast-bar.gcd {\\n  background: linear-gradient(to top, #757575, #2a2a2a);\\n}\\n.cast-bar-text {\\n  left: 4px;\\n  font-size: 16px;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n  top: 0;\\n  left: 50%;\\n  position: absolute;\\n  transform: translate(-50%, 0);\\n  line-height: 24px;\\n  visibility: hidden;\\n}\\n.cast-bar-text.casting,\\n.cast-bar-text.velocity-animating {\\n  visibility: visible;\\n}\\n.cast-bar-cancel {\\n  position: absolute;\\n  top: 2px;\\n  right: 4px;\\n  opacity: 0.5;\\n}\\n.cast-bar-cancel img {\\n  width: 20px;\\n  height: 20px;\\n}\\n.mana-bar-container {\\n  margin-bottom: 10px;\\n}\\n.mana-bar-background {\\n  background: #000018;\\n  border-radius: 4px;\\n  position: relative;\\n  height: 24px;\\n}\\n.mana-bar {\\n  background: linear-gradient(to top, #000096, #0000c8);\\n  border-radius: 4px;\\n  width: 100%;\\n  opacity: 1;\\n  text-align: center;\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\ndiv.mana-regen-bar {\\n  height: 2px;\\n  width: 0;\\n  background: #666;\\n  opacity: 0.5;\\n  border-radius: 0;\\n  border-right: 1px solid #fff;\\n  position: absolute;\\n  bottom: 0;\\n}\\n.mana-bar-text {\\n  left: 4px;\\n  font-size: 16px;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n  top: 0;\\n  left: 50%;\\n  position: absolute;\\n  transform: translate(-50%, 0);\\n  line-height: 24px;\\n}\\n.center-link {\\n  text-align: center;\\n}\\n.toggleStats {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n.actions {\\n  text-align: center;\\n}\\n.action {\\n  position: relative;\\n  width: 60px;\\n  height: 60px;\\n  vertical-align: top;\\n  margin-right: 10px;\\n  display: inline-block;\\n  background: #161616;\\n  border: 1px solid #ccc;\\n  box-shadow: inset 1px 1px 5px #808080, 0 0 10px #000000;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.action:active {\\n  background: black;\\n}\\n.action:nth-last-child(1) {\\n  margin: 0;\\n}\\n.action-name {\\n  padding-top: 15px;\\n}\\n.shortcut {\\n  position: absolute;\\n  top: 0;\\n  right: 4px;\\n  opacity: 0.5;\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.background {\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.absolute-center {\\n  top: 0;\\n  left: 50%;\\n  position: absolute;\\n  transform: translate(-50%, 0);\\n}\\n.white-text-with-background {\\n  color: white;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n.nowrap {\\n  white-space: nowrap;\\n}\\n.bright-green {\\n  color: #0f0;\\n}\\n.bold {\\n  font-weight: bold;\\n}\\n.no-select {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n.disabled {\\n  pointer-events: none;\\n  opacity: 0.5;\\n}\\n", "",{"version":3,"sources":["webpack://./css/app.less"],"names":[],"mappings":"AAAA;EACE,kDAAA;EACA,cAAA;EACA,kBAAA;EACA,SAAA;EACA,UAAA;EACA,mBAAA;AACF;AAEA;;EA4aE,YAAA;EAXA,6BAAA;AA9ZF;AAEA;EACE,WAAA;EA2ZA,6BAAA;AA1ZF;AAGA;EACE,WAAA;EAsZA,6BAAA;AAtZF;AAIA;EACE,aAAA;EACA,gBAAA;AAFF;AAKA;EACE,eAAA;EACA,YAAA;EACA,UAAA;EACA,wBAAA;AAHF;AAMA;EACE,kBAAA;EAgZA,YAAA;EAXA,6BAAA;AAvYF;AACA;EAKI,gBAAA;AAHJ;AAFA;EASI,cAAA;AAJJ;AALA;EAaI,cAAA;AALJ;AARA;EAiBI,kDAAA;EACA,iBAAA;EACA,cAAA;EACA,aAAA;EACA,mBAAA;AANJ;AAfA;EAyBI,WAAA;AAPJ;AAlBA;EA4BM,gBAAA;EACA,kBAAA;AAPN;AAtBA;EAiCM,iBAAA;EACA,kBAAA;EACA,iBAAA;EACA,yBAAA;AARN;AA5BA;EAwCM,6BAAA;AATN;AA/BA;EA4CM,gBAAA;AAVN;AAlCA;EAgDM,iBAAA;EACA,mBAAA;EACA,iBAAA;EACA,YAAA;AAXN;AAgBA;EACE,YAAA;EACA,WAAA;AAdF;AAYA;EAKI,gBAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;EACA,gBAAA;EAgVF,YAAA;EAXA,6BAAA;AAjVF;AAGA;EAcI,gBAAA;AAdJ;AAkBA;EACE,mBAAA;AAhBF;AAmBA;EACE,aAAA;EAkUA,YAAA;EAXA,6BAAA;AAtUF;AAmBA;EACE,iBAAA;EACA,kBAAA;EACA,YAAA;EACA,iBAAA;EACA,UAAA;AAjBF;AAoBA;EACE,iBAAA;EACA,kBAAA;EACA,wBAAA;EACA,iBAAA;EACA,gBAAA;EACA,WAAA;EACA,sBAAA;EACA,wBAAA;EACA,gBAAA;EACA,eAAA;AAlBF;AAQA;EAaI,WAAA;AAlBJ;AAKA;;EAiBM,gBAAA;EACA,mBAAA;EACA,kBAAA;AAlBN;AADA;EAuBM,sBAAA;EACA,WAAA;EACA,gBAAA;AAnBN;AANA;EA6BM,sBAAA;AApBN;AATA;EAiCM,sBAAA;AArBN;AA0BA;EACE,eAAA;EACA,sBAAA;EACA,wBAAA;EACA,kDAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;AAxBF;AA0BE;EACE,YAAA;EACA,kBAAA;AAxBJ;AA2BE;EACE,eAAA;AAzBJ;AAUA;EAmBI,kBAAA;AA1BJ;AA8BA;EACE,sBAAA;AA5BF;AA+BA;EACE,kBAAA;EACA,mBAAA;EACA,yBAAA;AA7BF;AAgCA;EACE,2DAAA;AA9BF;AAiCA;EACE,MAAA;EACA,SAAA;EACA,kBAAA;EAEA,eAAA;EAsOA,YAAA;EAXA,6BAAA;AAzPF;AAkCA;EACE,MAAA;EACA,UAAA;EACA,kBAAA;EAoNA,6BAAA;AAnPF;AAoCA;EACE,YAAA;EACA,UAAA;AAlCF;AAgCA;EAKI,wBAAA;EACA,gBAAA;AAlCJ;AAsCA;EACE,WAAA;EACA,gBAAA;AApCF;AAkCA;EAKI,kBAAA;AApCJ;AAwCA;EACE,eAAA;EACA,iBAAA;EACA,iBAAA;EACA,uBAAA;EACA,YAAA;AAtCF;AAwCE;EACE,+CAAA;EA+LF,YAAA;EAXA,6BAAA;AAxNF;AAyCA;EACE,eAAA;AAvCF;AA0CA;EACE,iBAAA;AAxCF;AA2CA;;EAEE,kBAAA;AAzCF;AA4CA;;EAEE,kBAAA;AA1CF;AAwCA;;EAKI,iBAAA;AAzCJ;AAoCA;;EASI,SAAA;AAzCJ;AA6CA;EACE,WAAA;EACA,YAAA;AA3CF;AA8CA;EACE,UAAA;EACA,YAAA;AA5CF;AA+CA;EACE,WAAA;AA7CF;AAgDA;EACE,qBAAA;AA9CF;AAiDA;EACE,mBAAA;EACA,kBAAA;EACA,kBAAA;EACA,YAAA;AA/CF;AAkDA;EACE,qDAAA;EACA,kBAAA;EACA,QAAA;EAEA,kBAAA;EACA,eAAA;EACA,iBAAA;AAjDF;AAmDE;EACE,qDAAA;AAjDJ;AAqDA;EAhHE,SAAA;EAGA,eAAA;EAsOA,YAAA;EAXA,6BAAA;EAIA,MAAA;EACA,SAAA;EACA,kBAAA;EACA,6BAAA;EAlHA,iBAAA;EACA,kBAAA;AA7CF;AA+CE;;EAEE,mBAAA;AA7CJ;AAiDA;EACE,kBAAA;EACA,QAAA;EACA,UAAA;EACA,YAAA;AA/CF;AA2CA;EAOI,WAAA;EACA,YAAA;AA/CJ;AAmDA;EACE,mBAAA;AAjDF;AAoDA;EACE,mBAAA;EACA,kBAAA;EACA,kBAAA;EACA,YAAA;AAlDF;AAqDA;EACE,qDAAA;EACA,kBAAA;EACA,WAAA;EACA,UAAA;EAEA,kBAAA;EACA,eAAA;EACA,iBAAA;AApDF;AAuDA;EACE,WAAA;EACA,QAAA;EACA,gBAAA;EACA,YAAA;EACA,gBAAA;EACA,4BAAA;EACA,kBAAA;EACA,SAAA;AArDF;AAwDA;EAzKE,SAAA;EAGA,eAAA;EAsOA,YAAA;EAXA,6BAAA;EAIA,MAAA;EACA,SAAA;EACA,kBAAA;EACA,6BAAA;EAzDA,iBAAA;AAhDF;AAmDA;EACE,kBAAA;AAjDF;AAoDA;EAHE,kBAAA;EAKA,mBAAA;AAlDF;AAqDA;EACE,kBAAA;AAnDF;AAsDA;EACE,kBAAA;EACA,WAAA;EACA,YAAA;EACA,mBAAA;EACA,kBAAA;EACA,qBAAA;EACA,mBAAA;EACA,sBAAA;EACA,uDAAA;EAoCA,YAAA;EAXA,6BAAA;AA3EF;AAsDA;EACE,iBAAA;AApDF;AAuDA;EACE,SAAA;AArDF;AAwDA;EACE,iBAAA;AAtDF;AAyDA;EACE,kBAAA;EACA,MAAA;EACA,UAAA;EACA,YAAA;EAgBA,YAAA;EAXA,6BAAA;AA1DF;AAyDA;EACE,6BAAA;AAvDF;AA0DA;EACE,MAAA;EACA,SAAA;EACA,kBAAA;EACA,6BAAA;AAxDF;AA2DA;EACE,YAAA;EAXA,6BAAA;AA7CF;AA4DA;EACE,mBAAA;AA1DF;AA6DA;EACE,WAAA;AA3DF;AA8DA;EACE,iBAAA;AA5DF;AA+DA;EACE,2BAAA;EACA,yBAAA;EACA,wBAAA;EACA,sBAAA;EACA,qBAAA;EACA,iBAAA;AA7DF;AAgEA;EACE,oBAAA;EACA,YAAA;AA9DF","sourcesContent":["body {\\n  font-family: georgia, arial, helvetica, sans-serif;\\n  font-size: 1em;\\n  line-height: 1.3em;\\n  margin: 0;\\n  padding: 0;\\n  background: rgb(78, 67, 57);\\n}\\n\\na:link,\\na:visited {\\n  .white-text-with-background();\\n}\\n\\na:hover {\\n  color: #ccc;\\n  .background();\\n}\\n\\na:active {\\n  color: #aaa;\\n  .background();\\n}\\n\\n.outer {\\n  padding: 10px;\\n  min-width: 300px;\\n}\\n\\n.bottom {\\n  position: fixed;\\n  bottom: 10px;\\n  left: 10px;\\n  width: calc(~\\"100% - 20px\\");\\n}\\n\\n.intro {\\n  text-align: center;\\n  .white-text-with-background();\\n\\n  * {\\n    line-height: 1em;\\n  }\\n\\n  h1 {\\n    font-size: 4em;\\n  }\\n\\n  h2 {\\n    font-size: 2em;\\n  }\\n\\n  button {\\n    font-family: georgia, arial, helvetica, sans-serif;\\n    font-weight: bold;\\n    font-size: 2em;\\n    padding: 10px;\\n    margin-bottom: 30px;\\n  }\\n\\n  .help {\\n    color: #ccc;\\n\\n    h5 {\\n      font-size: 1.2em;\\n      margin-bottom: 5px;\\n    }\\n\\n    table {\\n      margin-left: auto;\\n      margin-right: auto;\\n      border-spacing: 0;\\n      border-collapse: collapse;\\n    }\\n\\n    tr {\\n      border-bottom: 1px solid #bbb;\\n    }\\n\\n    td {\\n      text-align: left;\\n    }\\n\\n    td.key {\\n      text-align: right;\\n      vertical-align: top;\\n      font-weight: bold;\\n      padding: 8px;\\n    }\\n  }\\n}\\n\\n.game-actions {\\n  float: right;\\n  margin: 5px;\\n\\n  div {\\n    background: #333;\\n    padding: 3px;\\n    width: 60px;\\n    text-align: center;\\n    font-size: 0.8em;\\n    .white-text-with-background();\\n  }\\n\\n  div:active {\\n    background: #000;\\n  }\\n}\\n\\n.boss {\\n  margin-bottom: 40px;\\n}\\n\\n.boss-name {\\n  padding: 10px;\\n  .white-text-with-background();\\n}\\n\\n.raid {\\n  margin-top: 110px;\\n  position: absolute;\\n  width: 150px;\\n  min-height: 400px;\\n  z-index: 1;\\n}\\n\\n.stats {\\n  margin-top: 110px;\\n  position: absolute;\\n  width: calc(100% - 25px);\\n  max-height: 310px;\\n  overflow-y: auto;\\n  color: #fff;\\n  border: 1px solid #000;\\n  box-shadow: 0 0 5px #000;\\n  background: #000;\\n  font-size: 12px;\\n\\n  > table {\\n    width: 100%;\\n\\n    th,\\n    td {\\n      padding: 1px 2px;\\n      white-space: nowrap;\\n      text-align: center;\\n    }\\n\\n    thead tr {\\n      background-color: #333;\\n      color: #fff;\\n      text-align: left;\\n    }\\n\\n    tbody tr:nth-of-type(even) {\\n      background-color: #222;\\n    }\\n\\n    tbody tr:nth-of-type(odd) {\\n      background-color: #111;\\n    }\\n  }\\n}\\n\\n.frame {\\n  cursor: pointer;\\n  border: 1px solid #000;\\n  box-shadow: 0 0 5px #000;\\n  background: linear-gradient(to bottom, #666, #000);\\n  color: #fff;\\n  padding: 4px;\\n  border-radius: 4px;\\n\\n  &.thin {\\n    padding: 1px;\\n    border-radius: 1px;\\n  }\\n\\n  &.unselectable {\\n    cursor: default;\\n  }\\n\\n  div {\\n    border-radius: 2px;\\n  }\\n}\\n\\n.frame.selected {\\n  border: 1px solid #fff;\\n}\\n\\n.health-bar-background {\\n  position: relative;\\n  background: rgb(0, 24, 0);\\n  border: 1px solid rgb(0, 24, 0);\\n}\\n\\n.health-bar {\\n  background: linear-gradient(to top right, rgb(0, 200, 0), rgb(0, 150, 0));\\n}\\n\\n.health-bar-text {\\n  top: 0;\\n  left: 4px;\\n  position: absolute;\\n\\n  font-size: 16px;\\n  .white-text-with-background();\\n}\\n\\n.health-bar-last-heal {\\n  top: 0;\\n  right: 4px;\\n  position: absolute;\\n\\n  .background();\\n}\\n\\n.party {\\n  width: 150px;\\n  z-index: 1;\\n\\n  .frame {\\n    margin: 0px 0px 10px 0px;\\n    max-width: 150px;\\n  }\\n}\\n\\n.party-member {\\n  width: 100%;\\n  max-width: 300px;\\n\\n  .health-bar {\\n    text-align: center;\\n  }\\n}\\n\\n.party-member-name {\\n  font-size: 16px;\\n  line-height: 16px;\\n  background: black;\\n  border: 1px solid black;\\n  padding: 4px;\\n\\n  &.targeted {\\n    background: linear-gradient(to top, #a00, #300);\\n    .white-text-with-background();\\n  }\\n}\\n\\n.party-member-health {\\n  background: red;\\n}\\n\\n.party-member-health-bar {\\n  background: green;\\n}\\n\\n.party-member-buffs-container,\\n.party-member-debuffs-container {\\n  position: relative;\\n}\\n\\n.party-member-buffs,\\n.party-member-debuffs {\\n  position: absolute;\\n\\n  img {\\n    margin-right: 2px;\\n  }\\n\\n  img:nth-last-child(1) {\\n    margin: 0;\\n  }\\n}\\n\\n.party-member-buffs {\\n  right: 60px;\\n  bottom: 40px;\\n}\\n\\n.party-member-debuffs {\\n  right: 8px;\\n  bottom: 40px;\\n}\\n\\n.buff-renew {\\n  color: #0f0;\\n}\\n\\na.icon {\\n  text-decoration: none;\\n}\\n\\n.cast-bar-background {\\n  background: rgb(24, 24, 0);\\n  border-radius: 4px;\\n  position: relative;\\n  height: 24px;\\n}\\n\\n.cast-bar {\\n  background: linear-gradient(to top, rgb(219, 117, 0), rgb(104, 42, 0));\\n  border-radius: 4px;\\n  width: 0;\\n\\n  text-align: center;\\n  font-size: 16px;\\n  line-height: 24px;\\n\\n  &.gcd {\\n    background: linear-gradient(to top, rgb(117, 117, 117), rgb(42, 42, 42));\\n  }\\n}\\n\\n.cast-bar-text {\\n  .health-bar-text();\\n  .absolute-center();\\n  line-height: 24px;\\n  visibility: hidden;\\n\\n  &.casting,\\n  &.velocity-animating {\\n    visibility: visible;\\n  }\\n}\\n\\n.cast-bar-cancel {\\n  position: absolute;\\n  top: 2px;\\n  right: 4px;\\n  opacity: 0.5;\\n\\n  img {\\n    width: 20px;\\n    height: 20px;\\n  }\\n}\\n\\n.mana-bar-container {\\n  margin-bottom: 10px;\\n}\\n\\n.mana-bar-background {\\n  background: rgb(0, 0, 24);\\n  border-radius: 4px;\\n  position: relative;\\n  height: 24px;\\n}\\n\\n.mana-bar {\\n  background: linear-gradient(to top, rgb(0, 0, 150), rgb(0, 0, 200));\\n  border-radius: 4px;\\n  width: 100%;\\n  opacity: 1;\\n\\n  text-align: center;\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n\\ndiv.mana-regen-bar {\\n  height: 2px;\\n  width: 0;\\n  background: #666;\\n  opacity: 0.5;\\n  border-radius: 0;\\n  border-right: 1px solid #fff;\\n  position: absolute;\\n  bottom: 0;\\n}\\n\\n.mana-bar-text {\\n  .health-bar-text();\\n  .absolute-center();\\n  line-height: 24px;\\n}\\n\\n.center-link {\\n  text-align: center;\\n}\\n\\n.toggleStats {\\n  .center-link();\\n  margin-bottom: 20px;\\n}\\n\\n.actions {\\n  text-align: center;\\n}\\n\\n.action {\\n  position: relative;\\n  width: 60px;\\n  height: 60px;\\n  vertical-align: top;\\n  margin-right: 10px;\\n  display: inline-block;\\n  background: rgb(22, 22, 22);\\n  border: 1px solid #ccc;\\n  box-shadow: inset 1px 1px 5px rgb(128, 128, 128), 0 0 10px rgb(0, 0, 0);\\n  .white-text-with-background();\\n}\\n\\n.action:active {\\n  background: black;\\n}\\n\\n.action:nth-last-child(1) {\\n  margin: 0;\\n}\\n\\n.action-name {\\n  padding-top: 15px;\\n}\\n\\n.shortcut {\\n  position: absolute;\\n  top: 0;\\n  right: 4px;\\n  opacity: 0.5;\\n  .white-text-with-background();\\n}\\n\\n.background {\\n  text-shadow: 1px 1px 1px #000;\\n}\\n\\n.absolute-center {\\n  top: 0;\\n  left: 50%;\\n  position: absolute;\\n  transform: translate(-50%, 0);\\n}\\n\\n.white-text-with-background {\\n  color: white;\\n  .background();\\n}\\n\\n.nowrap {\\n  white-space: nowrap;\\n}\\n\\n.bright-green {\\n  color: #0f0;\\n}\\n\\n.bold {\\n  font-weight: bold;\\n}\\n\\n.no-select {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n.disabled {\\n  pointer-events: none;\\n  opacity: 0.5;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1921\n')},3645:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += "}";\n      }\n\n      if (item[2]) {\n        content += "}";\n      }\n\n      if (item[4]) {\n        content += "}";\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY0NS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFEQUFxRDtBQUNyRDs7QUFFQTtBQUNBLGdEQUFnRDtBQUNoRDs7QUFFQTtBQUNBLHFGQUFxRjtBQUNyRjs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLEtBQUs7QUFDTCxLQUFLOzs7QUFHTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIscUJBQXFCO0FBQzFDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0ZBQXNGLHFCQUFxQjtBQUMzRztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLGlEQUFpRCxxQkFBcUI7QUFDdEU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3645\n')},7537:module=>{"use strict";eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join("\\n");\n  }\n\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUzNy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanM/YWYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7537\n')},9687:(module,__unused_webpack_exports,__webpack_require__)=>{eval('var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(8527);\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(7672);\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["ko"] === \'undefined\') ___EXPOSE_LOADER_GLOBAL_THIS___["ko"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTY4Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUMsbUJBQU8sQ0FBQyxJQUF3QjtBQUNqRSwwQ0FBMEMsbUJBQU8sQ0FBQyxJQUFzRDtBQUN4RztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi9ub2RlX21vZHVsZXMva25vY2tvdXQvYnVpbGQvb3V0cHV0L2tub2Nrb3V0LWxhdGVzdC1leHBvc2VkLmpzP2M5ZGIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fX0VYUE9TRV9MT0FERVJfSU1QT1JUX19fID0gcmVxdWlyZShcIi0hLi9rbm9ja291dC1sYXRlc3QuanNcIik7XG52YXIgX19fRVhQT1NFX0xPQURFUl9HRVRfR0xPQkFMX1RISVNfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vZXhwb3NlLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0R2xvYmFsVGhpcy5qc1wiKTtcbnZhciBfX19FWFBPU0VfTE9BREVSX0dMT0JBTF9USElTX19fID0gX19fRVhQT1NFX0xPQURFUl9HRVRfR0xPQkFMX1RISVNfX187XG5pZiAodHlwZW9mIF9fX0VYUE9TRV9MT0FERVJfR0xPQkFMX1RISVNfX19bXCJrb1wiXSA9PT0gJ3VuZGVmaW5lZCcpIF9fX0VYUE9TRV9MT0FERVJfR0xPQkFMX1RISVNfX19bXCJrb1wiXSA9IF9fX0VYUE9TRV9MT0FERVJfSU1QT1JUX19fO1xubW9kdWxlLmV4cG9ydHMgPSBfX19FWFBPU0VfTE9BREVSX0lNUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9687\n')},7672:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === "object") {\n    return globalThis;\n  }\n\n  var g;\n\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function("return this")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === "object") {\n      return window;\n    } // This works if the self reference is available\n\n\n    if (typeof self === "object") {\n      return self;\n    } // This works if the global reference is available\n\n\n    if (typeof __webpack_require__.g !== "undefined") {\n      return __webpack_require__.g;\n    }\n  }\n\n  return g;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY3Mi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLE1BQU07OztBQUdOO0FBQ0E7QUFDQSxNQUFNOzs7QUFHTixlQUFlLHFCQUFNO0FBQ3JCLGFBQWEscUJBQU07QUFDbkI7QUFDQTs7QUFFQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi9ub2RlX21vZHVsZXMvZXhwb3NlLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0R2xvYmFsVGhpcy5qcz82MGI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIHJldHVybiBnbG9iYWxUaGlzO1xuICB9XG5cbiAgdmFyIGc7XG5cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICBnID0gdGhpcyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikge1xuICAgICAgcmV0dXJuIHdpbmRvdztcbiAgICB9IC8vIFRoaXMgd29ya3MgaWYgdGhlIHNlbGYgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXG5cbiAgICBpZiAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIHJldHVybiBzZWxmO1xuICAgIH0gLy8gVGhpcyB3b3JrcyBpZiB0aGUgZ2xvYmFsIHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblxuXG4gICAgaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHJldHVybiBnbG9iYWw7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGc7XG59KCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7672\n')},6807:module=>{eval('// Module\nvar code = "\x3c!-- ko if: showIntro --\x3e\\r\\n<div class=\\"outer\\">\\r\\n    <div class=\\"intro\\">\\r\\n        <h1>Heals, please?</h1>\\r\\n        <h2>An MMO healing simulator</h2>\\r\\n        <div>\\r\\n            <button type=\\"button\\" data-bind=\\"click: joinGroupButton_onClick\\">Join group</button>\\r\\n        </div>\\r\\n        <div class=\\"help\\">\\r\\n            <h5>Keyboard shortcuts</h4>\\r\\n            <table>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td class=\\"key\\">1-5</td>\\r\\n                        <td>Cast heal</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\"key\\">Esc</td>\\r\\n                        <td>Cancel cast</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\"key\\">Space</td>\\r\\n                        <td>Cast previous</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\"key\\">QWERT</td>\\r\\n                        <td>Target party member</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\x3c!-- /ko --\x3e\\r\\n\x3c!-- ko ifnot: showIntro --\x3e\\r\\n<div class=\\"outer no-select\\">\\r\\n    \x3c!-- ko if: showStats --\x3e\\r\\n    <div class=\\"stats\\">\\r\\n        <table>\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Heal</th>\\r\\n                    <th>#</th>\\r\\n                    <th>Crits</th>\\r\\n                    <th>Total</th>\\r\\n                    <th>Overheal</th>\\r\\n                    <th>Efficiency</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody data-bind=\\"foreach: stats.healStats\\">\\r\\n                <td data-bind=\\"text: name\\"></td>\\r\\n                <td data-bind=\\"text: numHeals\\"></td>\\r\\n                <td data-bind=\\"text: numCrits\\"></td>\\r\\n                <td data-bind=\\"text: total\\"></td>\\r\\n                <td data-bind=\\"text: overheal\\"></td>\\r\\n                <td data-bind=\\"text: efficiency\\"></td>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n    \x3c!-- /ko --\x3e\\r\\n    \x3c!-- ko ifnot: showStats --\x3e\\r\\n    <div class=\\"raid\\">\\r\\n        <div class=\\"party\\" data-bind=\\"foreach: { data: friendlies.members, as: \'member\' }\\">\\r\\n            <div class=\\"party-member\\">\\r\\n                <div class=\\"frame\\" data-bind=\\"\\r\\n                    click: $parent.player.setTarget,\\r\\n                    css:\\r\\n                        {\\r\\n                            \'selected\': $parent.player.target() === member,\\r\\n                            \'disabled\': member.isDead\\r\\n                        }\\">\\r\\n                    <div class=\\"party-member-name nowrap\\" data-bind=\\"\\r\\n                        text: member.name,\\r\\n                        css: { \'targeted\': $parent.boss().targets.indexOf(member) !== -1 }\\">\\r\\n                    </div>\\r\\n                    <div class=\\"health-bar-background\\">\\r\\n                        <div class=\\"health-bar\\" data-bind=\\"style: { width: member.healthPercentageString }\\">&nbsp;</div>\\r\\n                        <div class=\\"health-bar-text nowrap\\" data-bind=\\"text: member.healthStatusString\\"></div>\\r\\n                        <div class=\\"health-bar-last-heal nowrap\\" data-bind=\\"\\r\\n                            text: member.lastHealStatusString,\\r\\n                            animate: member.lastHealInfo() && animations.fadeOut1000,\\r\\n                            css:\\r\\n                                {\\r\\n                                    \'bold\': member.lastHealInfo() && member.lastHealInfo().isCrit,\\r\\n                                    \'bright-green\': member.lastHealInfo() && member.lastHealInfo().effectiveAmount > 0\\r\\n                                }\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\"party-member-buffs-container\\">\\r\\n                    <div class=\\"party-member-buffs\\" data-bind=\\"foreach: { data: member.buffs, as: \'buff\' }\\">\\r\\n                        <a href=\\"#\\" class=\\"icon\\" data-bind=\\"click: $parents[1].showBuff.bind(null, $data, member)\\"><span data-bind=\\"text: buff.icon, attr: { title: buff.tooltip }\\"></span></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\"party-member-debuffs-container\\">\\r\\n                    <div class=\\"party-member-debuffs\\" data-bind=\\"foreach: { data: member.debuffs, as: \'debuff\' }\\">\\r\\n                        <a href=\\"#\\" class=\\"icon\\" data-bind=\\"click: $parents[1].showDebuff.bind(null, $data, member)\\"><span data-bind=\\"text: debuff.icon, attr: { title: debuff.tooltip }\\"></span></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \x3c!-- /ko --\x3e\\r\\n    <div class=\\"boss frame\\" data-bind=\\"css: { \'casting\': boss().currentCasts }\\">\\r\\n        <div class=\\"health-bar-background\\">\\r\\n            \x3c!-- ko if: !showStats() && (!inCombat() || allowPause) --\x3e\\r\\n            <div class=\\"game-actions frame thin\\">\\r\\n                <div data-bind=\\"click: engageBoss, visible: !inCombat() && !boss().isDead()\\">Engage</div>\\r\\n                \x3c!-- ko if: allowPause --\x3e\\r\\n                <div data-bind=\\"click: pause, visible: inCombat() && !isPaused()\\">Pause</div>\\r\\n                <div data-bind=\\"click: resume, visible: isPaused\\">Resume</div>\\r\\n                \x3c!-- /ko --\x3e\\r\\n            </div>\\r\\n            \x3c!-- /ko --\x3e\\r\\n            \x3c!-- ko if: allowSkip --\x3e\\r\\n            <div class=\\"game-actions frame thin\\">\\r\\n                <div data-bind=\\"click: skip\\">Skip</div>\\r\\n            </div>\\r\\n            \x3c!-- /ko --\x3e\\r\\n            <div class=\\"health-bar\\" data-bind=\\"style: { width: boss().healthPercentageString }\\">\\r\\n                <div class=\\"boss-name nowrap\\" data-bind=\\"text: boss().label\\">&nbsp;</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\"boss-cast-bars\\" data-bind=\\"foreach: { data: boss().currentCasts, as: \'bossCast\' }\\">\\r\\n            <div class=\\"cast-bar-background\\">\\r\\n                <div class=\\"cast-bar\\" data-bind=\\"\\r\\n                    animate: bossCast.value() || $parent.animations.fadeOut200,\\r\\n                    animateAction: bossCast && bossCast.action\\">&nbsp;</div>\\r\\n\\r\\n                <div class=\\"cast-bar-text nowrap\\" data-bind=\\"\\r\\n                    css: { \'casting\': bossCast.value },\\r\\n                    text: bossCast && bossCast.previous() && bossCast.previous().name,\\r\\n                    animate: !bossCast.value && $parent.animations.fadeOut200\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\"bottom no-select\\">\\r\\n    \x3c!-- ko if: showStats --\x3e\\r\\n    <div class=\\"center-link\\"><a href=\\"#\\" data-bind=\\"click: resetStats_onClick\\">Reset stats</a></div>\\r\\n    \x3c!-- /ko --\x3e\\r\\n    \x3c!-- ko ifnot: inCombat --\x3e\\r\\n    <div class=\\"toggleStats\\"><a href=\\"#\\" data-bind=\\"text: toggleStatsLink, click: toggleStats_onClick\\"></a></div>\\r\\n    \x3c!-- /ko --\x3e\\r\\n    <div class=\\"cast-bar-container frame thin unselectable\\">\\r\\n        <div class=\\"cast-bar-background\\">\\r\\n            <div class=\\"cast-bar\\" data-bind=\\"\\r\\n                css: { \'gcd\': (player.currentCast.value() && player.currentCast.value().isInstant) || (player.currentCast.previous() && player.currentCast.previous().isInstant) },\\r\\n                animate: player.currentCast.value() || animations.fadeOut200,\\r\\n                animateAction: player.currentCast.action\\">&nbsp;</div>\\r\\n\\r\\n            <div class=\\"cast-bar-text nowrap\\" data-bind=\\"\\r\\n                css: { \'casting\': player.currentCast.value },\\r\\n                text: player.currentCast.previous() && player.currentCast.previous().name,\\r\\n                animate: !player.currentCast.value() && animations.fadeOut200\\"></div>\\r\\n\\r\\n            \x3c!-- ko if: player.currentCast.value() && !player.currentCast.value().isInstant --\x3e\\r\\n            <div class=\\"cast-bar-cancel\\" data-bind=\\"click: cancelCast\\"><span title=\\"Cancel cast\\">❌</span></div>\\r\\n            \x3c!-- /ko --\x3e\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"mana-bar-container frame thin unselectable\\" data-bind=\\"css: { \'casting\': player.currentCast.value }\\">\\r\\n        <div class=\\"mana-bar-background\\">\\r\\n            <div class=\\"mana-bar\\" data-bind=\\"style: { width: player.manaPercentageString }\\">&nbsp;</div>\\r\\n            <div class=\\"mana-regen-bar\\" data-bind=\\"animate: player.regenManaNotifier() && player.regenManaAnimation\\">&nbsp;</div>\\r\\n            <div class=\\"mana-bar-text nowrap\\" data-bind=\\"text: player.manaStatusString\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"actions\\" data-bind=\\"\\r\\n        foreach: { data: player.actions, as: \'action\' },\\r\\n        css: { \'disabled\': player.isDead }\\">\\r\\n\\r\\n        <div class=\\"action frame\\" data-bind=\\"click: $parent.cast\\">\\r\\n            <div class=\\"action-name\\" data-bind=\\"text: action\\"></div>\\r\\n            <div class=\\"shortcut\\" data-bind=\\"text: $index() + 1\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\x3c!-- /ko --\x3e";\n// Exports\nmodule.exports = code;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6807\n')},8527:(module,exports,__webpack_require__)=>{eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Knockout JavaScript library v3.5.1\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function() {(function(n){var A=this||(0,eval)("this"),w=A.document,R=A.navigator,v=A.jQuery,H=A.JSON;v||"undefined"===typeof jQuery||(v=jQuery);(function(n){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__], __WEBPACK_AMD_DEFINE_FACTORY__ = (n),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0})(function(S,T){function K(a,c){return null===a||typeof a in W?a===c:!1}function X(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function Y(b,c){var d;return function(){clearTimeout(d);\nd=a.a.setTimeout(b,c)}}function Z(a,c){c&&"change"!==c?"beforeChange"===c?this.pc(a):this.gb(a,c):this.qc(a)}function aa(a,c){null!==c&&c.s&&c.s()}function ba(a,c){var d=this.qd,e=d[r];e.ra||(this.Qb&&this.mb[c]?(d.uc(c,a,this.mb[c]),this.mb[c]=null,--this.Qb):e.I[c]||d.uc(c,a,e.J?{da:a}:d.$c(a)),a.Ja&&a.gd())}var a="undefined"!==typeof S?S:{};a.b=function(b,c){for(var d=b.split("."),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.L=function(a,c,d){a[c]=d};a.version="3.5.1";a.b("version",\na.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1,foreachHidesDestroyed:!1};a.a=function(){function b(a,b){for(var c in a)f.call(a,c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)f.call(b,c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}function e(b,c,d,e){var l=b[c].match(q)||[];a.a.D(d.match(q),function(b){a.a.Na(l,b,e)});b[c]=l.join(" ")}var f=Object.prototype.hasOwnProperty,g={__proto__:[]}instanceof Array,h="function"===typeof Symbol,m={},k={};m[R&&/Firefox\\/2/i.test(R.userAgent)?\n"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];m.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(m,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)k[b[c]]=a});var l={propertychange:!0},p=w&&function(){for(var a=3,b=w.createElement("div"),c=b.getElementsByTagName("i");b.innerHTML="\\x3c!--[if gt IE "+ ++a+"]><i></i><![endif]--\\x3e",c[0];);return 4<a?a:n}(),q=/\\S+/g,t;return{Jc:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],\nD:function(a,b,c){for(var d=0,e=a.length;d<e;d++)b.call(c,a[d],d,a)},A:"function"==typeof Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b)}:function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Lb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d,a))return a[d];return n},Pa:function(b,c){var d=a.a.A(b,c);0<d?b.splice(d,1):0===d&&b.shift()},wc:function(b){var c=[];b&&a.a.D(b,function(b){0>a.a.A(c,b)&&c.push(b)});return c},Mb:function(a,\nb,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)d.push(b.call(c,a[e],e));return d},jb:function(a,b,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)b.call(c,a[e],e)&&d.push(a[e]);return d},Nb:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},Na:function(b,c,d){var e=a.a.A(a.a.bc(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},Ba:g,extend:c,setPrototypeOf:d,Ab:g?d:c,P:b,Ga:function(a,b,c){if(!a)return a;var d={},e;for(e in a)f.call(a,e)&&(d[e]=\nb.call(c,a[e],e,a));return d},Tb:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},Yb:function(b){b=a.a.la(b);for(var c=(b[0]&&b[0].ownerDocument||w).createElement("div"),d=0,e=b.length;d<e;d++)c.appendChild(a.oa(b[d]));return c},Ca:function(b,c){for(var d=0,e=b.length,l=[];d<e;d++){var k=b[d].cloneNode(!0);l.push(c?a.oa(k):k)}return l},va:function(b,c){a.a.Tb(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},Xc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],\nl=e.parentNode,k=0,f=c.length;k<f;k++)l.insertBefore(c[k],e);k=0;for(f=d.length;k<f;k++)a.removeNode(d[k])}},Ua:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),c=c.nextSibling;a.push(d)}}return a},Zc:function(a,b){7>p?a.setAttribute("selected",b):a.selected=b},Db:function(a){return null===a||a===n?"":a.trim?\na.trim():a.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,"")},Ud:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},vd:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(1!==a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},Sb:function(b){return a.a.vd(b,b.ownerDocument.documentElement)},kd:function(b){return!!a.a.Lb(b,a.a.Sb)},R:function(a){return a&&\na.tagName&&a.tagName.toLowerCase()},Ac:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Ac(b),c)},Gc:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},B:function(b,c,d){var e=a.a.Ac(d);d=l[c];if(a.options.useOnlyNativeEvents||d||!v)if(d||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var k=function(a){e.call(b,a)},f="on"+c;b.attachEvent(f,\nk);a.a.K.za(b,function(){b.detachEvent(f,k)})}else throw Error("Browser doesn\'t support addEventListener or attachEvent");else b.addEventListener(c,e,!1);else t||(t="function"==typeof v(b).on?"on":"bind"),v(b)[t](c,e)},Fb:function(b,c){if(!b||!b.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var d;"input"===a.a.R(b)&&b.type&&"click"==c.toLowerCase()?(d=b.type,d="checkbox"==d||"radio"==d):d=!1;if(a.options.useOnlyNativeEvents||!v||d)if("function"==typeof w.createEvent)if("function"==\ntypeof b.dispatchEvent)d=w.createEvent(k[c]||"HTMLEvents"),d.initEvent(c,!0,!0,A,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error("The supplied element doesn\'t support dispatchEvent");else if(d&&b.click)b.click();else if("undefined"!=typeof b.fireEvent)b.fireEvent("on"+c);else throw Error("Browser doesn\'t support triggering events");else v(b).trigger(c)},f:function(b){return a.O(b)?b():b},bc:function(b){return a.O(b)?b.v():b},Eb:function(b,c,d){var l;c&&("object"===typeof b.classList?\n(l=b.classList[d?"add":"remove"],a.a.D(c.match(q),function(a){l.call(b.classList,a)})):"string"===typeof b.className.baseVal?e(b.className,"baseVal",c,d):e(b,"className",c,d))},Bb:function(b,c){var d=a.a.f(c);if(null===d||d===n)d="";var e=a.h.firstChild(b);!e||3!=e.nodeType||a.h.nextSibling(e)?a.h.va(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.Ad(b)},Yc:function(a,b){a.name=b;if(7>=p)try{var c=a.name.replace(/[&<>\'"]/g,function(a){return"&#"+a.charCodeAt(0)+";"});a.mergeAttributes(w.createElement("<input name=\'"+\nc+"\'/>"),!1)}catch(d){}},Ad:function(a){9<=p&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},wd:function(a){if(p){var b=a.style.width;a.style.width=0;a.style.width=b}},Pd:function(b,c){b=a.a.f(b);c=a.a.f(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},la:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Da:function(a){return h?Symbol(a):a},Zd:6===p,$d:7===p,W:p,Lc:function(b,c){for(var d=a.a.la(b.getElementsByTagName("input")).concat(a.a.la(b.getElementsByTagName("textarea"))),\ne="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},l=[],k=d.length-1;0<=k;k--)e(d[k])&&l.push(d[k]);return l},Nd:function(b){return"string"==typeof b&&(b=a.a.Db(b))?H&&H.parse?H.parse(b):(new Function("return "+b))():null},hc:function(b,c,d){if(!H||!H.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don\'t support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");\nreturn H.stringify(a.a.f(b),c,d)},Od:function(c,d,e){e=e||{};var l=e.params||{},k=e.includeFields||this.Jc,f=c;if("object"==typeof c&&"form"===a.a.R(c))for(var f=c.action,h=k.length-1;0<=h;h--)for(var g=a.a.Lc(c,k[h]),m=g.length-1;0<=m;m--)l[g[m].name]=g[m].value;d=a.a.f(d);var p=w.createElement("form");p.style.display="none";p.action=f;p.method="post";for(var q in d)c=w.createElement("input"),c.type="hidden",c.name=q,c.value=a.a.hc(a.a.f(d[q])),p.appendChild(c);b(l,function(a,b){var c=w.createElement("input");\nc.type="hidden";c.name=a;c.value=b;p.appendChild(c)});w.body.appendChild(p);e.submitter?e.submitter(p):p.submit();setTimeout(function(){p.parentNode.removeChild(p)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.D);a.b("utils.arrayFirst",a.a.Lb);a.b("utils.arrayFilter",a.a.jb);a.b("utils.arrayGetDistinctValues",a.a.wc);a.b("utils.arrayIndexOf",a.a.A);a.b("utils.arrayMap",a.a.Mb);a.b("utils.arrayPushAll",a.a.Nb);a.b("utils.arrayRemoveItem",a.a.Pa);a.b("utils.cloneNodes",a.a.Ca);a.b("utils.createSymbolOrString",\na.a.Da);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",a.a.Jc);a.b("utils.getFormFields",a.a.Lc);a.b("utils.objectMap",a.a.Ga);a.b("utils.peekObservable",a.a.bc);a.b("utils.postJson",a.a.Od);a.b("utils.parseJson",a.a.Nd);a.b("utils.registerEventHandler",a.a.B);a.b("utils.stringifyJson",a.a.hc);a.b("utils.range",a.a.Pd);a.b("utils.toggleDomNodeCssClass",a.a.Eb);a.b("utils.triggerEvent",a.a.Fb);a.b("utils.unwrapObservable",a.a.f);a.b("utils.objectForEach",a.a.P);a.b("utils.addOrRemoveItem",\na.a.Na);a.b("utils.setTextContent",a.a.Bb);a.b("unwrap",a.a.f);Function.prototype.bind||(Function.prototype.bind=function(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.g=new function(){var b=0,c="__ko__"+(new Date).getTime(),d={},e,f;a.a.W?(e=function(a,e){var f=a[c];if(!f||"null"===f||!d[f]){if(!e)return n;f=a[c]="ko"+b++;d[f]=\n{}}return d[f]},f=function(a){var b=a[c];return b?(delete d[b],a[c]=null,!0):!1}):(e=function(a,b){var d=a[c];!d&&b&&(d=a[c]={});return d},f=function(a){return a[c]?(delete a[c],!0):!1});return{get:function(a,b){var c=e(a,!1);return c&&c[b]},set:function(a,b,c){(a=e(a,c!==n))&&(a[b]=c)},Ub:function(a,b,c){a=e(a,!0);return a[b]||(a[b]=c)},clear:f,Z:function(){return b++ +c}}};a.b("utils.domData",a.a.g);a.b("utils.domData.clear",a.a.g.clear);a.a.K=new function(){function b(b,c){var d=a.a.g.get(b,e);\nd===n&&c&&(d=[],a.a.g.set(b,e,d));return d}function c(c){var e=b(c,!1);if(e)for(var e=e.slice(0),k=0;k<e.length;k++)e[k](c);a.a.g.clear(c);a.a.K.cleanExternalData(c);g[c.nodeType]&&d(c.childNodes,!0)}function d(b,d){for(var e=[],l,f=0;f<b.length;f++)if(!d||8===b[f].nodeType)if(c(e[e.length]=l=b[f]),b[f]!==l)for(;f--&&-1==a.a.A(e,b[f]););}var e=a.a.g.Z(),f={1:!0,8:!0,9:!0},g={1:!0,9:!0};return{za:function(a,c){if("function"!=typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},yb:function(c,\nd){var f=b(c,!1);f&&(a.a.Pa(f,d),0==f.length&&a.a.g.set(c,e,n))},oa:function(b){a.u.G(function(){f[b.nodeType]&&(c(b),g[b.nodeType]&&d(b.getElementsByTagName("*")))});return b},removeNode:function(b){a.oa(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){v&&"function"==typeof v.cleanData&&v.cleanData([a])}}};a.oa=a.a.K.oa;a.removeNode=a.a.K.removeNode;a.b("cleanNode",a.oa);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.K);a.b("utils.domNodeDisposal.addDisposeCallback",\na.a.K.za);a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.K.yb);(function(){var b=[0,"",""],c=[1,"<table>","</table>"],d=[3,"<table><tbody><tr>","</tr></tbody></table>"],e=[1,"<select multiple=\'multiple\'>","</select>"],f={thead:c,tbody:c,tfoot:c,tr:[2,"<table><tbody>","</tbody></table>"],td:d,th:d,option:e,optgroup:e},g=8>=a.a.W;a.a.ua=function(c,d){var e;if(v)if(v.parseHTML)e=v.parseHTML(c,d)||[];else{if((e=v.clean([c],d))&&e[0]){for(var l=e[0];l.parentNode&&11!==l.parentNode.nodeType;)l=l.parentNode;\nl.parentNode&&l.parentNode.removeChild(l)}}else{(e=d)||(e=w);var l=e.parentWindow||e.defaultView||A,p=a.a.Db(c).toLowerCase(),q=e.createElement("div"),t;t=(p=p.match(/^(?:\\x3c!--.*?--\\x3e\\s*?)*?<([a-z]+)[\\s>]/))&&f[p[1]]||b;p=t[0];t="ignored<div>"+t[1]+c+t[2]+"</div>";"function"==typeof l.innerShiv?q.appendChild(l.innerShiv(t)):(g&&e.body.appendChild(q),q.innerHTML=t,g&&q.parentNode.removeChild(q));for(;p--;)q=q.lastChild;e=a.a.la(q.lastChild.childNodes)}return e};a.a.Md=function(b,c){var d=a.a.ua(b,\nc);return d.length&&d[0].parentElement||a.a.Yb(d)};a.a.fc=function(b,c){a.a.Tb(b);c=a.a.f(c);if(null!==c&&c!==n)if("string"!=typeof c&&(c=c.toString()),v)v(b).html(c);else for(var d=a.a.ua(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b("utils.parseHtmlFragment",a.a.ua);a.b("utils.setHtml",a.a.fc);a.aa=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.aa.Uc(c.nodeValue);null!=f&&e.push({ud:c,Kd:f})}else if(1==c.nodeType)for(var f=0,g=c.childNodes,h=g.length;f<h;f++)b(g[f],\ne)}var c={};return{Xb:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return"\\x3c!--[ko_memo:"+b+"]--\\x3e"},bd:function(a,b){var f=c[a];if(f===n)throw Error("Couldn\'t find any memo with ID "+a+". Perhaps it\'s already been unmemoized.");try{return f.apply(null,b||[]),!0}finally{delete c[a]}},cd:function(c,e){var f=\n[];b(c,f);for(var g=0,h=f.length;g<h;g++){var m=f[g].ud,k=[m];e&&a.a.Nb(k,e);a.aa.bd(f[g].Kd,k);m.nodeValue="";m.parentNode&&m.parentNode.removeChild(m)}},Uc:function(a){return(a=a.match(/^\\[ko_memo\\:(.*?)\\]$/))?a[1]:null}}}();a.b("memoization",a.aa);a.b("memoization.memoize",a.aa.Xb);a.b("memoization.unmemoize",a.aa.bd);a.b("memoization.parseMemoText",a.aa.Uc);a.b("memoization.unmemoizeDomNodeAndDescendants",a.aa.cd);a.na=function(){function b(){if(f)for(var b=f,c=0,d;h<f;)if(d=e[h++]){if(h>b){if(5E3<=\n++c){h=f;a.a.Gc(Error("\'Too much recursion\' after processing "+c+" task groups."));break}b=f}try{d()}catch(p){a.a.Gc(p)}}}function c(){b();h=f=e.length=0}var d,e=[],f=0,g=1,h=0;A.MutationObserver?d=function(a){var b=w.createElement("div");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle("foo")}}(c):d=w&&"onreadystatechange"in w.createElement("script")?function(a){var b=w.createElement("script");b.onreadystatechange=function(){b.onreadystatechange=null;w.documentElement.removeChild(b);\nb=null;a()};w.documentElement.appendChild(b)}:function(a){setTimeout(a,0)};return{scheduler:d,zb:function(b){f||a.na.scheduler(c);e[f++]=b;return g++},cancel:function(a){a=a-(g-f);a>=h&&a<f&&(e[a]=null)},resetForTesting:function(){var a=f-h;h=f=e.length=0;return a},Sd:b}}();a.b("tasks",a.na);a.b("tasks.schedule",a.na.zb);a.b("tasks.runEarly",a.na.Sd);a.Ta={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.$({read:b,write:function(e){clearTimeout(d);d=a.a.setTimeout(function(){b(e)},\nc)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);a.Hb=!1;f="function"==typeof e?e:"notifyWhenChangesStop"==e?Y:X;a.ub(function(a){return f(a,d,c)})},deferred:function(b,c){if(!0!==c)throw Error("The \'deferred\' extender only accepts the value \'true\', because it is not supported to turn deferral off once enabled.");b.Hb||(b.Hb=!0,b.ub(function(c){var e,f=!1;return function(){if(!f){a.na.cancel(e);e=a.na.zb(c);try{f=!0,b.notifySubscribers(n,"dirty")}finally{f=\n!1}}}}))},notify:function(a,c){a.equalityComparer="always"==c?null:K}};var W={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.Ta);a.ic=function(b,c,d){this.da=b;this.lc=c;this.mc=d;this.Ib=!1;this.fb=this.Jb=null;a.L(this,"dispose",this.s);a.L(this,"disposeWhenNodeIsRemoved",this.l)};a.ic.prototype.s=function(){this.Ib||(this.fb&&a.a.K.yb(this.Jb,this.fb),this.Ib=!0,this.mc(),this.da=this.lc=this.mc=this.Jb=this.fb=null)};a.ic.prototype.l=function(b){this.Jb=b;a.a.K.za(b,this.fb=this.s.bind(this))};\na.T=function(){a.a.Ab(this,D);D.qb(this)};var D={qb:function(a){a.U={change:[]};a.sc=1},subscribe:function(b,c,d){var e=this;d=d||"change";var f=new a.ic(e,c?b.bind(c):b,function(){a.a.Pa(e.U[d],f);e.hb&&e.hb(d)});e.Qa&&e.Qa(d);e.U[d]||(e.U[d]=[]);e.U[d].push(f);return f},notifySubscribers:function(b,c){c=c||"change";"change"===c&&this.Gb();if(this.Wa(c)){var d="change"===c&&this.ed||this.U[c].slice(0);try{a.u.xc();for(var e=0,f;f=d[e];++e)f.Ib||f.lc(b)}finally{a.u.end()}}},ob:function(){return this.sc},\nDd:function(a){return this.ob()!==a},Gb:function(){++this.sc},ub:function(b){var c=this,d=a.O(c),e,f,g,h,m;c.gb||(c.gb=c.notifySubscribers,c.notifySubscribers=Z);var k=b(function(){c.Ja=!1;d&&h===c&&(h=c.nc?c.nc():c());var a=f||m&&c.sb(g,h);m=f=e=!1;a&&c.gb(g=h)});c.qc=function(a,b){b&&c.Ja||(m=!b);c.ed=c.U.change.slice(0);c.Ja=e=!0;h=a;k()};c.pc=function(a){e||(g=a,c.gb(a,"beforeChange"))};c.rc=function(){m=!0};c.gd=function(){c.sb(g,c.v(!0))&&(f=!0)}},Wa:function(a){return this.U[a]&&this.U[a].length},\nBd:function(b){if(b)return this.U[b]&&this.U[b].length||0;var c=0;a.a.P(this.U,function(a,b){"dirty"!==a&&(c+=b.length)});return c},sb:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},toString:function(){return"[object Object]"},extend:function(b){var c=this;b&&a.a.P(b,function(b,e){var f=a.Ta[b];"function"==typeof f&&(c=f(c,e)||c)});return c}};a.L(D,"init",D.qb);a.L(D,"subscribe",D.subscribe);a.L(D,"extend",D.extend);a.L(D,"getSubscriptionsCount",D.Bd);a.a.Ba&&a.a.setPrototypeOf(D,\nFunction.prototype);a.T.fn=D;a.Qc=function(a){return null!=a&&"function"==typeof a.subscribe&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.T);a.b("isSubscribable",a.Qc);a.S=a.u=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{xc:b,end:c,cc:function(b){if(e){if(!a.Qc(b))throw Error("Only subscribable things can act as dependencies");e.od.call(e.pd,b,b.fd||(b.fd=++f))}},G:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},qa:function(){if(e)return e.o.qa()},\nVa:function(){if(e)return e.o.Va()},Ya:function(){if(e)return e.Ya},o:function(){if(e)return e.o}}}();a.b("computedContext",a.S);a.b("computedContext.getDependenciesCount",a.S.qa);a.b("computedContext.getDependencies",a.S.Va);a.b("computedContext.isInitial",a.S.Ya);a.b("computedContext.registerDependency",a.S.cc);a.b("ignoreDependencies",a.Yd=a.u.G);var I=a.a.Da("_latestValue");a.ta=function(b){function c(){if(0<arguments.length)return c.sb(c[I],arguments[0])&&(c.ya(),c[I]=arguments[0],c.xa()),this;\na.u.cc(c);return c[I]}c[I]=b;a.a.Ba||a.a.extend(c,a.T.fn);a.T.fn.qb(c);a.a.Ab(c,F);a.options.deferUpdates&&a.Ta.deferred(c,!0);return c};var F={equalityComparer:K,v:function(){return this[I]},xa:function(){this.notifySubscribers(this[I],"spectate");this.notifySubscribers(this[I])},ya:function(){this.notifySubscribers(this[I],"beforeChange")}};a.a.Ba&&a.a.setPrototypeOf(F,a.T.fn);var G=a.ta.Ma="__ko_proto__";F[G]=a.ta;a.O=function(b){if((b="function"==typeof b&&b[G])&&b!==F[G]&&b!==a.o.fn[G])throw Error("Invalid object that looks like an observable; possibly from another Knockout instance");\nreturn!!b};a.Za=function(b){return"function"==typeof b&&(b[G]===F[G]||b[G]===a.o.fn[G]&&b.Nc)};a.b("observable",a.ta);a.b("isObservable",a.O);a.b("isWriteableObservable",a.Za);a.b("isWritableObservable",a.Za);a.b("observable.fn",F);a.L(F,"peek",F.v);a.L(F,"valueHasMutated",F.xa);a.L(F,"valueWillMutate",F.ya);a.Ha=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");b=a.ta(b);a.a.Ab(b,\na.Ha.fn);return b.extend({trackArrayChanges:!0})};a.Ha.fn={remove:function(b){for(var c=this.v(),d=[],e="function"!=typeof b||a.O(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];if(e(g)){0===d.length&&this.ya();if(c[f]!==g)throw Error("Array modified during remove; cannot remove item");d.push(g);c.splice(f,1);f--}}d.length&&this.xa();return d},removeAll:function(b){if(b===n){var c=this.v(),d=c.slice(0);this.ya();c.splice(0,c.length);this.xa();return d}return b?this.remove(function(c){return 0<=\na.a.A(b,c)}):[]},destroy:function(b){var c=this.v(),d="function"!=typeof b||a.O(b)?function(a){return a===b}:b;this.ya();for(var e=c.length-1;0<=e;e--){var f=c[e];d(f)&&(f._destroy=!0)}this.xa()},destroyAll:function(b){return b===n?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.A(b,c)}):[]},indexOf:function(b){var c=this();return a.a.A(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.ya(),this.v()[d]=c,this.xa())},sorted:function(a){var c=this().slice(0);\nreturn a?c.sort(a):c.sort()},reversed:function(){return this().slice(0).reverse()}};a.a.Ba&&a.a.setPrototypeOf(a.Ha.fn,a.ta.fn);a.a.D("pop push reverse shift sort splice unshift".split(" "),function(b){a.Ha.fn[b]=function(){var a=this.v();this.ya();this.zc(a,b,arguments);var d=a[b].apply(a,arguments);this.xa();return d===a?this:d}});a.a.D(["slice"],function(b){a.Ha.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.Pc=function(b){return a.O(b)&&"function"==typeof b.remove&&"function"==\ntypeof b.push};a.b("observableArray",a.Ha);a.b("isObservableArray",a.Pc);a.Ta.trackArrayChanges=function(b,c){function d(){function c(){if(m){var d=[].concat(b.v()||[]),e;if(b.Wa("arrayChange")){if(!f||1<m)f=a.a.Pb(k,d,b.Ob);e=f}k=d;f=null;m=0;e&&e.length&&b.notifySubscribers(e,"arrayChange")}}e?c():(e=!0,h=b.subscribe(function(){++m},null,"spectate"),k=[].concat(b.v()||[]),f=null,g=b.subscribe(c))}b.Ob={};c&&"object"==typeof c&&a.a.extend(b.Ob,c);b.Ob.sparse=!0;if(!b.zc){var e=!1,f=null,g,h,m=0,\nk,l=b.Qa,p=b.hb;b.Qa=function(a){l&&l.call(b,a);"arrayChange"===a&&d()};b.hb=function(a){p&&p.call(b,a);"arrayChange"!==a||b.Wa("arrayChange")||(g&&g.s(),h&&h.s(),h=g=null,e=!1,k=n)};b.zc=function(b,c,d){function l(a,b,c){return k[k.length]={status:a,value:b,index:c}}if(e&&!m){var k=[],p=b.length,g=d.length,h=0;switch(c){case "push":h=p;case "unshift":for(c=0;c<g;c++)l("added",d[c],h+c);break;case "pop":h=p-1;case "shift":p&&l("deleted",b[h],h);break;case "splice":c=Math.min(Math.max(0,0>d[0]?p+d[0]:\nd[0]),p);for(var p=1===g?p:Math.min(c+(d[1]||0),p),g=c+g-2,h=Math.max(p,g),U=[],L=[],n=2;c<h;++c,++n)c<p&&L.push(l("deleted",b[c],c)),c<g&&U.push(l("added",d[n],c));a.a.Kc(L,U);break;default:return}f=k}}}};var r=a.a.Da("_state");a.o=a.$=function(b,c,d){function e(){if(0<arguments.length){if("function"===typeof f)f.apply(g.nb,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a \'write\' option. If you wish to read the current value, don\'t pass any parameters.");return this}g.ra||\na.u.cc(e);(g.ka||g.J&&e.Xa())&&e.ha();return g.X}"object"===typeof b?d=b:(d=d||{},b&&(d.read=b));if("function"!=typeof d.read)throw Error("Pass a function that returns the value of the ko.computed");var f=d.write,g={X:n,sa:!0,ka:!0,rb:!1,jc:!1,ra:!1,wb:!1,J:!1,Wc:d.read,nb:c||d.owner,l:d.disposeWhenNodeIsRemoved||d.l||null,Sa:d.disposeWhen||d.Sa,Rb:null,I:{},V:0,Ic:null};e[r]=g;e.Nc="function"===typeof f;a.a.Ba||a.a.extend(e,a.T.fn);a.T.fn.qb(e);a.a.Ab(e,C);d.pure?(g.wb=!0,g.J=!0,a.a.extend(e,da)):\nd.deferEvaluation&&a.a.extend(e,ea);a.options.deferUpdates&&a.Ta.deferred(e,!0);g.l&&(g.jc=!0,g.l.nodeType||(g.l=null));g.J||d.deferEvaluation||e.ha();g.l&&e.ja()&&a.a.K.za(g.l,g.Rb=function(){e.s()});return e};var C={equalityComparer:K,qa:function(){return this[r].V},Va:function(){var b=[];a.a.P(this[r].I,function(a,d){b[d.Ka]=d.da});return b},Vb:function(b){if(!this[r].V)return!1;var c=this.Va();return-1!==a.a.A(c,b)?!0:!!a.a.Lb(c,function(a){return a.Vb&&a.Vb(b)})},uc:function(a,c,d){if(this[r].wb&&\nc===this)throw Error("A \'pure\' computed must not be called recursively");this[r].I[a]=d;d.Ka=this[r].V++;d.La=c.ob()},Xa:function(){var a,c,d=this[r].I;for(a in d)if(Object.prototype.hasOwnProperty.call(d,a)&&(c=d[a],this.Ia&&c.da.Ja||c.da.Dd(c.La)))return!0},Jd:function(){this.Ia&&!this[r].rb&&this.Ia(!1)},ja:function(){var a=this[r];return a.ka||0<a.V},Rd:function(){this.Ja?this[r].ka&&(this[r].sa=!0):this.Hc()},$c:function(a){if(a.Hb){var c=a.subscribe(this.Jd,this,"dirty"),d=a.subscribe(this.Rd,\nthis);return{da:a,s:function(){c.s();d.s()}}}return a.subscribe(this.Hc,this)},Hc:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[r].Ic),this[r].Ic=a.a.setTimeout(function(){b.ha(!0)},c)):b.Ia?b.Ia(!0):b.ha(!0)},ha:function(b){var c=this[r],d=c.Sa,e=!1;if(!c.rb&&!c.ra){if(c.l&&!a.a.Sb(c.l)||d&&d()){if(!c.jc){this.s();return}}else c.jc=!1;c.rb=!0;try{e=this.zd(b)}finally{c.rb=!1}return e}},zd:function(b){var c=this[r],d=!1,e=c.wb?n:!c.V,d={qd:this,mb:c.I,Qb:c.V};a.u.xc({pd:d,\nod:ba,o:this,Ya:e});c.I={};c.V=0;var f=this.yd(c,d);c.V?d=this.sb(c.X,f):(this.s(),d=!0);d&&(c.J?this.Gb():this.notifySubscribers(c.X,"beforeChange"),c.X=f,this.notifySubscribers(c.X,"spectate"),!c.J&&b&&this.notifySubscribers(c.X),this.rc&&this.rc());e&&this.notifySubscribers(c.X,"awake");return d},yd:function(b,c){try{var d=b.Wc;return b.nb?d.call(b.nb):d()}finally{a.u.end(),c.Qb&&!b.J&&a.a.P(c.mb,aa),b.sa=b.ka=!1}},v:function(a){var c=this[r];(c.ka&&(a||!c.V)||c.J&&this.Xa())&&this.ha();return c.X},\nub:function(b){a.T.fn.ub.call(this,b);this.nc=function(){this[r].J||(this[r].sa?this.ha():this[r].ka=!1);return this[r].X};this.Ia=function(a){this.pc(this[r].X);this[r].ka=!0;a&&(this[r].sa=!0);this.qc(this,!a)}},s:function(){var b=this[r];!b.J&&b.I&&a.a.P(b.I,function(a,b){b.s&&b.s()});b.l&&b.Rb&&a.a.K.yb(b.l,b.Rb);b.I=n;b.V=0;b.ra=!0;b.sa=!1;b.ka=!1;b.J=!1;b.l=n;b.Sa=n;b.Wc=n;this.Nc||(b.nb=n)}},da={Qa:function(b){var c=this,d=c[r];if(!d.ra&&d.J&&"change"==b){d.J=!1;if(d.sa||c.Xa())d.I=null,d.V=\n0,c.ha()&&c.Gb();else{var e=[];a.a.P(d.I,function(a,b){e[b.Ka]=a});a.a.D(e,function(a,b){var e=d.I[a],m=c.$c(e.da);m.Ka=b;m.La=e.La;d.I[a]=m});c.Xa()&&c.ha()&&c.Gb()}d.ra||c.notifySubscribers(d.X,"awake")}},hb:function(b){var c=this[r];c.ra||"change"!=b||this.Wa("change")||(a.a.P(c.I,function(a,b){b.s&&(c.I[a]={da:b.da,Ka:b.Ka,La:b.La},b.s())}),c.J=!0,this.notifySubscribers(n,"asleep"))},ob:function(){var b=this[r];b.J&&(b.sa||this.Xa())&&this.ha();return a.T.fn.ob.call(this)}},ea={Qa:function(a){"change"!=\na&&"beforeChange"!=a||this.v()}};a.a.Ba&&a.a.setPrototypeOf(C,a.T.fn);var N=a.ta.Ma;C[N]=a.o;a.Oc=function(a){return"function"==typeof a&&a[N]===C[N]};a.Fd=function(b){return a.Oc(b)&&b[r]&&b[r].wb};a.b("computed",a.o);a.b("dependentObservable",a.o);a.b("isComputed",a.Oc);a.b("isPureComputed",a.Fd);a.b("computed.fn",C);a.L(C,"peek",C.v);a.L(C,"dispose",C.s);a.L(C,"isActive",C.ja);a.L(C,"getDependenciesCount",C.qa);a.L(C,"getDependencies",C.Va);a.xb=function(b,c){if("function"===typeof b)return a.o(b,\nc,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.o(b,c)};a.b("pureComputed",a.xb);(function(){function b(a,f,g){g=g||new d;a=f(a);if("object"!=typeof a||null===a||a===n||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var h=a instanceof Array?[]:{};g.save(a,h);c(a,function(c){var d=f(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":h[c]=d;break;case "object":case "undefined":var l=g.get(d);h[c]=l!==\nn?l:b(d,f,g)}});return h}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=[];this.values=[]}a.ad=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return b(c,function(b){for(var c=0;a.O(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.ad(b);return a.a.hc(b,c,d)};d.prototype={constructor:d,save:function(b,c){var d=a.a.A(this.keys,\nb);0<=d?this.values[d]=c:(this.keys.push(b),this.values.push(c))},get:function(b){b=a.a.A(this.keys,b);return 0<=b?this.values[b]:n}}})();a.b("toJS",a.ad);a.b("toJSON",a.toJSON);a.Wd=function(b,c,d){function e(c){var e=a.xb(b,d).extend({ma:"always"}),h=e.subscribe(function(a){a&&(h.s(),c(a))});e.notifySubscribers(e.v());return h}return"function"!==typeof Promise||c?e(c.bind(d)):new Promise(e)};a.b("when",a.Wd);(function(){a.w={M:function(b){switch(a.a.R(b)){case "option":return!0===b.__ko__hasDomDataOptionValue__?\na.a.g.get(b,a.c.options.$b):7>=a.a.W?b.getAttributeNode("value")&&b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex]):n;default:return b.value}},cb:function(b,c,d){switch(a.a.R(b)){case "option":"string"===typeof c?(a.a.g.set(b,a.c.options.$b,n),"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__,b.value=c):(a.a.g.set(b,a.c.options.$b,c),b.__ko__hasDomDataOptionValue__=!0,b.value="number"===\ntypeof c?c:"");break;case "select":if(""===c||null===c)c=n;for(var e=-1,f=0,g=b.options.length,h;f<g;++f)if(h=a.w.M(b.options[f]),h==c||""===h&&c===n){e=f;break}if(d||0<=e||c===n&&1<b.size)b.selectedIndex=e,6===a.a.W&&a.a.setTimeout(function(){b.selectedIndex=e},0);break;default:if(null===c||c===n)c="";b.value=c}}}})();a.b("selectExtensions",a.w);a.b("selectExtensions.readValue",a.w.M);a.b("selectExtensions.writeValue",a.w.cb);a.m=function(){function b(b){b=a.a.Db(b);123===b.charCodeAt(0)&&(b=b.slice(1,\n-1));b+="\\n,";var c=[],d=b.match(e),p,q=[],h=0;if(1<d.length){for(var x=0,B;B=d[x];++x){var u=B.charCodeAt(0);if(44===u){if(0>=h){c.push(p&&q.length?{key:p,value:q.join("")}:{unknown:p||q.join("")});p=h=0;q=[];continue}}else if(58===u){if(!h&&!p&&1===q.length){p=q.pop();continue}}else if(47===u&&1<B.length&&(47===B.charCodeAt(1)||42===B.charCodeAt(1)))continue;else 47===u&&x&&1<B.length?(u=d[x-1].match(f))&&!g[u[0]]&&(b=b.substr(b.indexOf(B)+1),d=b.match(e),x=-1,B="/"):40===u||123===u||91===u?++h:\n41===u||125===u||93===u?--h:p||q.length||34!==u&&39!==u||(B=B.slice(1,-1));q.push(B)}if(0<h)throw Error("Unbalanced parentheses, braces, or brackets");}return c}var c=["true","false","null","undefined"],d=/^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i,e=RegExp("\\"(?:\\\\\\\\.|[^\\"])*\\"|\'(?:\\\\\\\\.|[^\'])*\'|`(?:\\\\\\\\.|[^`])*`|/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/|//.*\\n|/(?:\\\\\\\\.|[^/])+/w*|[^\\\\s:,/][^,\\"\'`{}()/:[\\\\]]*[^\\\\s,\\"\'`{}()/:[\\\\]]|[^\\\\s]","g"),f=/[\\])"\'A-Za-z0-9_$]+$/,g={"in":1,"return":1,"typeof":1},\nh={};return{Ra:[],wa:h,ac:b,vb:function(e,f){function l(b,e){var f;if(!x){var k=a.getBindingHandler(b);if(k&&k.preprocess&&!(e=k.preprocess(e,b,l)))return;if(k=h[b])f=e,0<=a.a.A(c,f)?f=!1:(k=f.match(d),f=null===k?!1:k[1]?"Object("+k[1]+")"+k[2]:f),k=f;k&&q.push("\'"+("string"==typeof h[b]?h[b]:b)+"\':function(_z){"+f+"=_z}")}g&&(e="function(){return "+e+" }");p.push("\'"+b+"\':"+e)}f=f||{};var p=[],q=[],g=f.valueAccessors,x=f.bindingParams,B="string"===typeof e?b(e):e;a.a.D(B,function(a){l(a.key||a.unknown,\na.value)});q.length&&l("_ko_property_writers","{"+q.join(",")+" }");return p.join(",")},Id:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},eb:function(b,c,d,e,f){if(b&&a.O(b))!a.Za(b)||f&&b.v()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();a.b("expressionRewriting",a.m);a.b("expressionRewriting.bindingRewriteValidators",a.m.Ra);a.b("expressionRewriting.parseObjectLiteral",a.m.ac);a.b("expressionRewriting.preProcessBindings",a.m.vb);a.b("expressionRewriting._twoWayBindings",\na.m.wa);a.b("jsonExpressionRewriting",a.m);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.m.vb);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&h.test(f?a.text:a.nodeValue)}function d(d,e){for(var f=d,h=1,g=[];f=f.nextSibling;){if(c(f)&&(a.a.g.set(f,k,!0),h--,0===h))return g;g.push(f);b(f)&&h++}if(!e)throw Error("Cannot find closing comment tag to match: "+d.nodeValue);return null}function e(a,b){var c=d(a,b);return c?\n0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=w&&"\\x3c!--test--\\x3e"===w.createComment("test").text,g=f?/^\\x3c!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*--\\x3e$/:/^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/,h=f?/^\\x3c!--\\s*\\/ko\\s*--\\x3e$/:/^\\s*\\/ko\\s*$/,m={ul:!0,ol:!0},k="__ko_matchedEndComment__";a.h={ea:{},childNodes:function(a){return b(a)?d(a):a.childNodes},Ea:function(c){if(b(c)){c=a.h.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.Tb(c)},va:function(c,d){if(b(c)){a.h.Ea(c);for(var e=\nc.nextSibling,f=0,k=d.length;f<k;f++)e.parentNode.insertBefore(d[f],e)}else a.a.va(c,d)},Vc:function(a,c){var d;b(a)?(d=a.nextSibling,a=a.parentNode):d=a.firstChild;d?c!==d&&a.insertBefore(c,d):a.appendChild(c)},Wb:function(c,d,e){e?(e=e.nextSibling,b(c)&&(c=c.parentNode),e?d!==e&&c.insertBefore(d,e):c.appendChild(d)):a.h.Vc(c,d)},firstChild:function(a){if(b(a))return!a.nextSibling||c(a.nextSibling)?null:a.nextSibling;if(a.firstChild&&c(a.firstChild))throw Error("Found invalid end comment, as the first child of "+\na);return a.firstChild},nextSibling:function(d){b(d)&&(d=e(d));if(d.nextSibling&&c(d.nextSibling)){var f=d.nextSibling;if(c(f)&&!a.a.g.get(f,k))throw Error("Found end comment without a matching opening comment, as child of "+d);return null}return d.nextSibling},Cd:b,Vd:function(a){return(a=(f?a.text:a.nodeValue).match(g))?a[1]:null},Sc:function(d){if(m[a.a.R(d)]){var f=d.firstChild;if(f){do if(1===f.nodeType){var k;k=f.firstChild;var h=null;if(k){do if(h)h.push(k);else if(b(k)){var g=e(k,!0);g?k=\ng:h=[k]}else c(k)&&(h=[k]);while(k=k.nextSibling)}if(k=h)for(h=f.nextSibling,g=0;g<k.length;g++)h?d.insertBefore(k[g],h):d.appendChild(k[g])}while(f=f.nextSibling)}}}}})();a.b("virtualElements",a.h);a.b("virtualElements.allowedBindings",a.h.ea);a.b("virtualElements.emptyNode",a.h.Ea);a.b("virtualElements.insertAfter",a.h.Wb);a.b("virtualElements.prepend",a.h.Vc);a.b("virtualElements.setDomNodeChildren",a.h.va);(function(){a.ga=function(){this.nd={}};a.a.extend(a.ga.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=\nb.getAttribute("data-bind")||a.j.getComponentNameForNode(b);case 8:return a.h.Cd(b);default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.j.tc(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.j.tc(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");case 8:return a.h.Vd(b);default:return null}},\nparseBindingsString:function(b,c,d,e){try{var f=this.nd,g=b+(e&&e.valueAccessors||""),h;if(!(h=f[g])){var m,k="with($context){with($data||{}){return{"+a.m.vb(b,e)+"}}}";m=new Function("$context","$element",k);h=f[g]=m}return h(c,d)}catch(l){throw l.message="Unable to parse bindings.\\nBindings value: "+b+"\\nMessage: "+l.message,l;}}});a.ga.instance=new a.ga})();a.b("bindingProvider",a.ga);(function(){function b(b){var c=(b=a.a.g.get(b,z))&&b.N;c&&(b.N=null,c.Tc())}function c(c,d,e){this.node=c;this.yc=\nd;this.kb=[];this.H=!1;d.N||a.a.K.za(c,b);e&&e.N&&(e.N.kb.push(c),this.Kb=e)}function d(a){return function(){return a}}function e(a){return a()}function f(b){return a.a.Ga(a.u.G(b),function(a,c){return function(){return b()[c]}})}function g(b,c,e){return"function"===typeof b?f(b.bind(null,c,e)):a.a.Ga(b,d)}function h(a,b){return f(this.getBindings.bind(this,a,b))}function m(b,c){var d=a.h.firstChild(c);if(d){var e,f=a.ga.instance,l=f.preprocessNode;if(l){for(;e=d;)d=a.h.nextSibling(e),l.call(f,e);\nd=a.h.firstChild(c)}for(;e=d;)d=a.h.nextSibling(e),k(b,e)}a.i.ma(c,a.i.H)}function k(b,c){var d=b,e=1===c.nodeType;e&&a.h.Sc(c);if(e||a.ga.instance.nodeHasBindings(c))d=p(c,null,b).bindingContextForDescendants;d&&!u[a.a.R(c)]&&m(d,c)}function l(b){var c=[],d={},e=[];a.a.P(b,function ca(f){if(!d[f]){var k=a.getBindingHandler(f);k&&(k.after&&(e.push(f),a.a.D(k.after,function(c){if(b[c]){if(-1!==a.a.A(e,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+e.join(", "));\nca(c)}}),e.length--),c.push({key:f,Mc:k}));d[f]=!0}});return c}function p(b,c,d){var f=a.a.g.Ub(b,z,{}),k=f.hd;if(!c){if(k)throw Error("You cannot apply bindings multiple times to the same element.");f.hd=!0}k||(f.context=d);f.Zb||(f.Zb={});var g;if(c&&"function"!==typeof c)g=c;else{var p=a.ga.instance,q=p.getBindingAccessors||h,m=a.$(function(){if(g=c?c(d,b):q.call(p,b,d)){if(d[t])d[t]();if(d[B])d[B]()}return g},null,{l:b});g&&m.ja()||(m=null)}var x=d,u;if(g){var J=function(){return a.a.Ga(m?m():\ng,e)},r=m?function(a){return function(){return e(m()[a])}}:function(a){return g[a]};J.get=function(a){return g[a]&&e(r(a))};J.has=function(a){return a in g};a.i.H in g&&a.i.subscribe(b,a.i.H,function(){var c=(0,g[a.i.H])();if(c){var d=a.h.childNodes(b);d.length&&c(d,a.Ec(d[0]))}});a.i.pa in g&&(x=a.i.Cb(b,d),a.i.subscribe(b,a.i.pa,function(){var c=(0,g[a.i.pa])();c&&a.h.firstChild(b)&&c(b)}));f=l(g);a.a.D(f,function(c){var d=c.Mc.init,e=c.Mc.update,f=c.key;if(8===b.nodeType&&!a.h.ea[f])throw Error("The binding \'"+\nf+"\' cannot be used with virtual elements");try{"function"==typeof d&&a.u.G(function(){var a=d(b,r(f),J,x.$data,x);if(a&&a.controlsDescendantBindings){if(u!==n)throw Error("Multiple bindings ("+u+" and "+f+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");u=f}}),"function"==typeof e&&a.$(function(){e(b,r(f),J,x.$data,x)},null,{l:b})}catch(k){throw k.message=\'Unable to process binding "\'+f+": "+g[f]+\'"\\nMessage: \'+k.message,\nk;}})}f=u===n;return{shouldBindDescendants:f,bindingContextForDescendants:f&&x}}function q(b,c){return b&&b instanceof a.fa?b:new a.fa(b,n,n,c)}var t=a.a.Da("_subscribable"),x=a.a.Da("_ancestorBindingInfo"),B=a.a.Da("_dataDependency");a.c={};var u={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.c[b]};var J={};a.fa=function(b,c,d,e,f){function k(){var b=p?h():h,f=a.a.f(b);c?(a.a.extend(l,c),x in c&&(l[x]=c[x])):(l.$parents=[],l.$root=f,l.ko=a);l[t]=q;g?f=l.$data:(l.$rawData=\nb,l.$data=f);d&&(l[d]=f);e&&e(l,c,f);if(c&&c[t]&&!a.S.o().Vb(c[t]))c[t]();m&&(l[B]=m);return l.$data}var l=this,g=b===J,h=g?n:b,p="function"==typeof h&&!a.O(h),q,m=f&&f.dataDependency;f&&f.exportDependencies?k():(q=a.xb(k),q.v(),q.ja()?q.equalityComparer=null:l[t]=n)};a.fa.prototype.createChildContext=function(b,c,d,e){!e&&c&&"object"==typeof c&&(e=c,c=e.as,d=e.extend);if(c&&e&&e.noChildContext){var f="function"==typeof b&&!a.O(b);return new a.fa(J,this,null,function(a){d&&d(a);a[c]=f?b():b},e)}return new a.fa(b,\nthis,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)},e)};a.fa.prototype.extend=function(b,c){return new a.fa(J,this,null,function(c){a.a.extend(c,"function"==typeof b?b(c):b)},c)};var z=a.a.g.Z();c.prototype.Tc=function(){this.Kb&&this.Kb.N&&this.Kb.N.sd(this.node)};c.prototype.sd=function(b){a.a.Pa(this.kb,b);!this.kb.length&&this.H&&this.Cc()};c.prototype.Cc=function(){this.H=!0;this.yc.N&&!this.kb.length&&(this.yc.N=\nnull,a.a.K.yb(this.node,b),a.i.ma(this.node,a.i.pa),this.Tc())};a.i={H:"childrenComplete",pa:"descendantsComplete",subscribe:function(b,c,d,e,f){var k=a.a.g.Ub(b,z,{});k.Fa||(k.Fa=new a.T);f&&f.notifyImmediately&&k.Zb[c]&&a.u.G(d,e,[b]);return k.Fa.subscribe(d,e,c)},ma:function(b,c){var d=a.a.g.get(b,z);if(d&&(d.Zb[c]=!0,d.Fa&&d.Fa.notifySubscribers(b,c),c==a.i.H))if(d.N)d.N.Cc();else if(d.N===n&&d.Fa&&d.Fa.Wa(a.i.pa))throw Error("descendantsComplete event not supported for bindings on this node");\n},Cb:function(b,d){var e=a.a.g.Ub(b,z,{});e.N||(e.N=new c(b,e,d[x]));return d[x]==e?d:d.extend(function(a){a[x]=e})}};a.Td=function(b){return(b=a.a.g.get(b,z))&&b.context};a.ib=function(b,c,d){1===b.nodeType&&a.h.Sc(b);return p(b,c,q(d))};a.ld=function(b,c,d){d=q(d);return a.ib(b,g(c,d,b),d)};a.Oa=function(a,b){1!==b.nodeType&&8!==b.nodeType||m(q(a),b)};a.vc=function(a,b,c){!v&&A.jQuery&&(v=A.jQuery);if(2>arguments.length){if(b=w.body,!b)throw Error("ko.applyBindings: could not find document.body; has the document been loaded?");\n}else if(!b||1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");k(q(a,c),b)};a.Dc=function(b){return!b||1!==b.nodeType&&8!==b.nodeType?n:a.Td(b)};a.Ec=function(b){return(b=a.Dc(b))?b.$data:n};a.b("bindingHandlers",a.c);a.b("bindingEvent",a.i);a.b("bindingEvent.subscribe",a.i.subscribe);a.b("bindingEvent.startPossiblyAsyncContentBinding",a.i.Cb);a.b("applyBindings",a.vc);a.b("applyBindingsToDescendants",a.Oa);\na.b("applyBindingAccessorsToNode",a.ib);a.b("applyBindingsToNode",a.ld);a.b("contextFor",a.Dc);a.b("dataFor",a.Ec)})();(function(b){function c(c,e){var k=Object.prototype.hasOwnProperty.call(f,c)?f[c]:b,l;k?k.subscribe(e):(k=f[c]=new a.T,k.subscribe(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,Gd:e};delete f[c];l||e?k.notifySubscribers(b):a.na.zb(function(){k.notifySubscribers(b)})}),l=!0)}function d(a,b){e("getConfig",[a],function(c){c?e("loadComponent",[a,c],function(a){b(a,\nc)}):b(null,null)})}function e(c,d,f,l){l||(l=a.j.loaders.slice(0));var g=l.shift();if(g){var q=g[c];if(q){var t=!1;if(q.apply(g,d.concat(function(a){t?f(null):null!==a?f(a):e(c,d,f,l)}))!==b&&(t=!0,!g.suppressLoaderExceptions))throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.");}else e(c,d,f,l)}else f(null)}var f={},g={};a.j={get:function(d,e){var f=Object.prototype.hasOwnProperty.call(g,d)?g[d]:b;f?f.Gd?a.u.G(function(){e(f.definition)}):\na.na.zb(function(){e(f.definition)}):c(d,e)},Bc:function(a){delete g[a]},oc:e};a.j.loaders=[];a.b("components",a.j);a.b("components.get",a.j.get);a.b("components.clearCachedDefinition",a.j.Bc)})();(function(){function b(b,c,d,e){function g(){0===--B&&e(h)}var h={},B=2,u=d.template;d=d.viewModel;u?f(c,u,function(c){a.j.oc("loadTemplate",[b,c],function(a){h.template=a;g()})}):g();d?f(c,d,function(c){a.j.oc("loadViewModel",[b,c],function(a){h[m]=a;g()})}):g()}function c(a,b,d){if("function"===typeof b)d(function(a){return new b(a)});\nelse if("function"===typeof b[m])d(b[m]);else if("instance"in b){var e=b.instance;d(function(){return e})}else"viewModel"in b?c(a,b.viewModel,d):a("Unknown viewModel value: "+b)}function d(b){switch(a.a.R(b)){case "script":return a.a.ua(b.text);case "textarea":return a.a.ua(b.value);case "template":if(e(b.content))return a.a.Ca(b.content.childNodes)}return a.a.Ca(b.childNodes)}function e(a){return A.DocumentFragment?a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){"string"===typeof b.require?\nT||A.require?(T||A.require)([b.require],function(a){a&&"object"===typeof a&&a.Xd&&a["default"]&&(a=a["default"]);c(a)}):a("Uses require, but no AMD loader is present"):c(b)}function g(a){return function(b){throw Error("Component \'"+a+"\': "+b);}}var h={};a.j.register=function(b,c){if(!c)throw Error("Invalid configuration for "+b);if(a.j.tb(b))throw Error("Component "+b+" is already registered");h[b]=c};a.j.tb=function(a){return Object.prototype.hasOwnProperty.call(h,a)};a.j.unregister=function(b){delete h[b];\na.j.Bc(b)};a.j.Fc={getConfig:function(b,c){c(a.j.tb(b)?h[b]:null)},loadComponent:function(a,c,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if("string"===typeof c)f(a.a.ua(c));else if(c instanceof Array)f(c);else if(e(c))f(a.a.la(c.childNodes));else if(c.element)if(c=c.element,A.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if("string"===typeof c){var h=w.getElementById(c);h?f(d(h)):b("Cannot find element with ID "+c)}else b("Unknown element type: "+\nc);else b("Unknown template value: "+c)},loadViewModel:function(a,b,d){c(g(a),b,d)}};var m="createViewModel";a.b("components.register",a.j.register);a.b("components.isRegistered",a.j.tb);a.b("components.unregister",a.j.unregister);a.b("components.defaultLoader",a.j.Fc);a.j.loaders.push(a.j.Fc);a.j.dd=h})();(function(){function b(b,e){var f=b.getAttribute("params");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ga(f,function(c){return a.o(c,null,{l:b})}),g=a.a.Ga(f,\nfunction(c){var e=c.v();return c.ja()?a.o({read:function(){return a.a.f(c())},write:a.Za(e)&&function(a){c()(a)},l:b}):e});Object.prototype.hasOwnProperty.call(g,"$raw")||(g.$raw=f);return g}return{$raw:{}}}a.j.getComponentNameForNode=function(b){var c=a.a.R(b);if(a.j.tb(c)&&(-1!=c.indexOf("-")||"[object HTMLUnknownElement]"==""+b||8>=a.a.W&&b.tagName===c))return c};a.j.tc=function(c,e,f,g){if(1===e.nodeType){var h=a.j.getComponentNameForNode(e);if(h){c=c||{};if(c.component)throw Error(\'Cannot use the "component" binding on a custom element matching a component\');\nvar m={name:h,params:b(e,f)};c.component=g?function(){return m}:m}}return c};var c=new a.ga;9>a.a.W&&(a.j.register=function(a){return function(b){return a.apply(this,arguments)}}(a.j.register),w.createDocumentFragment=function(b){return function(){var c=b(),f=a.j.dd,g;for(g in f);return c}}(w.createDocumentFragment))})();(function(){function b(b,c,d){c=c.template;if(!c)throw Error("Component \'"+b+"\' has no template");b=a.a.Ca(c);a.h.va(d,b)}function c(a,b,c){var d=a.createViewModel;return d?d.call(a,\nb,c):b}var d=0;a.c.component={init:function(e,f,g,h,m){function k(){var a=l&&l.dispose;"function"===typeof a&&a.call(l);q&&q.s();p=l=q=null}var l,p,q,t=a.a.la(a.h.childNodes(e));a.h.Ea(e);a.a.K.za(e,k);a.o(function(){var g=a.a.f(f()),h,u;"string"===typeof g?h=g:(h=a.a.f(g.name),u=a.a.f(g.params));if(!h)throw Error("No component name specified");var n=a.i.Cb(e,m),z=p=++d;a.j.get(h,function(d){if(p===z){k();if(!d)throw Error("Unknown component \'"+h+"\'");b(h,d,e);var f=c(d,u,{element:e,templateNodes:t});\nd=n.createChildContext(f,{extend:function(a){a.$component=f;a.$componentTemplateNodes=t}});f&&f.koDescendantsComplete&&(q=a.i.subscribe(e,a.i.pa,f.koDescendantsComplete,f));l=f;a.Oa(d,e)}})},null,{l:e});return{controlsDescendantBindings:!0}}};a.h.ea.component=!0})();var V={"class":"className","for":"htmlFor"};a.c.attr={update:function(b,c){var d=a.a.f(c())||{};a.a.P(d,function(c,d){d=a.a.f(d);var g=c.indexOf(":"),g="lookupNamespaceURI"in b&&0<g&&b.lookupNamespaceURI(c.substr(0,g)),h=!1===d||null===\nd||d===n;h?g?b.removeAttributeNS(g,c):b.removeAttribute(c):d=d.toString();8>=a.a.W&&c in V?(c=V[c],h?b.removeAttribute(c):b[c]=d):h||(g?b.setAttributeNS(g,c,d):b.setAttribute(c,d));"name"===c&&a.a.Yc(b,h?"":d)})}};(function(){a.c.checked={after:["value","attr"],init:function(b,c,d){function e(){var e=b.checked,f=g();if(!a.S.Ya()&&(e||!m&&!a.S.qa())){var k=a.u.G(c);if(l){var q=p?k.v():k,z=t;t=f;z!==f?e&&(a.a.Na(q,f,!0),a.a.Na(q,z,!1)):a.a.Na(q,f,e);p&&a.Za(k)&&k(q)}else h&&(f===n?f=e:e||(f=n)),a.m.eb(k,\nd,"checked",f,!0)}}function f(){var d=a.a.f(c()),e=g();l?(b.checked=0<=a.a.A(d,e),t=e):b.checked=h&&e===n?!!d:g()===d}var g=a.xb(function(){if(d.has("checkedValue"))return a.a.f(d.get("checkedValue"));if(q)return d.has("value")?a.a.f(d.get("value")):b.value}),h="checkbox"==b.type,m="radio"==b.type;if(h||m){var k=c(),l=h&&a.a.f(k)instanceof Array,p=!(l&&k.push&&k.splice),q=m||l,t=l?g():n;m&&!b.name&&a.c.uniqueName.init(b,function(){return!0});a.o(e,null,{l:b});a.a.B(b,"click",e);a.o(f,null,{l:b});\nk=n}}};a.m.wa.checked=!0;a.c.checkedValue={update:function(b,c){b.value=a.a.f(c())}}})();a.c["class"]={update:function(b,c){var d=a.a.Db(a.a.f(c()));a.a.Eb(b,b.__ko__cssValue,!1);b.__ko__cssValue=d;a.a.Eb(b,d,!0)}};a.c.css={update:function(b,c){var d=a.a.f(c());null!==d&&"object"==typeof d?a.a.P(d,function(c,d){d=a.a.f(d);a.a.Eb(b,c,d)}):a.c["class"].update(b,c)}};a.c.enable={update:function(b,c){var d=a.a.f(c());d&&b.disabled?b.removeAttribute("disabled"):d||b.disabled||(b.disabled=!0)}};a.c.disable=\n{update:function(b,c){a.c.enable.update(b,function(){return!a.a.f(c())})}};a.c.event={init:function(b,c,d,e,f){var g=c()||{};a.a.P(g,function(g){"string"==typeof g&&a.a.B(b,g,function(b){var k,l=c()[g];if(l){try{var p=a.a.la(arguments);e=f.$data;p.unshift(e);k=l.apply(e,p)}finally{!0!==k&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(g+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.c.foreach={Rc:function(b){return function(){var c=b(),d=a.a.bc(c);\nif(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.ba.Ma};a.a.f(c);return{foreach:d.data,as:d.as,noChildContext:d.noChildContext,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.ba.Ma}}},init:function(b,c){return a.c.template.init(b,a.c.foreach.Rc(c))},update:function(b,c,d,e,f){return a.c.template.update(b,a.c.foreach.Rc(c),d,e,f)}};a.m.Ra.foreach=!1;a.h.ea.foreach=\n!0;a.c.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if("activeElement"in f){var g;try{g=f.activeElement}catch(l){g=f.body}e=g===b}f=c();a.m.eb(f,d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.B(b,"focus",f);a.a.B(b,"focusin",f);a.a.B(b,"blur",g);a.a.B(b,"focusout",g);b.__ko_hasfocusLastValue=!1},update:function(b,c){var d=!!a.a.f(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===\nd||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.u.G(a.a.Fb,null,[b,d?"focusin":"focusout"]))}};a.m.wa.hasfocus=!0;a.c.hasFocus=a.c.hasfocus;a.m.wa.hasFocus="hasfocus";a.c.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.fc(b,c())}};(function(){function b(b,d,e){a.c[b]={init:function(b,c,h,m,k){var l,p,q={},t,x,n;if(d){m=h.get("as");var u=h.get("noChildContext");n=!(m&&u);q={as:m,noChildContext:u,exportDependencies:n}}x=(t=\n"render"==h.get("completeOn"))||h.has(a.i.pa);a.o(function(){var h=a.a.f(c()),m=!e!==!h,u=!p,r;if(n||m!==l){x&&(k=a.i.Cb(b,k));if(m){if(!d||n)q.dataDependency=a.S.o();r=d?k.createChildContext("function"==typeof h?h:c,q):a.S.qa()?k.extend(null,q):k}u&&a.S.qa()&&(p=a.a.Ca(a.h.childNodes(b),!0));m?(u||a.h.va(b,a.a.Ca(p)),a.Oa(r,b)):(a.h.Ea(b),t||a.i.ma(b,a.i.H));l=m}},null,{l:b});return{controlsDescendantBindings:!0}}};a.m.Ra[b]=!1;a.h.ea[b]=!0}b("if");b("ifnot",!1,!0);b("with",!0)})();a.c.let={init:function(b,\nc,d,e,f){c=f.extend(c);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.let=!0;var Q={};a.c.options={init:function(b){if("select"!==a.a.R(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.jb(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function g(c,d){if(x&&l)a.i.ma(b,a.i.H);else if(t.length){var e=\n0<=a.a.A(t,a.w.M(d[0]));a.a.Zc(d[0],e);x&&!e&&a.u.G(a.a.Fb,null,[b,"change"])}}var h=b.multiple,m=0!=b.length&&h?b.scrollTop:null,k=a.a.f(c()),l=d.get("valueAllowUnset")&&d.has("value"),p=d.get("optionsIncludeDestroyed");c={};var q,t=[];l||(h?t=a.a.Mb(e(),a.w.M):0<=b.selectedIndex&&t.push(a.w.M(b.options[b.selectedIndex])));k&&("undefined"==typeof k.length&&(k=[k]),q=a.a.jb(k,function(b){return p||b===n||null===b||!a.a.f(b._destroy)}),d.has("optionsCaption")&&(k=a.a.f(d.get("optionsCaption")),null!==\nk&&k!==n&&q.unshift(Q)));var x=!1;c.beforeRemove=function(a){b.removeChild(a)};k=g;d.has("optionsAfterRender")&&"function"==typeof d.get("optionsAfterRender")&&(k=function(b,c){g(0,c);a.u.G(d.get("optionsAfterRender"),null,[c[0],b!==Q?b:n])});a.a.ec(b,q,function(c,e,g){g.length&&(t=!l&&g[0].selected?[a.w.M(g[0])]:[],x=!0);e=b.ownerDocument.createElement("option");c===Q?(a.a.Bb(e,d.get("optionsCaption")),a.w.cb(e,n)):(g=f(c,d.get("optionsValue"),c),a.w.cb(e,a.a.f(g)),c=f(c,d.get("optionsText"),g),\na.a.Bb(e,c));return[e]},c,k);if(!l){var B;h?B=t.length&&e().length<t.length:B=t.length&&0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex])!==t[0]:t.length||0<=b.selectedIndex;B&&a.u.G(a.a.Fb,null,[b,"change"])}(l||a.S.Ya())&&a.i.ma(b,a.i.H);a.a.wd(b);m&&20<Math.abs(m-b.scrollTop)&&(b.scrollTop=m)}};a.c.options.$b=a.a.g.Z();a.c.selectedOptions={init:function(b,c,d){function e(){var e=c(),f=[];a.a.D(b.getElementsByTagName("option"),function(b){b.selected&&f.push(a.w.M(b))});a.m.eb(e,d,"selectedOptions",\nf)}function f(){var d=a.a.f(c()),e=b.scrollTop;d&&"number"==typeof d.length&&a.a.D(b.getElementsByTagName("option"),function(b){var c=0<=a.a.A(d,a.w.M(b));b.selected!=c&&a.a.Zc(b,c)});b.scrollTop=e}if("select"!=a.a.R(b))throw Error("selectedOptions binding applies only to SELECT elements");var g;a.i.subscribe(b,a.i.H,function(){g?e():(a.a.B(b,"change",e),g=a.o(f,null,{l:b}))},null,{notifyImmediately:!0})},update:function(){}};a.m.wa.selectedOptions=!0;a.c.style={update:function(b,c){var d=a.a.f(c()||\n{});a.a.P(d,function(c,d){d=a.a.f(d);if(null===d||d===n||!1===d)d="";if(v)v(b).css(c,d);else if(/^--/.test(c))b.style.setProperty(c,d);else{c=c.replace(/-(\\w)/g,function(a,b){return b.toUpperCase()});var g=b.style[c];b.style[c]=d;d===g||b.style[c]!=g||isNaN(d)||(b.style[c]=d+"px")}})}};a.c.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");a.a.B(b,"submit",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?\na.preventDefault():a.returnValue=!1)}})}};a.c.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Bb(b,c())}};a.h.ea.text=!0;(function(){if(A&&A.navigator){var b=function(a){if(a)return parseFloat(a[1])},c=A.navigator.userAgent,d,e,f,g,h;(d=A.opera&&A.opera.version&&parseInt(A.opera.version()))||(h=b(c.match(/Edge\\/([^ ]+)$/)))||b(c.match(/Chrome\\/([^ ]+)/))||(e=b(c.match(/Version\\/([^ ]+) Safari/)))||(f=b(c.match(/Firefox\\/([^ ]+)/)))||(g=a.a.W||b(c.match(/MSIE ([^ ]+)/)))||\n(g=b(c.match(/rv:([^ )]+)/)))}if(8<=g&&10>g)var m=a.a.g.Z(),k=a.a.g.Z(),l=function(b){var c=this.activeElement;(c=c&&a.a.g.get(c,k))&&c(b)},p=function(b,c){var d=b.ownerDocument;a.a.g.get(d,m)||(a.a.g.set(d,m,!0),a.a.B(d,"selectionchange",l));a.a.g.set(b,k,c)};a.c.textInput={init:function(b,c,k){function l(c,d){a.a.B(b,c,d)}function m(){var d=a.a.f(c());if(null===d||d===n)d="";L!==n&&d===L?a.a.setTimeout(m,4):b.value!==d&&(y=!0,b.value=d,y=!1,v=b.value)}function r(){w||(L=b.value,w=a.a.setTimeout(z,\n4))}function z(){clearTimeout(w);L=w=n;var d=b.value;v!==d&&(v=d,a.m.eb(c(),k,"textInput",d))}var v=b.value,w,L,A=9==a.a.W?r:z,y=!1;g&&l("keypress",z);11>g&&l("propertychange",function(a){y||"value"!==a.propertyName||A(a)});8==g&&(l("keyup",z),l("keydown",z));p&&(p(b,A),l("dragend",r));(!g||9<=g)&&l("input",A);5>e&&"textarea"===a.a.R(b)?(l("keydown",r),l("paste",r),l("cut",r)):11>d?l("keydown",r):4>f?(l("DOMAutoComplete",z),l("dragdrop",z),l("drop",z)):h&&"number"===b.type&&l("keydown",r);l("change",\nz);l("blur",z);a.o(m,null,{l:b})}};a.m.wa.textInput=!0;a.c.textinput={preprocess:function(a,b,c){c("textInput",a)}}})();a.c.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.c.uniqueName.rd;a.a.Yc(b,d)}}};a.c.uniqueName.rd=0;a.c.using={init:function(b,c,d,e,f){var g;d.has("as")&&(g={as:d.get("as"),noChildContext:d.get("noChildContext")});c=f.createChildContext(c,g);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.using=!0;a.c.value={init:function(b,c,d){var e=a.a.R(b),f="input"==\ne;if(!f||"checkbox"!=b.type&&"radio"!=b.type){var g=[],h=d.get("valueUpdate"),m=!1,k=null;h&&("string"==typeof h?g=[h]:g=a.a.wc(h),a.a.Pa(g,"change"));var l=function(){k=null;m=!1;var e=c(),f=a.w.M(b);a.m.eb(e,d,"value",f)};!a.a.W||!f||"text"!=b.type||"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.A(g,"propertychange")||(a.a.B(b,"propertychange",function(){m=!0}),a.a.B(b,"focus",function(){m=!1}),a.a.B(b,"blur",function(){m&&l()}));a.a.D(g,function(c){var d=l;a.a.Ud(c,"after")&&\n(d=function(){k=a.w.M(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.B(b,c,d)});var p;p=f&&"file"==b.type?function(){var d=a.a.f(c());null===d||d===n||""===d?b.value="":a.u.G(l)}:function(){var f=a.a.f(c()),g=a.w.M(b);if(null!==k&&f===k)a.a.setTimeout(p,0);else if(f!==g||g===n)"select"===e?(g=d.get("valueAllowUnset"),a.w.cb(b,f,g),g||f===a.w.M(b)||a.u.G(l)):a.w.cb(b,f)};if("select"===e){var q;a.i.subscribe(b,a.i.H,function(){q?d.get("valueAllowUnset")?p():l():(a.a.B(b,"change",l),q=a.o(p,null,{l:b}))},\nnull,{notifyImmediately:!0})}else a.a.B(b,"change",l),a.o(p,null,{l:b})}else a.ib(b,{checkedValue:c})},update:function(){}};a.m.wa.value=!0;a.c.visible={update:function(b,c){var d=a.a.f(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};a.c.hidden={update:function(b,c){a.c.visible.update(b,function(){return!a.a.f(c())})}};(function(b){a.c[b]={init:function(c,d,e,f,g){return a.c.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})("click");\na.ca=function(){};a.ca.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource");};a.ca.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.ca.prototype.makeTemplateSource=function(b,c){if("string"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.C.F(d)}if(1==b.nodeType||8==b.nodeType)return new a.C.ia(b);throw Error("Unknown template type: "+b);};a.ca.prototype.renderTemplate=\nfunction(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d,e)};a.ca.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.ca.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.ca);a.kc=function(){function b(b,c,d,h){b=a.m.ac(b);for(var m=a.m.Ra,k=0;k<b.length;k++){var l=b[k].key;if(Object.prototype.hasOwnProperty.call(m,\nl)){var p=m[l];if("function"===typeof p){if(l=p(b[k].value))throw Error(l);}else if(!p)throw Error("This template engine does not support the \'"+l+"\' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.m.vb(b,{valueAccessors:!0})+" } })()},\'"+d.toLowerCase()+"\')";return h.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\"[^\\"]*\\"|\\\'[^\\\']*\\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*(["\'])([\\s\\S]*?)\\3/gi,\nd=/\\x3c!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*--\\x3e/g;return{xd:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.kc.Ld(b,c)},d)},Ld:function(a,f){return a.replace(c,function(a,c,d,e,l){return b(l,c,d,f)}).replace(d,function(a,c){return b(c,"\\x3c!-- ko --\\x3e","#comment",f)})},md:function(b,c){return a.aa.Xb(function(d,h){var m=d.nextSibling;m&&m.nodeName.toLowerCase()===c&&a.ib(m,b,h)})}}}();a.b("__tr_ambtns",a.kc.md);(function(){a.C={};a.C.F=function(b){if(this.F=b){var c=\na.a.R(b);this.ab="script"===c?1:"textarea"===c?2:"template"==c&&b.content&&11===b.content.nodeType?3:4}};a.C.F.prototype.text=function(){var b=1===this.ab?"text":2===this.ab?"value":"innerHTML";if(0==arguments.length)return this.F[b];var c=arguments[0];"innerHTML"===b?a.a.fc(this.F,c):this.F[b]=c};var b=a.a.g.Z()+"_";a.C.F.prototype.data=function(c){if(1===arguments.length)return a.a.g.get(this.F,b+c);a.a.g.set(this.F,b+c,arguments[1])};var c=a.a.g.Z();a.C.F.prototype.nodes=function(){var b=this.F;\nif(0==arguments.length){var e=a.a.g.get(b,c)||{},f=e.lb||(3===this.ab?b.content:4===this.ab?b:n);if(!f||e.jd){var g=this.text();g&&g!==e.bb&&(f=a.a.Md(g,b.ownerDocument),a.a.g.set(b,c,{lb:f,bb:g,jd:!0}))}return f}e=arguments[0];this.ab!==n&&this.text("");a.a.g.set(b,c,{lb:e})};a.C.ia=function(a){this.F=a};a.C.ia.prototype=new a.C.F;a.C.ia.prototype.constructor=a.C.ia;a.C.ia.prototype.text=function(){if(0==arguments.length){var b=a.a.g.get(this.F,c)||{};b.bb===n&&b.lb&&(b.bb=b.lb.innerHTML);return b.bb}a.a.g.set(this.F,\nc,{bb:arguments[0]})};a.b("templateSources",a.C);a.b("templateSources.domElement",a.C.F);a.b("templateSources.anonymousTemplate",a.C.ia)})();(function(){function b(b,c,d){var e;for(c=a.h.nextSibling(c);b&&(e=b)!==c;)b=a.h.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,h=a.ga.instance,m=h.preprocessNode;if(m){b(e,f,function(a,b){var c=a.previousSibling,d=m.call(h,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):\n(c.push(e,f),a.a.Ua(c,g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.vc(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.aa.cd(b,[d])});a.a.Ua(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,m){m=m||{};var n=(b&&d(b)||f||{}).ownerDocument,B=m.templateEngine||g;a.kc.xd(f,B,n);f=B.renderTemplate(f,h,m,n);if("number"!=typeof f.length||0<f.length&&"number"!=typeof f[0].nodeType)throw Error("Template engine must return an array of DOM nodes");n=!1;switch(e){case "replaceChildren":a.h.va(b,\nf);n=!0;break;case "replaceNode":a.a.Xc(b,f);n=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+e);}n&&(c(f,h),m.afterRender&&a.u.G(m.afterRender,null,[f,h[m.as||"$data"]]),"replaceChildren"==e&&a.i.ma(b,a.i.H));return f}function f(b,c,d){return a.O(b)?b():"function"===typeof b?b(c,d):b}var g;a.gc=function(b){if(b!=n&&!(b instanceof a.ca))throw Error("templateEngine must inherit from ko.templateEngine");g=b};a.dc=function(b,c,h,m,t){h=h||{};if((h.templateEngine||g)==\nn)throw Error("Set a template engine before calling renderTemplate");t=t||"replaceChildren";if(m){var x=d(m);return a.$(function(){var g=c&&c instanceof a.fa?c:new a.fa(c,null,null,null,{exportDependencies:!0}),n=f(b,g.$data,g),g=e(m,t,n,g,h);"replaceNode"==t&&(m=g,x=d(m))},null,{Sa:function(){return!x||!a.a.Sb(x)},l:x&&"replaceNode"==t?x.parentNode:x})}return a.aa.Xb(function(d){a.dc(b,c,h,d,"replaceNode")})};a.Qd=function(b,d,g,h,m){function x(b,c){a.u.G(a.a.ec,null,[h,b,u,g,r,c]);a.i.ma(h,a.i.H)}\nfunction r(a,b){c(b,v);g.afterRender&&g.afterRender(b,a);v=null}function u(a,c){v=m.createChildContext(a,{as:z,noChildContext:g.noChildContext,extend:function(a){a.$index=c;z&&(a[z+"Index"]=c)}});var d=f(b,a,v);return e(h,"ignoreTargetNode",d,v,g)}var v,z=g.as,w=!1===g.includeDestroyed||a.options.foreachHidesDestroyed&&!g.includeDestroyed;if(w||g.beforeRemove||!a.Pc(d))return a.$(function(){var b=a.a.f(d)||[];"undefined"==typeof b.length&&(b=[b]);w&&(b=a.a.jb(b,function(b){return b===n||null===b||\n!a.a.f(b._destroy)}));x(b)},null,{l:h});x(d.v());var A=d.subscribe(function(a){x(d(),a)},null,"arrayChange");A.l(h);return A};var h=a.a.g.Z(),m=a.a.g.Z();a.c.template={init:function(b,c){var d=a.a.f(c());if("string"==typeof d||"name"in d)a.h.Ea(b);else if("nodes"in d){d=d.nodes||[];if(a.O(d))throw Error(\'The "nodes" option must be a plain, non-observable array.\');var e=d[0]&&d[0].parentNode;e&&a.a.g.get(e,m)||(e=a.a.Yb(d),a.a.g.set(e,m,!0));(new a.C.ia(b)).nodes(e)}else if(d=a.h.childNodes(b),0<d.length)e=\na.a.Yb(d),(new a.C.ia(b)).nodes(e);else throw Error("Anonymous template defined, but no template content was provided");return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c();c=a.a.f(g);d=!0;e=null;"string"==typeof c?c={}:(g="name"in c?c.name:b,"if"in c&&(d=a.a.f(c["if"])),d&&"ifnot"in c&&(d=!a.a.f(c.ifnot)),d&&!g&&(d=!1));"foreach"in c?e=a.Qd(g,d&&c.foreach||[],c,b,f):d?(d=f,"data"in c&&(d=f.createChildContext(c.data,{as:c.as,noChildContext:c.noChildContext,exportDependencies:!0})),\ne=a.dc(g,d,c,b)):a.h.Ea(b);f=e;(c=a.a.g.get(b,h))&&"function"==typeof c.s&&c.s();a.a.g.set(b,h,!f||f.ja&&!f.ja()?n:f)}};a.m.Ra.template=function(b){b=a.m.ac(b);return 1==b.length&&b[0].unknown||a.m.Id(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};a.h.ea.template=!0})();a.b("setTemplateEngine",a.gc);a.b("renderTemplate",a.dc);a.a.Kc=function(a,c,d){if(a.length&&c.length){var e,f,g,h,m;for(e=f=0;(!d||e<d)&&(h=a[f]);++f){for(g=0;m=c[g];++g)if(h.value===\nm.value){h.moved=m.index;m.moved=h.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.Pb=function(){function b(b,d,e,f,g){var h=Math.min,m=Math.max,k=[],l,p=b.length,q,n=d.length,r=n-p||1,v=p+n+1,u,w,z;for(l=0;l<=p;l++)for(w=u,k.push(u=[]),z=h(n,l+r),q=m(0,l-1);q<=z;q++)u[q]=q?l?b[l-1]===d[q-1]?w[q-1]:h(w[q]||v,u[q-1]||v)+1:q+1:l+1;h=[];m=[];r=[];l=p;for(q=n;l||q;)n=k[l][q]-1,q&&n===k[l][q-1]?m.push(h[h.length]={status:e,value:d[--q],index:q}):l&&n===k[l-1][q]?r.push(h[h.length]={status:f,value:b[--l],index:l}):\n(--q,--l,g.sparse||h.push({status:"retained",value:d[q]}));a.a.Kc(r,m,!g.dontLimitMoves&&10*p);return h.reverse()}return function(a,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,"added","deleted",e):b(d,a,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.Pb);(function(){function b(b,c,d,h,m){var k=[],l=a.$(function(){var l=c(d,m,a.a.Ua(k,b))||[];0<k.length&&(a.a.Xc(k,l),h&&a.u.G(h,null,[d,l,m]));k.length=0;a.a.Nb(k,l)},null,{l:b,Sa:function(){return!a.a.kd(k)}});\nreturn{Y:k,$:l.ja()?l:n}}var c=a.a.g.Z(),d=a.a.g.Z();a.a.ec=function(e,f,g,h,m,k){function l(b){y={Aa:b,pb:a.ta(w++)};v.push(y);r||F.push(y)}function p(b){y=t[b];w!==y.pb.v()&&D.push(y);y.pb(w++);a.a.Ua(y.Y,e);v.push(y)}function q(b,c){if(b)for(var d=0,e=c.length;d<e;d++)a.a.D(c[d].Y,function(a){b(a,d,c[d].Aa)})}f=f||[];"undefined"==typeof f.length&&(f=[f]);h=h||{};var t=a.a.g.get(e,c),r=!t,v=[],u=0,w=0,z=[],A=[],C=[],D=[],F=[],y,I=0;if(r)a.a.D(f,l);else{if(!k||t&&t._countWaitingForRemove){var E=\na.a.Mb(t,function(a){return a.Aa});k=a.a.Pb(E,f,{dontLimitMoves:h.dontLimitMoves,sparse:!0})}for(var E=0,G,H,K;G=k[E];E++)switch(H=G.moved,K=G.index,G.status){case "deleted":for(;u<K;)p(u++);H===n&&(y=t[u],y.$&&(y.$.s(),y.$=n),a.a.Ua(y.Y,e).length&&(h.beforeRemove&&(v.push(y),I++,y.Aa===d?y=null:C.push(y)),y&&z.push.apply(z,y.Y)));u++;break;case "added":for(;w<K;)p(u++);H!==n?(A.push(v.length),p(H)):l(G.value)}for(;w<f.length;)p(u++);v._countWaitingForRemove=I}a.a.g.set(e,c,v);q(h.beforeMove,D);a.a.D(z,\nh.beforeRemove?a.oa:a.removeNode);var M,O,P;try{P=e.ownerDocument.activeElement}catch(N){}if(A.length)for(;(E=A.shift())!=n;){y=v[E];for(M=n;E;)if((O=v[--E].Y)&&O.length){M=O[O.length-1];break}for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M)}for(E=0;y=v[E];E++){y.Y||a.a.extend(y,b(e,g,y.Aa,m,y.pb));for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M);!y.Ed&&m&&(m(y.Aa,y.Y,y.pb),y.Ed=!0,M=y.Y[y.Y.length-1])}P&&e.ownerDocument.activeElement!=P&&P.focus();q(h.beforeRemove,C);for(E=0;E<C.length;++E)C[E].Aa=d;q(h.afterMove,D);\nq(h.afterAdd,F)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.ec);a.ba=function(){this.allowTemplateRewriting=!1};a.ba.prototype=new a.ca;a.ba.prototype.constructor=a.ba;a.ba.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.W?0:b.nodes)?b.nodes():null)return a.a.la(c.cloneNode(!0).childNodes);b=b.text();return a.a.ua(b,e)};a.ba.Ma=new a.ba;a.gc(a.ba.Ma);a.b("nativeTemplateEngine",a.ba);(function(){a.$a=function(){var a=this.Hd=function(){if(!v||!v.tmpl)return 0;try{if(0<=v.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();\nthis.renderTemplateSource=function(b,e,f,g){g=g||w;f=f||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var h=b.data("precompiled");h||(h=b.text()||"",h=v.template(null,"{{ko_with $item.koBindingContext}}"+h+"{{/ko_with}}"),b.data("precompiled",h));b=[e.$data];e=v.extend({koBindingContext:e},f.templateOptions);e=v.tmpl(h,b,e);e.appendTo(g.createElement("div"));v.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+\na+" })()) }}"};this.addTemplate=function(a,b){w.write("<script type=\'text/html\' id=\'"+a+"\'>"+b+"\\x3c/script>")};0<a&&(v.tmpl.tag.ko_code={open:"__.push($1 || \'\');"},v.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.$a.prototype=new a.ca;a.$a.prototype.constructor=a.$a;var b=new a.$a;0<b.Hd&&a.gc(b);a.b("jqueryTmplTemplateEngine",a.$a)})()})})();})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8527\n')},6721:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3379);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7795);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(569);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3565);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9216);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4589);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_app_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1921);\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_app_less__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_app_less__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z && _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_app_less__WEBPACK_IMPORTED_MODULE_6__/* ["default"].locals */ .Z.locals ? _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_app_less__WEBPACK_IMPORTED_MODULE_6__/* ["default"].locals */ .Z.locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcyMS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxNQUErRjtBQUMvRixNQUFxRjtBQUNyRixNQUE0RjtBQUM1RixNQUErRztBQUMvRyxNQUF3RztBQUN4RyxNQUF3RztBQUN4RyxNQUEwSTtBQUMxSTtBQUNBOztBQUVBOztBQUVBLDRCQUE0QixxR0FBbUI7QUFDL0Msd0JBQXdCLGtIQUFhOztBQUVyQyx1QkFBdUIsdUdBQWE7QUFDcEM7QUFDQSxpQkFBaUIsK0ZBQU07QUFDdkIsNkJBQTZCLHNHQUFrQjs7QUFFL0MsYUFBYSwwR0FBRyxDQUFDLG1JQUFPOzs7O0FBSW9GO0FBQzVHLE9BQU8saUVBQWUsbUlBQU8sSUFBSSxpSkFBYyxHQUFHLGlKQUFjLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL2Nzcy9hcHAubGVzcz9iYWFlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXBwLmxlc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAubGVzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6721\n')},3379:module=>{"use strict";eval('\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM3OS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQTtBQUNBOztBQUVBLGtCQUFrQix3QkFBd0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsNEJBQTRCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3379\n')},569:module=>{"use strict";eval('\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNEQUFzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///569\n')},9216:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIxNi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9216\n')},3565:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU2NS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsY0FBYyxLQUF3QyxHQUFHLHNCQUFpQixHQUFHLENBQUk7O0FBRWpGO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3565\n')},7795:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n\n  var needLayer = typeof obj.layer !== "undefined";\n\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += "}";\n  }\n\n  if (obj.media) {\n    css += "}";\n  }\n\n  if (obj.supports) {\n    css += "}";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzc5NS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrREFBa0Q7QUFDbEQ7O0FBRUE7QUFDQSwwQ0FBMEM7QUFDMUM7O0FBRUE7O0FBRUE7QUFDQSxpRkFBaUY7QUFDakY7O0FBRUE7O0FBRUE7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7O0FBRUE7QUFDQSx5REFBeUQ7QUFDekQsSUFBSTs7QUFFSjs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanM/ZTQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7795\n')},4589:module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDU4OS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4589\n")},5942:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass Action {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n}\r\nexports["default"] = Action;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk0Mi5qcyIsIm1hcHBpbmdzIjoiOztBQUFBLE1BQThCLE1BQU07SUFHbEMsWUFBWSxJQUFZO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQU5ELDRCQU1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQWN0aW9uLnRzPzZiNjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgQWN0aW9uIHtcclxuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcpIHtcclxuICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5942\n')},8470:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.ActionName = void 0;\r\nvar ActionName;\r\n(function (ActionName) {\r\n    ActionName["SmallHeal"] = "Small Heal";\r\n    ActionName["Renew"] = "Renew";\r\n    ActionName["MediumHeal"] = "Medium Heal";\r\n})(ActionName = exports.ActionName || (exports.ActionName = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQ3MC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFVBSVg7QUFKRCxXQUFZLFVBQVU7SUFDcEIsc0NBQXdCO0lBQ3hCLDZCQUFlO0lBQ2Ysd0NBQTBCO0FBQzVCLENBQUMsRUFKVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUlyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0FjdGlvbk5hbWUudHM/NTRiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBBY3Rpb25OYW1lIHtcclxuICBTbWFsbEhlYWwgPSBcIlNtYWxsIEhlYWxcIixcclxuICBSZW5ldyA9IFwiUmVuZXdcIixcclxuICBNZWRpdW1IZWFsID0gXCJNZWRpdW0gSGVhbFwiLFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8470\n')},6491:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst PreviousValueTracker_1 = __importDefault(__webpack_require__(3779));\r\nclass ActionObservable extends PreviousValueTracker_1.default {\r\n    constructor(initialValue) {\r\n        super(initialValue);\r\n        this.action = ko.observable().extend({ notify: "always" });\r\n    }\r\n}\r\nexports["default"] = ActionObservable;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ5MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0I7QUFDL0IsMEVBQTBEO0FBRTFELE1BQXFCLGdCQUFvQixTQUFRLDhCQUF1QjtJQUd0RSxZQUFZLFlBQWdCO1FBQzFCLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUM3RCxDQUFDO0NBQ0Y7QUFQRCxzQ0FPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0FjdGlvbk9ic2VydmFibGUudHM/MThkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBrbyBmcm9tIFwia25vY2tvdXRcIjtcclxuaW1wb3J0IFByZXZpb3VzVmFsdWVUcmFja2VyIGZyb20gXCIuL1ByZXZpb3VzVmFsdWVUcmFja2VyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBY3Rpb25PYnNlcnZhYmxlPFQ+IGV4dGVuZHMgUHJldmlvdXNWYWx1ZVRyYWNrZXI8VD4ge1xyXG4gIGFjdGlvbjoga28uT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihpbml0aWFsVmFsdWU/OiBUKSB7XHJcbiAgICBzdXBlcihpbml0aWFsVmFsdWUpO1xyXG4gICAgdGhpcy5hY3Rpb24gPSBrby5vYnNlcnZhYmxlKCkuZXh0ZW5kKHsgbm90aWZ5OiBcImFsd2F5c1wiIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6491\n')},5926:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst velocity_animate_1 = __importDefault(__webpack_require__(8581));\r\nclass AnimationHelpers {\r\n    constructor() {\r\n        this.fadeOut = { opacity: [0, 1] };\r\n        this.fullWidth = { width: ["100%", "0%"] };\r\n        this.makeUpdateProgressFunction = (updateProgressFunction) => {\r\n            return (elements, complete, remaining, tweenValue, activeCall) => {\r\n                updateProgressFunction({\r\n                    complete: complete,\r\n                    remaining: remaining,\r\n                    start: new Date(Date.now() - (activeCall?.ellapsedTime || 0)),\r\n                    tweenValue: tweenValue,\r\n                });\r\n            };\r\n        };\r\n        this.pause = () => {\r\n            const animatingElements = Array.from(document.querySelectorAll(".velocity-animating"));\r\n            (0, velocity_animate_1.default)(animatingElements, "pause");\r\n            return animatingElements;\r\n        };\r\n        this.removeStyleAttribute = (elements) => {\r\n            if (!elements || elements.length === 0) {\r\n                return;\r\n            }\r\n            elements[0].removeAttribute("style");\r\n        };\r\n        this.resume = () => {\r\n            const pausedElements = Array.from(document.querySelectorAll(".velocity-animating"));\r\n            (0, velocity_animate_1.default)(pausedElements, "resume");\r\n            return pausedElements;\r\n        };\r\n    }\r\n}\r\nexports["default"] = new AnimationHelpers();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkyNi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNFQU8wQjtBQUcxQixNQUFNLGdCQUFnQjtJQUF0QjtRQUNFLFlBQU8sR0FBaUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUM1RCxjQUFTLEdBQWlDLEVBQUUsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDcEUsK0JBQTBCLEdBQUcsQ0FDM0Isc0JBQTZELEVBQ3pDLEVBQUU7WUFDdEIsT0FBTyxDQUNMLFFBQW9DLEVBQ3BDLFFBQTRCLEVBQzVCLFNBQTZCLEVBQzdCLFVBQThCLEVBQzlCLFVBQXFDLEVBQ3JDLEVBQUU7Z0JBQ0Ysc0JBQXNCLENBQUM7b0JBQ3JCLFFBQVEsRUFBRSxRQUFRO29CQUNsQixTQUFTLEVBQUUsU0FBUztvQkFDcEIsS0FBSyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLFVBQVUsRUFBRSxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQzdELFVBQVUsRUFBRSxVQUFVO2lCQUN2QixDQUFDLENBQUM7WUFDTCxDQUFDLENBQUM7UUFDSixDQUFDLENBQUM7UUFFSyxVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ2xCLE1BQU0saUJBQWlCLEdBQWtCLEtBQUssQ0FBQyxJQUFJLENBQ2pELFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBYyxxQkFBcUIsQ0FBQyxDQUM5RCxDQUFDO1lBRUYsOEJBQVEsRUFBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUVyQyxPQUFPLGlCQUFpQixDQUFDO1FBQzNCLENBQUMsQ0FBQztRQUVLLHlCQUFvQixHQUFHLENBQzVCLFFBQXNELEVBQ3RELEVBQUU7WUFDRixJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN0QyxPQUFPO2FBQ1I7WUFFRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQztRQUVLLFdBQU0sR0FBRyxHQUFHLEVBQUU7WUFDbkIsTUFBTSxjQUFjLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FDL0IsUUFBUSxDQUFDLGdCQUFnQixDQUFjLHFCQUFxQixDQUFDLENBQzlELENBQUM7WUFDRiw4QkFBUSxFQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUVuQyxPQUFPLGNBQWMsQ0FBQztRQUN4QixDQUFDLENBQUM7SUFDSixDQUFDO0NBQUE7QUFFRCxxQkFBZSxJQUFJLGdCQUFnQixFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9BbmltYXRpb25IZWxwZXJzLnRzPzk3ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZlbG9jaXR5LCB7XHJcbiAgQW5pbWF0aW9uQ2FsbCxcclxuICBIVE1Mb3JTVkdFbGVtZW50LFxyXG4gIFByb3BlcnRpZXMsXHJcbiAgVmVsb2NpdHlQcm9ncmVzc0ZuLFxyXG4gIFZlbG9jaXR5UHJvcGVydHksXHJcbiAgVmVsb2NpdHlSZXN1bHQsXHJcbn0gZnJvbSBcInZlbG9jaXR5LWFuaW1hdGVcIjtcclxuaW1wb3J0IHsgQW5pbWF0aW9uUHJvZ3Jlc3MgfSBmcm9tIFwiLi9BbmltYXRpb25Qcm9ncmVzc1wiO1xyXG5cclxuY2xhc3MgQW5pbWF0aW9uSGVscGVycyB7XHJcbiAgZmFkZU91dDogUHJvcGVydGllczxWZWxvY2l0eVByb3BlcnR5PiA9IHsgb3BhY2l0eTogWzAsIDFdIH07XHJcbiAgZnVsbFdpZHRoOiBQcm9wZXJ0aWVzPFZlbG9jaXR5UHJvcGVydHk+ID0geyB3aWR0aDogW1wiMTAwJVwiLCBcIjAlXCJdIH07XHJcbiAgbWFrZVVwZGF0ZVByb2dyZXNzRnVuY3Rpb24gPSAoXHJcbiAgICB1cGRhdGVQcm9ncmVzc0Z1bmN0aW9uOiAocHJvZ3Jlc3M6IEFuaW1hdGlvblByb2dyZXNzKSA9PiB2b2lkXHJcbiAgKTogVmVsb2NpdHlQcm9ncmVzc0ZuID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGVsZW1lbnRzOiBWZWxvY2l0eVJlc3VsdCB8IHVuZGVmaW5lZCxcclxuICAgICAgY29tcGxldGU6IG51bWJlciB8IHVuZGVmaW5lZCxcclxuICAgICAgcmVtYWluaW5nOiBudW1iZXIgfCB1bmRlZmluZWQsXHJcbiAgICAgIHR3ZWVuVmFsdWU6IG51bWJlciB8IHVuZGVmaW5lZCxcclxuICAgICAgYWN0aXZlQ2FsbDogQW5pbWF0aW9uQ2FsbCB8IHVuZGVmaW5lZFxyXG4gICAgKSA9PiB7XHJcbiAgICAgIHVwZGF0ZVByb2dyZXNzRnVuY3Rpb24oe1xyXG4gICAgICAgIGNvbXBsZXRlOiBjb21wbGV0ZSxcclxuICAgICAgICByZW1haW5pbmc6IHJlbWFpbmluZyxcclxuICAgICAgICBzdGFydDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIChhY3RpdmVDYWxsPy5lbGxhcHNlZFRpbWUgfHwgMCkpLFxyXG4gICAgICAgIHR3ZWVuVmFsdWU6IHR3ZWVuVmFsdWUsXHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBhbmltYXRpbmdFbGVtZW50czogSFRNTEVsZW1lbnRbXSA9IEFycmF5LmZyb20oXHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGw8SFRNTEVsZW1lbnQ+KFwiLnZlbG9jaXR5LWFuaW1hdGluZ1wiKVxyXG4gICAgKTtcclxuXHJcbiAgICBWZWxvY2l0eShhbmltYXRpbmdFbGVtZW50cywgXCJwYXVzZVwiKTtcclxuXHJcbiAgICByZXR1cm4gYW5pbWF0aW5nRWxlbWVudHM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHJlbW92ZVN0eWxlQXR0cmlidXRlID0gKFxyXG4gICAgZWxlbWVudHM6IFZlbG9jaXR5UmVzdWx0PEhUTUxvclNWR0VsZW1lbnQ+IHwgdW5kZWZpbmVkXHJcbiAgKSA9PiB7XHJcbiAgICBpZiAoIWVsZW1lbnRzIHx8IGVsZW1lbnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgZWxlbWVudHNbMF0ucmVtb3ZlQXR0cmlidXRlKFwic3R5bGVcIik7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHJlc3VtZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHBhdXNlZEVsZW1lbnRzID0gQXJyYXkuZnJvbShcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbDxIVE1MRWxlbWVudD4oXCIudmVsb2NpdHktYW5pbWF0aW5nXCIpXHJcbiAgICApO1xyXG4gICAgVmVsb2NpdHkocGF1c2VkRWxlbWVudHMsIFwicmVzdW1lXCIpO1xyXG5cclxuICAgIHJldHVybiBwYXVzZWRFbGVtZW50cztcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQW5pbWF0aW9uSGVscGVycygpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5926\n')},9454:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst AnimationHelpers_1 = __importDefault(__webpack_require__(5926));\r\nclass Animations {\r\n    constructor() {\r\n        this.fadeOut200 = {\r\n            animation: {\r\n                properties: AnimationHelpers_1.default.fadeOut,\r\n                options: {\r\n                    duration: 200,\r\n                    complete: AnimationHelpers_1.default.removeStyleAttribute,\r\n                },\r\n            },\r\n        };\r\n        this.fadeOut1000 = {\r\n            animation: {\r\n                properties: AnimationHelpers_1.default.fadeOut,\r\n                options: {\r\n                    duration: 1000,\r\n                    begin: AnimationHelpers_1.default.removeStyleAttribute,\r\n                },\r\n            },\r\n        };\r\n        this.fullWidth2000 = {\r\n            animation: {\r\n                properties: AnimationHelpers_1.default.fullWidth,\r\n                options: {\r\n                    duration: 2000,\r\n                    begin: AnimationHelpers_1.default.removeStyleAttribute,\r\n                },\r\n            },\r\n        };\r\n        this.fullWidth5000 = {\r\n            animation: {\r\n                properties: AnimationHelpers_1.default.fullWidth,\r\n                options: {\r\n                    duration: 5000,\r\n                    begin: AnimationHelpers_1.default.removeStyleAttribute,\r\n                },\r\n            },\r\n        };\r\n    }\r\n}\r\nexports["default"] = new Animations();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQ1NC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBLHNFQUFrRDtBQUVsRCxNQUFNLFVBQVU7SUFNZDtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUc7WUFDaEIsU0FBUyxFQUFFO2dCQUNULFVBQVUsRUFBRSwwQkFBZ0IsQ0FBQyxPQUFPO2dCQUNwQyxPQUFPLEVBQUU7b0JBQ1AsUUFBUSxFQUFFLEdBQUc7b0JBQ2IsUUFBUSxFQUFFLDBCQUFnQixDQUFDLG9CQUFvQjtpQkFDaEQ7YUFDRjtTQUNGLENBQUM7UUFFRixJQUFJLENBQUMsV0FBVyxHQUFHO1lBQ2pCLFNBQVMsRUFBRTtnQkFDVCxVQUFVLEVBQUUsMEJBQWdCLENBQUMsT0FBTztnQkFDcEMsT0FBTyxFQUFFO29CQUNQLFFBQVEsRUFBRSxJQUFJO29CQUNkLEtBQUssRUFBRSwwQkFBZ0IsQ0FBQyxvQkFBb0I7aUJBQzdDO2FBQ0Y7U0FDRixDQUFDO1FBRUYsSUFBSSxDQUFDLGFBQWEsR0FBRztZQUNuQixTQUFTLEVBQUU7Z0JBQ1QsVUFBVSxFQUFFLDBCQUFnQixDQUFDLFNBQVM7Z0JBQ3RDLE9BQU8sRUFBRTtvQkFDUCxRQUFRLEVBQUUsSUFBSTtvQkFDZCxLQUFLLEVBQUUsMEJBQWdCLENBQUMsb0JBQW9CO2lCQUM3QzthQUNGO1NBQ0YsQ0FBQztRQUVGLElBQUksQ0FBQyxhQUFhLEdBQUc7WUFDbkIsU0FBUyxFQUFFO2dCQUNULFVBQVUsRUFBRSwwQkFBZ0IsQ0FBQyxTQUFTO2dCQUN0QyxPQUFPLEVBQUU7b0JBQ1AsUUFBUSxFQUFFLElBQUk7b0JBQ2QsS0FBSyxFQUFFLDBCQUFnQixDQUFDLG9CQUFvQjtpQkFDN0M7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUFFRCxxQkFBZSxJQUFJLFVBQVUsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQW5pbWF0aW9ucy50cz8xMzM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuaW1hdGlvbldyYXBwZXIgfSBmcm9tIFwiLi9BbmltYXRpb25cIjtcclxuaW1wb3J0IEFuaW1hdGlvbkhlbHBlcnMgZnJvbSBcIi4vQW5pbWF0aW9uSGVscGVyc1wiO1xyXG5cclxuY2xhc3MgQW5pbWF0aW9ucyB7XHJcbiAgZmFkZU91dDIwMDogQW5pbWF0aW9uV3JhcHBlcjtcclxuICBmYWRlT3V0MTAwMDogQW5pbWF0aW9uV3JhcHBlcjtcclxuICBmdWxsV2lkdGgyMDAwOiBBbmltYXRpb25XcmFwcGVyO1xyXG4gIGZ1bGxXaWR0aDUwMDA6IEFuaW1hdGlvbldyYXBwZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5mYWRlT3V0MjAwID0ge1xyXG4gICAgICBhbmltYXRpb246IHtcclxuICAgICAgICBwcm9wZXJ0aWVzOiBBbmltYXRpb25IZWxwZXJzLmZhZGVPdXQsXHJcbiAgICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgZHVyYXRpb246IDIwMCxcclxuICAgICAgICAgIGNvbXBsZXRlOiBBbmltYXRpb25IZWxwZXJzLnJlbW92ZVN0eWxlQXR0cmlidXRlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZmFkZU91dDEwMDAgPSB7XHJcbiAgICAgIGFuaW1hdGlvbjoge1xyXG4gICAgICAgIHByb3BlcnRpZXM6IEFuaW1hdGlvbkhlbHBlcnMuZmFkZU91dCxcclxuICAgICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgICBkdXJhdGlvbjogMTAwMCxcclxuICAgICAgICAgIGJlZ2luOiBBbmltYXRpb25IZWxwZXJzLnJlbW92ZVN0eWxlQXR0cmlidXRlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZnVsbFdpZHRoMjAwMCA9IHtcclxuICAgICAgYW5pbWF0aW9uOiB7XHJcbiAgICAgICAgcHJvcGVydGllczogQW5pbWF0aW9uSGVscGVycy5mdWxsV2lkdGgsXHJcbiAgICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgZHVyYXRpb246IDIwMDAsXHJcbiAgICAgICAgICBiZWdpbjogQW5pbWF0aW9uSGVscGVycy5yZW1vdmVTdHlsZUF0dHJpYnV0ZSxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmZ1bGxXaWR0aDUwMDAgPSB7XHJcbiAgICAgIGFuaW1hdGlvbjoge1xyXG4gICAgICAgIHByb3BlcnRpZXM6IEFuaW1hdGlvbkhlbHBlcnMuZnVsbFdpZHRoLFxyXG4gICAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLFxyXG4gICAgICAgICAgYmVnaW46IEFuaW1hdGlvbkhlbHBlcnMucmVtb3ZlU3R5bGVBdHRyaWJ1dGUsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQW5pbWF0aW9ucygpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9454\n')},3717:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst ActionObservable_1 = __importDefault(__webpack_require__(6491));\r\nclass Boss {\r\n    constructor(health, player, tank, raid, onDeathCallback) {\r\n        this._adjustHealth = (amount) => {\r\n            const newHealth = this.health() + amount;\r\n            if (newHealth <= 0) {\r\n                this.health(0);\r\n                this._updateProgress(0);\r\n                this._onDeath();\r\n            }\r\n            else if (newHealth <= this.maxHealth) {\r\n                this.health(newHealth);\r\n                this._updateProgress((100.0 * newHealth) / this.maxHealth);\r\n            }\r\n            else {\r\n                this.health(this.maxHealth);\r\n                this._updateProgress(100);\r\n            }\r\n        };\r\n        this._isStarted = false;\r\n        this._onDeath = () => {\r\n            this.stop();\r\n            this.isDead(true);\r\n            this._onDeathCallback();\r\n        };\r\n        this._reward = null;\r\n        this._updateProgress = (healthPercentage) => {\r\n            this.triggers.forEach((trigger) => {\r\n                trigger.execute(healthPercentage);\r\n            });\r\n        };\r\n        this.cast = (action) => {\r\n            this.currentCasts.push(new ActionObservable_1.default(action));\r\n        };\r\n        this.engage = () => {\r\n            this.initialEvents.forEach((initialEvent) => {\r\n                initialEvent();\r\n            });\r\n            this.targets(Object.assign([], this.initialTargets));\r\n            this.start();\r\n        };\r\n        this.finishCast = (action) => {\r\n            this.currentCasts.remove((cast) => {\r\n                return cast.value() === action;\r\n            });\r\n        };\r\n        this.getLoop = (loopName) => this.loops.get(loopName);\r\n        this.harm = (amount) => this._adjustHealth(0 - amount);\r\n        this.healthPercentageString = ko.pureComputed(() => `${(100.0 * this.health()) / this.maxHealth}%`);\r\n        this.label = ko.pureComputed(() => `${this.name} (${this.health().toLocaleString("en-US")}/${this.maxHealth.toLocaleString("en-US")})`);\r\n        this.pause = () => {\r\n            this.loops.pause();\r\n        };\r\n        this.reset = () => {\r\n            this.health(this.maxHealth);\r\n            this._tank = this.initialTargets[0];\r\n        };\r\n        this.resume = () => {\r\n            this.loops.resume();\r\n        };\r\n        this.start = () => {\r\n            if (this._isStarted) {\r\n                return;\r\n            }\r\n            this._isStarted = true;\r\n            this.loops.start();\r\n        };\r\n        this.stop = () => {\r\n            this.targets.removeAll();\r\n            this.loops.stop();\r\n            this.currentCasts().forEach((cast) => {\r\n                cast.action("finish");\r\n            });\r\n        };\r\n        this.health = ko.observable(health);\r\n        this.isDead = ko.observable(false);\r\n        this.targets = ko.observableArray([]);\r\n        this.currentCasts = ko.observableArray([]);\r\n        this.maxHealth = health;\r\n        this._player = player;\r\n        this._tank = tank;\r\n        this._raid = raid;\r\n        this._onDeathCallback = onDeathCallback;\r\n    }\r\n    get reward() {\r\n        return this._reward;\r\n    }\r\n    set reward(reward) {\r\n        this._reward = reward;\r\n    }\r\n}\r\nexports["default"] = Boss;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3717\n')},275:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst DonnyFrump_1 = __importDefault(__webpack_require__(5119));\r\nconst ElongTusk_1 = __importDefault(__webpack_require__(5036));\r\nconst GordoRamzee_1 = __importDefault(__webpack_require__(15));\r\nclass BossFactory {\r\n    create(bossName, player, tank, raid, onDeathCallback) {\r\n        switch (bossName) {\r\n            case BossName_1.BossName.GordoRamzee:\r\n                return new GordoRamzee_1.default(player, tank, raid, onDeathCallback);\r\n            case BossName_1.BossName.DonnyFrump:\r\n                return new DonnyFrump_1.default(player, tank, raid, onDeathCallback);\r\n            case BossName_1.BossName.ElongTusk:\r\n                return new ElongTusk_1.default(player, tank, raid, onDeathCallback);\r\n        }\r\n    }\r\n}\r\nexports["default"] = new BossFactory();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc1LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsNkNBQTZDO0FBQzdDLGdFQUE2QztBQUM3QywrREFBMkM7QUFDM0MsK0RBQStDO0FBSy9DLE1BQU0sV0FBVztJQUNmLE1BQU0sQ0FDSixRQUFrQixFQUNsQixNQUFjLEVBQ2QsSUFBYyxFQUNkLElBQVcsRUFDWCxlQUEyQjtRQUUzQixRQUFRLFFBQVEsRUFBRTtZQUNoQixLQUFLLG1CQUFRLENBQUMsV0FBVztnQkFDdkIsT0FBTyxJQUFJLHFCQUFXLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7WUFDOUQsS0FBSyxtQkFBUSxDQUFDLFVBQVU7Z0JBQ3RCLE9BQU8sSUFBSSxvQkFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1lBQzdELEtBQUssbUJBQVEsQ0FBQyxTQUFTO2dCQUNyQixPQUFPLElBQUksbUJBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxlQUFlLENBQUMsQ0FBQztTQUM3RDtJQUNILENBQUM7Q0FDRjtBQUVELHFCQUFlLElBQUksV0FBVyxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9Cb3NzRmFjdG9yeS50cz9mMzgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb3NzIGZyb20gXCIuL0Jvc3NcIjtcclxuaW1wb3J0IHsgQm9zc05hbWUgfSBmcm9tIFwiLi9Cb3NzZXMvQm9zc05hbWVcIjtcclxuaW1wb3J0IERvbm55RnJ1bXAgZnJvbSBcIi4vQm9zc2VzL0Rvbm55RnJ1bXBcIjtcclxuaW1wb3J0IEVsb25nVHVzayBmcm9tIFwiLi9Cb3NzZXMvRWxvbmdUdXNrXCI7XHJcbmltcG9ydCBHb3Jkb1JhbXplZSBmcm9tIFwiLi9Cb3NzZXMvR29yZG9SYW16ZWVcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCIuL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBQYXJ0eSBmcm9tIFwiLi9QYXJ0eVwiO1xyXG5pbXBvcnQgUGxheWVyIGZyb20gXCIuL1BsYXllclwiO1xyXG5cclxuY2xhc3MgQm9zc0ZhY3Rvcnkge1xyXG4gIGNyZWF0ZShcclxuICAgIGJvc3NOYW1lOiBCb3NzTmFtZSxcclxuICAgIHBsYXllcjogUGxheWVyLFxyXG4gICAgdGFuazogRnJpZW5kbHksXHJcbiAgICByYWlkOiBQYXJ0eSxcclxuICAgIG9uRGVhdGhDYWxsYmFjazogKCkgPT4gdm9pZFxyXG4gICk6IEJvc3Mge1xyXG4gICAgc3dpdGNoIChib3NzTmFtZSkge1xyXG4gICAgICBjYXNlIEJvc3NOYW1lLkdvcmRvUmFtemVlOlxyXG4gICAgICAgIHJldHVybiBuZXcgR29yZG9SYW16ZWUocGxheWVyLCB0YW5rLCByYWlkLCBvbkRlYXRoQ2FsbGJhY2spO1xyXG4gICAgICBjYXNlIEJvc3NOYW1lLkRvbm55RnJ1bXA6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBEb25ueUZydW1wKHBsYXllciwgdGFuaywgcmFpZCwgb25EZWF0aENhbGxiYWNrKTtcclxuICAgICAgY2FzZSBCb3NzTmFtZS5FbG9uZ1R1c2s6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFbG9uZ1R1c2socGxheWVyLCB0YW5rLCByYWlkLCBvbkRlYXRoQ2FsbGJhY2spO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IEJvc3NGYWN0b3J5KCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///275\n')},1327:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.BossName = void 0;\r\nvar BossName;\r\n(function (BossName) {\r\n    BossName["GordoRamzee"] = "Gordo Ramzee";\r\n    BossName["DonnyFrump"] = "Donny Frump";\r\n    BossName["ElongTusk"] = "Elong Tusk";\r\n})(BossName = exports.BossName || (exports.BossName = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMyNy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFFBSVg7QUFKRCxXQUFZLFFBQVE7SUFDbEIsd0NBQTRCO0lBQzVCLHNDQUEwQjtJQUMxQixvQ0FBd0I7QUFDMUIsQ0FBQyxFQUpXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBSW5CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQm9zc2VzL0Jvc3NOYW1lLnRzP2MxMWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gQm9zc05hbWUge1xyXG4gIEdvcmRvUmFtemVlID0gXCJHb3JkbyBSYW16ZWVcIixcclxuICBEb25ueUZydW1wID0gXCJEb25ueSBGcnVtcFwiLFxyXG4gIEVsb25nVHVzayA9IFwiRWxvbmcgVHVza1wiLFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1327\n')},5119:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Boss_1 = __importDefault(__webpack_require__(3717));\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nconst Loops_1 = __importDefault(__webpack_require__(7657));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nconst Trigger_1 = __importDefault(__webpack_require__(6983));\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst AngryTweet_1 = __importDefault(__webpack_require__(3469));\r\nconst Uncertainty_1 = __importDefault(__webpack_require__(649));\r\nconst Enrage_1 = __importDefault(__webpack_require__(9473));\r\n// The encounter begins and Donny Frump is not pleased people on Twitter are being mean to him.\r\n// He casts Uncertainty on the entire raid, a debuff that does damage over time and\r\n// does more damage as a party member\'s health decreases.\r\n// He targets the tank and does 15-20 damage every 2-4 seconds.\r\n// Every 10 seconds he sends an angry tweet, hitting 1-3 members of the party, damaging each between 6-20.\r\n// There\'s a 30% chance the tweet contains egregious misinformation, confusing affected party members further,\r\n// doubling their damage taken for 5 seconds.\r\n// At 20% health, he enrages, soiling his diaper, and all damage done to the tank is doubled.\r\nclass DonnyFrump extends Boss_1.default {\r\n    constructor(player, tank, raid, onDeathCallback) {\r\n        super(78558, player, tank, raid, onDeathCallback);\r\n        this._angryTweet = () => {\r\n            this._getAttackTankLoop().pause();\r\n            const numTargets = Random_1.default.fromIntegerIntervalInclusive(1, 3);\r\n            const angryTweetTargets = this._raid.getRandomMembers(numTargets, true /* allowPlayer */);\r\n            this.targets(angryTweetTargets);\r\n            const angryTweet = new AngryTweet_1.default(angryTweetTargets, () => {\r\n                this.finishCast(angryTweet);\r\n                this._targetTank();\r\n                this._getAttackTankLoop().resume();\r\n            });\r\n            this.cast(angryTweet);\r\n        };\r\n        this._attackTank = () => {\r\n            this._targetTank();\r\n            let attackTankAmount = Random_1.default.fromIntegerIntervalInclusive(15, 20);\r\n            if (this._isEnraged) {\r\n                attackTankAmount *= 2;\r\n            }\r\n            this._tank.harm(attackTankAmount);\r\n        };\r\n        this._castUncertainty = () => {\r\n            this.targets(this._raid.members);\r\n            const uncertainty = new Uncertainty_1.default(this._raid.members, () => {\r\n                this.finishCast(uncertainty);\r\n                this._targetTank();\r\n                this.start();\r\n            });\r\n            this.cast(uncertainty);\r\n        };\r\n        this._enrage = () => {\r\n            const enrage = new Enrage_1.default([], // No specific target\r\n            () => {\r\n                this._isEnraged = true;\r\n                this.finishCast(enrage);\r\n                this._targetTank();\r\n            });\r\n            this.cast(enrage);\r\n        };\r\n        this._getAttackTankLoop = () => {\r\n            return this.getLoop("Attack Tank");\r\n        };\r\n        this._targetTank = () => {\r\n            this.targets([this._tank]);\r\n        };\r\n        this.initialEvents = [];\r\n        this.initialTargets = [];\r\n        this.onDeathOfFriendly = (friendly) => {\r\n            if (friendly === this._tank) {\r\n                // The tank just died.\r\n                this.targets.remove(this._tank);\r\n                const remainingAlive = this._raid.getLivingMembers();\r\n                if (remainingAlive.length === 0) {\r\n                    this.stop();\r\n                    return;\r\n                }\r\n                if (remainingAlive.length === 1 && remainingAlive[0] === this._player) {\r\n                    // The player is the last one alive.\r\n                    this._tank = this._player;\r\n                }\r\n                else {\r\n                    // Choose some random DPS to become the new tank.\r\n                    this._tank = this._raid.getOneRandomNpc();\r\n                }\r\n                this.targets.push(this._tank);\r\n            }\r\n        };\r\n        this.name = BossName_1.BossName.DonnyFrump;\r\n        this._isEnraged = false;\r\n        this.loops = new Loops_1.default(new Loop_1.default("Attack Tank", this._attackTank, function () {\r\n            return 1000 * Random_1.default.fromIntegerIntervalInclusive(2, 4);\r\n        }), new Loop_1.default("Angry Tweet", this._angryTweet, 10000));\r\n        this.initialEvents = [this._castUncertainty];\r\n        this.initialTargets = [this._tank];\r\n        this.triggers = [\r\n            new Trigger_1.default((healthPercentage) => {\r\n                if (healthPercentage <= 20) {\r\n                    this._enrage();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }),\r\n        ];\r\n    }\r\n}\r\nexports["default"] = DonnyFrump;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5119\n')},3469:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst Debuff_1 = __importDefault(__webpack_require__(5584));\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass AngryTweet extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Angry Tweet");\r\n        this._cast = () => {\r\n            this.targets.forEach((target) => {\r\n                const harmAmount = Random_1.default.fromIntegerIntervalInclusive(6, 20);\r\n                target.harm(harmAmount);\r\n                if (!target.isDead() && Math.random() < 0.3) {\r\n                    const confusionDebuff = new Debuff_1.default({\r\n                        name: DebuffName_1.DebuffName.Confusion,\r\n                        description: "Damage taken is doubled for 5 seconds.",\r\n                        type: DebuffType_1.DebuffType.IncreaseDamageTaken,\r\n                        duration: 5000,\r\n                        target: target,\r\n                        harmEffect: (target, damage) => {\r\n                            // Damage taken is doubled.\r\n                            return damage * 2.0;\r\n                        },\r\n                    });\r\n                    target.applyDebuff(confusionDebuff);\r\n                }\r\n            });\r\n        };\r\n        this._complete = () => {\r\n            this._cast();\r\n            this._onSuccess();\r\n        };\r\n        this.targets = targets;\r\n        this._onSuccess = onSuccess;\r\n        const wrapper = { ...Animations_1.default.fullWidth2000 };\r\n        wrapper.animation.options.complete = this._complete;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = AngryTweet;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ2OS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUErQjtBQUUvQixnRUFBdUM7QUFDdkMsNERBQStCO0FBQy9CLCtDQUEyQztBQUMzQywrQ0FBMkM7QUFFM0MsNERBQStCO0FBRS9CLE1BQXFCLFVBQVcsU0FBUSxnQkFBTTtJQWtDNUMsWUFBWSxPQUFtQixFQUFFLFNBQXFCO1FBQ3BELEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQWxDZixVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ25CLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBZ0IsRUFBRSxFQUFFO2dCQUN4QyxNQUFNLFVBQVUsR0FBRyxnQkFBTSxDQUFDLDRCQUE0QixDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFFeEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxFQUFFO29CQUMzQyxNQUFNLGVBQWUsR0FBRyxJQUFJLGdCQUFNLENBQUM7d0JBQ2pDLElBQUksRUFBRSx1QkFBVSxDQUFDLFNBQVM7d0JBQzFCLFdBQVcsRUFBRSx3Q0FBd0M7d0JBQ3JELElBQUksRUFBRSx1QkFBVSxDQUFDLG1CQUFtQjt3QkFDcEMsUUFBUSxFQUFFLElBQUk7d0JBQ2QsTUFBTSxFQUFFLE1BQU07d0JBQ2QsVUFBVSxFQUFFLENBQUMsTUFBZ0IsRUFBRSxNQUFjLEVBQVUsRUFBRTs0QkFDdkQsMkJBQTJCOzRCQUMzQixPQUFPLE1BQU0sR0FBRyxHQUFHLENBQUM7d0JBQ3RCLENBQUM7cUJBQ0YsQ0FBQyxDQUFDO29CQUVILE1BQU0sQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLENBQUM7aUJBQ3JDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFTSxjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUM7UUFVQSxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUU1QixNQUFNLE9BQU8sR0FBcUIsRUFBRSxHQUFHLG9CQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDbEUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFcEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUE3Q0QsZ0NBNkNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQm9zc2VzL0Rvbm55RnJ1bXAvQWN0aW9ucy9BbmdyeVR3ZWV0LnRzP2MxNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGlvbiBmcm9tIFwidHMvQWN0aW9uXCI7XHJcbmltcG9ydCB7IEFuaW1hdGlvbiwgQW5pbWF0aW9uV3JhcHBlciB9IGZyb20gXCJ0cy9BbmltYXRpb25cIjtcclxuaW1wb3J0IEFuaW1hdGlvbnMgZnJvbSBcInRzL0FuaW1hdGlvbnNcIjtcclxuaW1wb3J0IERlYnVmZiBmcm9tIFwidHMvRGVidWZmXCI7XHJcbmltcG9ydCB7IERlYnVmZk5hbWUgfSBmcm9tIFwidHMvRGVidWZmTmFtZVwiO1xyXG5pbXBvcnQgeyBEZWJ1ZmZUeXBlIH0gZnJvbSBcInRzL0RlYnVmZlR5cGVcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCJ0cy9GcmllbmRseVwiO1xyXG5pbXBvcnQgUmFuZG9tIGZyb20gXCJ0cy9SYW5kb21cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFuZ3J5VHdlZXQgZXh0ZW5kcyBBY3Rpb24ge1xyXG4gIHByaXZhdGUgX2Nhc3QgPSAoKSA9PiB7XHJcbiAgICB0aGlzLnRhcmdldHMuZm9yRWFjaCgodGFyZ2V0OiBGcmllbmRseSkgPT4ge1xyXG4gICAgICBjb25zdCBoYXJtQW1vdW50ID0gUmFuZG9tLmZyb21JbnRlZ2VySW50ZXJ2YWxJbmNsdXNpdmUoNiwgMjApO1xyXG4gICAgICB0YXJnZXQuaGFybShoYXJtQW1vdW50KTtcclxuXHJcbiAgICAgIGlmICghdGFyZ2V0LmlzRGVhZCgpICYmIE1hdGgucmFuZG9tKCkgPCAwLjMpIHtcclxuICAgICAgICBjb25zdCBjb25mdXNpb25EZWJ1ZmYgPSBuZXcgRGVidWZmKHtcclxuICAgICAgICAgIG5hbWU6IERlYnVmZk5hbWUuQ29uZnVzaW9uLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiRGFtYWdlIHRha2VuIGlzIGRvdWJsZWQgZm9yIDUgc2Vjb25kcy5cIixcclxuICAgICAgICAgIHR5cGU6IERlYnVmZlR5cGUuSW5jcmVhc2VEYW1hZ2VUYWtlbixcclxuICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLFxyXG4gICAgICAgICAgdGFyZ2V0OiB0YXJnZXQsXHJcbiAgICAgICAgICBoYXJtRWZmZWN0OiAodGFyZ2V0OiBGcmllbmRseSwgZGFtYWdlOiBudW1iZXIpOiBudW1iZXIgPT4ge1xyXG4gICAgICAgICAgICAvLyBEYW1hZ2UgdGFrZW4gaXMgZG91YmxlZC5cclxuICAgICAgICAgICAgcmV0dXJuIGRhbWFnZSAqIDIuMDtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRhcmdldC5hcHBseURlYnVmZihjb25mdXNpb25EZWJ1ZmYpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9jb21wbGV0ZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX2Nhc3QoKTtcclxuICAgIHRoaXMuX29uU3VjY2VzcygpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uU3VjY2VzczogKCkgPT4gdm9pZDtcclxuXHJcbiAgYW5pbWF0aW9uOiBBbmltYXRpb25bXTtcclxuICB0YXJnZXRzOiBGcmllbmRseVtdO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0YXJnZXRzOiBGcmllbmRseVtdLCBvblN1Y2Nlc3M6ICgpID0+IHZvaWQpIHtcclxuICAgIHN1cGVyKFwiQW5ncnkgVHdlZXRcIik7XHJcblxyXG4gICAgdGhpcy50YXJnZXRzID0gdGFyZ2V0cztcclxuICAgIHRoaXMuX29uU3VjY2VzcyA9IG9uU3VjY2VzcztcclxuXHJcbiAgICBjb25zdCB3cmFwcGVyOiBBbmltYXRpb25XcmFwcGVyID0geyAuLi5BbmltYXRpb25zLmZ1bGxXaWR0aDIwMDAgfTtcclxuICAgIHdyYXBwZXIuYW5pbWF0aW9uLm9wdGlvbnMuY29tcGxldGUgPSB0aGlzLl9jb21wbGV0ZTtcclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbiA9IFt3cmFwcGVyLmFuaW1hdGlvbl07XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3469\n')},649:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nconst DotDebuff_1 = __importDefault(__webpack_require__(7966));\r\nclass Uncertainty extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Uncertainty");\r\n        this._cast = () => {\r\n            this.targets.forEach((target) => {\r\n                const uncertaintyDebuff = new DotDebuff_1.default({\r\n                    name: DebuffName_1.DebuffName.Uncertainty,\r\n                    description: "Target can\'t tell what\'s true anymore. At full health, target takes 1 damage every 2 seconds. Increases to 5 per 2 seconds when near death.",\r\n                    interval: 2000,\r\n                    duration: -1,\r\n                    target: target,\r\n                    harmEffect: (target, harmAmount) => {\r\n                        target.harm(harmAmount);\r\n                        return harmAmount;\r\n                    },\r\n                    getHarmAmount: (uncertaintyTarget) => {\r\n                        // 1 dps @ 100% health\r\n                        // 5 dps @ 0% health\r\n                        return Math.round(-4 * uncertaintyTarget.healthPercentage() + 5);\r\n                    },\r\n                });\r\n                target.applyDebuff(uncertaintyDebuff);\r\n            });\r\n        };\r\n        this._complete = () => {\r\n            this._cast();\r\n            this._onSuccess();\r\n        };\r\n        this.targets = targets;\r\n        this._onSuccess = onSuccess;\r\n        const wrapper = { ...Animations_1.default.fullWidth2000 };\r\n        wrapper.animation.options.complete = this._complete;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = Uncertainty;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNERBQStCO0FBRS9CLGdFQUF1QztBQUN2QywrQ0FBMkM7QUFDM0MsK0RBQXFDO0FBR3JDLE1BQXFCLFdBQVksU0FBUSxnQkFBTTtJQW1DN0MsWUFBWSxPQUFtQixFQUFFLFNBQXFCO1FBQ3BELEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQW5DZixVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ25CLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBZ0IsRUFBRSxFQUFFO2dCQUN4QyxNQUFNLGlCQUFpQixHQUFHLElBQUksbUJBQVMsQ0FBQztvQkFDdEMsSUFBSSxFQUFFLHVCQUFVLENBQUMsV0FBVztvQkFDNUIsV0FBVyxFQUNULDZJQUE2STtvQkFDL0ksUUFBUSxFQUFFLElBQUk7b0JBQ2QsUUFBUSxFQUFFLENBQUMsQ0FBQztvQkFDWixNQUFNLEVBQUUsTUFBTTtvQkFDZCxVQUFVLEVBQUUsQ0FBQyxNQUFnQixFQUFFLFVBQWtCLEVBQVUsRUFBRTt3QkFDM0QsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzt3QkFDeEIsT0FBTyxVQUFVLENBQUM7b0JBQ3BCLENBQUM7b0JBQ0QsYUFBYSxFQUFFLENBQUMsaUJBQTJCLEVBQVUsRUFBRTt3QkFDckQsc0JBQXNCO3dCQUN0QixvQkFBb0I7d0JBQ3BCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxpQkFBaUIsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUNuRSxDQUFDO2lCQUNGLENBQUMsQ0FBQztnQkFFSCxNQUFNLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDeEMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFTSxjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUM7UUFVQSxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUU1QixNQUFNLE9BQU8sR0FBcUIsRUFBRSxHQUFHLG9CQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDbEUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFcEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUE5Q0QsaUNBOENDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQm9zc2VzL0Rvbm55RnJ1bXAvQWN0aW9ucy9VbmNlcnRhaW50eS50cz9lZGQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY3Rpb24gZnJvbSBcInRzL0FjdGlvblwiO1xyXG5pbXBvcnQgeyBBbmltYXRpb24sIEFuaW1hdGlvbldyYXBwZXIgfSBmcm9tIFwidHMvQW5pbWF0aW9uXCI7XHJcbmltcG9ydCBBbmltYXRpb25zIGZyb20gXCJ0cy9BbmltYXRpb25zXCI7XHJcbmltcG9ydCB7IERlYnVmZk5hbWUgfSBmcm9tIFwidHMvRGVidWZmTmFtZVwiO1xyXG5pbXBvcnQgRG90RGVidWZmIGZyb20gXCJ0cy9Eb3REZWJ1ZmZcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCJ0cy9GcmllbmRseVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5jZXJ0YWludHkgZXh0ZW5kcyBBY3Rpb24ge1xyXG4gIHByaXZhdGUgX2Nhc3QgPSAoKSA9PiB7XHJcbiAgICB0aGlzLnRhcmdldHMuZm9yRWFjaCgodGFyZ2V0OiBGcmllbmRseSkgPT4ge1xyXG4gICAgICBjb25zdCB1bmNlcnRhaW50eURlYnVmZiA9IG5ldyBEb3REZWJ1ZmYoe1xyXG4gICAgICAgIG5hbWU6IERlYnVmZk5hbWUuVW5jZXJ0YWludHksXHJcbiAgICAgICAgZGVzY3JpcHRpb246XHJcbiAgICAgICAgICBcIlRhcmdldCBjYW4ndCB0ZWxsIHdoYXQncyB0cnVlIGFueW1vcmUuIEF0IGZ1bGwgaGVhbHRoLCB0YXJnZXQgdGFrZXMgMSBkYW1hZ2UgZXZlcnkgMiBzZWNvbmRzLiBJbmNyZWFzZXMgdG8gNSBwZXIgMiBzZWNvbmRzIHdoZW4gbmVhciBkZWF0aC5cIixcclxuICAgICAgICBpbnRlcnZhbDogMjAwMCxcclxuICAgICAgICBkdXJhdGlvbjogLTEsXHJcbiAgICAgICAgdGFyZ2V0OiB0YXJnZXQsXHJcbiAgICAgICAgaGFybUVmZmVjdDogKHRhcmdldDogRnJpZW5kbHksIGhhcm1BbW91bnQ6IG51bWJlcik6IG51bWJlciA9PiB7XHJcbiAgICAgICAgICB0YXJnZXQuaGFybShoYXJtQW1vdW50KTtcclxuICAgICAgICAgIHJldHVybiBoYXJtQW1vdW50O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0SGFybUFtb3VudDogKHVuY2VydGFpbnR5VGFyZ2V0OiBGcmllbmRseSk6IG51bWJlciA9PiB7XHJcbiAgICAgICAgICAvLyAxIGRwcyBAIDEwMCUgaGVhbHRoXHJcbiAgICAgICAgICAvLyA1IGRwcyBAIDAlIGhlYWx0aFxyXG4gICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoLTQgKiB1bmNlcnRhaW50eVRhcmdldC5oZWFsdGhQZXJjZW50YWdlKCkgKyA1KTtcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRhcmdldC5hcHBseURlYnVmZih1bmNlcnRhaW50eURlYnVmZik7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9jb21wbGV0ZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX2Nhc3QoKTtcclxuICAgIHRoaXMuX29uU3VjY2VzcygpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uU3VjY2VzczogKCkgPT4gdm9pZDtcclxuXHJcbiAgYW5pbWF0aW9uOiBBbmltYXRpb25bXTtcclxuICB0YXJnZXRzOiBGcmllbmRseVtdO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0YXJnZXRzOiBGcmllbmRseVtdLCBvblN1Y2Nlc3M6ICgpID0+IHZvaWQpIHtcclxuICAgIHN1cGVyKFwiVW5jZXJ0YWludHlcIik7XHJcblxyXG4gICAgdGhpcy50YXJnZXRzID0gdGFyZ2V0cztcclxuICAgIHRoaXMuX29uU3VjY2VzcyA9IG9uU3VjY2VzcztcclxuXHJcbiAgICBjb25zdCB3cmFwcGVyOiBBbmltYXRpb25XcmFwcGVyID0geyAuLi5BbmltYXRpb25zLmZ1bGxXaWR0aDIwMDAgfTtcclxuICAgIHdyYXBwZXIuYW5pbWF0aW9uLm9wdGlvbnMuY29tcGxldGUgPSB0aGlzLl9jb21wbGV0ZTtcclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbiA9IFt3cmFwcGVyLmFuaW1hdGlvbl07XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///649\n')},5036:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Boss_1 = __importDefault(__webpack_require__(3717));\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nconst Loops_1 = __importDefault(__webpack_require__(7657));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nconst Trigger_1 = __importDefault(__webpack_require__(6983));\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst Gore_1 = __importDefault(__webpack_require__(7647));\r\nconst Stomp_1 = __importDefault(__webpack_require__(6746));\r\nconst Enrage_1 = __importDefault(__webpack_require__(9473));\r\n// The encounter begins and Elong Tusk is displeased his company stock value dropped significantly.\r\n// He targets the tank and does 8-12 damage every 1-2 seconds.\r\n// Every 12 seconds, he gores one party member with his long tusk, damaging them between 24-42.\r\n// Gored party members will bleed for 4 damage every second until healed to full.\r\n// Immediately after goring, he will stomp his feet, damaging all members of the party for 16-28, and silencing the player if they are casting.\r\n// At 20% health, he enrages and all damage done to the tank is doubled.\r\nclass ElongTusk extends Boss_1.default {\r\n    constructor(player, tank, raid, onDeathCallback) {\r\n        super(102420, player, tank, raid, onDeathCallback);\r\n        this._attackTank = () => {\r\n            this._targetTank();\r\n            let attackTankAmount = Random_1.default.fromIntegerIntervalInclusive(8, 12);\r\n            if (this._isEnraged) {\r\n                attackTankAmount *= 2;\r\n            }\r\n            this._tank.harm(attackTankAmount);\r\n        };\r\n        this._enrage = () => {\r\n            const enrage = new Enrage_1.default([], // No specific target\r\n            () => {\r\n                this._isEnraged = true;\r\n                this.finishCast(enrage);\r\n                this._targetTank();\r\n            });\r\n            this.cast(enrage);\r\n        };\r\n        this._getAttackTankLoop = () => {\r\n            return this.getLoop("Attack Tank");\r\n        };\r\n        this._targetTank = () => {\r\n            this.targets([this._tank]);\r\n        };\r\n        this._gore = () => {\r\n            this._getAttackTankLoop().pause();\r\n            const goreTargets = this._raid.getRandomMembers(1, true /* allowPlayer */);\r\n            this.targets(goreTargets);\r\n            const gore = new Gore_1.default(goreTargets, () => {\r\n                this.finishCast(gore);\r\n                this._targetTank();\r\n                this._getAttackTankLoop().resume();\r\n                this._stomp();\r\n            });\r\n            this.cast(gore);\r\n        };\r\n        this._stomp = () => {\r\n            if (this._player.isDead()) {\r\n                return;\r\n            }\r\n            this._getAttackTankLoop().pause();\r\n            const stompTargets = this._raid.members;\r\n            this.targets(stompTargets);\r\n            const stomp = new Stomp_1.default(stompTargets, () => {\r\n                this.finishCast(stomp);\r\n                this._targetTank();\r\n                this._getAttackTankLoop().resume();\r\n            });\r\n            this.cast(stomp);\r\n        };\r\n        this.initialEvents = [];\r\n        this.initialTargets = [];\r\n        this.onDeathOfFriendly = (friendly) => {\r\n            if (friendly === this._tank) {\r\n                // The tank just died.\r\n                this.targets.remove(this._tank);\r\n                const remainingAlive = this._raid.getLivingMembers();\r\n                if (remainingAlive.length === 0) {\r\n                    this.stop();\r\n                    return;\r\n                }\r\n                if (remainingAlive.length === 1 && remainingAlive[0] === this._player) {\r\n                    // The player is the last one alive.\r\n                    this._tank = this._player;\r\n                }\r\n                else {\r\n                    // Choose some random DPS to become the new tank.\r\n                    this._tank = this._raid.getOneRandomNpc();\r\n                }\r\n                this.targets.push(this._tank);\r\n            }\r\n        };\r\n        this.name = BossName_1.BossName.ElongTusk;\r\n        this._isEnraged = false;\r\n        this.loops = new Loops_1.default(new Loop_1.default("Attack Tank", this._attackTank, function () {\r\n            return 1000 * Random_1.default.fromIntegerIntervalInclusive(2, 4);\r\n        }), new Loop_1.default("Gore", this._gore, 12000));\r\n        this.initialTargets = [this._tank];\r\n        this.triggers = [\r\n            new Trigger_1.default((healthPercentage) => {\r\n                if (healthPercentage <= 20) {\r\n                    this._enrage();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }),\r\n        ];\r\n    }\r\n}\r\nexports["default"] = ElongTusk;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5036\n')},7647:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nconst DotDebuff_1 = __importDefault(__webpack_require__(7966));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass Gore extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Gore");\r\n        this._cast = () => {\r\n            this.targets.forEach((target) => {\r\n                const harmAmount = Random_1.default.fromIntegerIntervalInclusive(24, 42);\r\n                target.harm(harmAmount);\r\n                if (!target.isDead()) {\r\n                    const bleedDebuff = new DotDebuff_1.default({\r\n                        name: DebuffName_1.DebuffName.Bleed,\r\n                        description: "Bleeding for 4 damage every second until healed to full.",\r\n                        interval: 1000,\r\n                        duration: -1,\r\n                        target: target,\r\n                        harmEffect: (foodPoisoningTarget, harmAmount) => {\r\n                            foodPoisoningTarget.harm(harmAmount);\r\n                            return harmAmount;\r\n                        },\r\n                        getHarmAmount: (target) => 4,\r\n                        postHealCallback: (target) => {\r\n                            if (target.isAtFullHealth) {\r\n                                target.removeDebuff(DebuffName_1.DebuffName.Bleed);\r\n                            }\r\n                        },\r\n                    });\r\n                    target.applyDebuff(bleedDebuff);\r\n                }\r\n            });\r\n        };\r\n        this._complete = () => {\r\n            this._cast();\r\n            this._onSuccess();\r\n        };\r\n        this.targets = targets;\r\n        this._onSuccess = onSuccess;\r\n        const wrapper = { ...Animations_1.default.fullWidth2000 };\r\n        wrapper.animation.options.complete = this._complete;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = Gore;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY0Ny5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUErQjtBQUUvQixnRUFBdUM7QUFDdkMsK0NBQTJDO0FBQzNDLCtEQUFxQztBQUVyQyw0REFBK0I7QUFFL0IsTUFBcUIsSUFBSyxTQUFRLGdCQUFNO0lBeUN0QyxZQUFZLE9BQW1CLEVBQUUsU0FBcUI7UUFDcEQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBekNSLFVBQUssR0FBRyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7Z0JBQ3hDLE1BQU0sVUFBVSxHQUFHLGdCQUFNLENBQUMsNEJBQTRCLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMvRCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUV4QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFO29CQUNwQixNQUFNLFdBQVcsR0FBRyxJQUFJLG1CQUFTLENBQUM7d0JBQ2hDLElBQUksRUFBRSx1QkFBVSxDQUFDLEtBQUs7d0JBQ3RCLFdBQVcsRUFDVCwwREFBMEQ7d0JBQzVELFFBQVEsRUFBRSxJQUFJO3dCQUNkLFFBQVEsRUFBRSxDQUFDLENBQUM7d0JBQ1osTUFBTSxFQUFFLE1BQU07d0JBQ2QsVUFBVSxFQUFFLENBQUMsbUJBQTZCLEVBQUUsVUFBa0IsRUFBRSxFQUFFOzRCQUNoRSxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7NEJBQ3JDLE9BQU8sVUFBVSxDQUFDO3dCQUNwQixDQUFDO3dCQUNELGFBQWEsRUFBRSxDQUFDLE1BQWdCLEVBQVUsRUFBRSxDQUFDLENBQUM7d0JBQzlDLGdCQUFnQixFQUFFLENBQUMsTUFBZ0IsRUFBUSxFQUFFOzRCQUMzQyxJQUFJLE1BQU0sQ0FBQyxjQUFjLEVBQUU7Z0NBQ3pCLE1BQU0sQ0FBQyxZQUFZLENBQUMsdUJBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQzs2QkFDdkM7d0JBQ0gsQ0FBQztxQkFDRixDQUFDLENBQUM7b0JBRUgsTUFBTSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztpQkFDakM7WUFDSCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQztRQUVNLGNBQVMsR0FBRyxHQUFHLEVBQUU7WUFDdkIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2IsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQztRQVVBLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBRTVCLE1BQU0sT0FBTyxHQUFxQixFQUFFLEdBQUcsb0JBQVUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNsRSxPQUFPLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUVwRCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDRjtBQXBERCwwQkFvREMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9Cb3NzZXMvRWxvbmdUdXNrL0FjdGlvbnMudHMvR29yZS50cz84ZmI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY3Rpb24gZnJvbSBcInRzL0FjdGlvblwiO1xyXG5pbXBvcnQgeyBBbmltYXRpb24sIEFuaW1hdGlvbldyYXBwZXIgfSBmcm9tIFwidHMvQW5pbWF0aW9uXCI7XHJcbmltcG9ydCBBbmltYXRpb25zIGZyb20gXCJ0cy9BbmltYXRpb25zXCI7XHJcbmltcG9ydCB7IERlYnVmZk5hbWUgfSBmcm9tIFwidHMvRGVidWZmTmFtZVwiO1xyXG5pbXBvcnQgRG90RGVidWZmIGZyb20gXCJ0cy9Eb3REZWJ1ZmZcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCJ0cy9GcmllbmRseVwiO1xyXG5pbXBvcnQgUmFuZG9tIGZyb20gXCJ0cy9SYW5kb21cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdvcmUgZXh0ZW5kcyBBY3Rpb24ge1xyXG4gIHByaXZhdGUgX2Nhc3QgPSAoKSA9PiB7XHJcbiAgICB0aGlzLnRhcmdldHMuZm9yRWFjaCgodGFyZ2V0OiBGcmllbmRseSkgPT4ge1xyXG4gICAgICBjb25zdCBoYXJtQW1vdW50ID0gUmFuZG9tLmZyb21JbnRlZ2VySW50ZXJ2YWxJbmNsdXNpdmUoMjQsIDQyKTtcclxuICAgICAgdGFyZ2V0Lmhhcm0oaGFybUFtb3VudCk7XHJcblxyXG4gICAgICBpZiAoIXRhcmdldC5pc0RlYWQoKSkge1xyXG4gICAgICAgIGNvbnN0IGJsZWVkRGVidWZmID0gbmV3IERvdERlYnVmZih7XHJcbiAgICAgICAgICBuYW1lOiBEZWJ1ZmZOYW1lLkJsZWVkLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246XHJcbiAgICAgICAgICAgIFwiQmxlZWRpbmcgZm9yIDQgZGFtYWdlIGV2ZXJ5IHNlY29uZCB1bnRpbCBoZWFsZWQgdG8gZnVsbC5cIixcclxuICAgICAgICAgIGludGVydmFsOiAxMDAwLFxyXG4gICAgICAgICAgZHVyYXRpb246IC0xLFxyXG4gICAgICAgICAgdGFyZ2V0OiB0YXJnZXQsXHJcbiAgICAgICAgICBoYXJtRWZmZWN0OiAoZm9vZFBvaXNvbmluZ1RhcmdldDogRnJpZW5kbHksIGhhcm1BbW91bnQ6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICBmb29kUG9pc29uaW5nVGFyZ2V0Lmhhcm0oaGFybUFtb3VudCk7XHJcbiAgICAgICAgICAgIHJldHVybiBoYXJtQW1vdW50O1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGdldEhhcm1BbW91bnQ6ICh0YXJnZXQ6IEZyaWVuZGx5KTogbnVtYmVyID0+IDQsXHJcbiAgICAgICAgICBwb3N0SGVhbENhbGxiYWNrOiAodGFyZ2V0OiBGcmllbmRseSk6IHZvaWQgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGFyZ2V0LmlzQXRGdWxsSGVhbHRoKSB7XHJcbiAgICAgICAgICAgICAgdGFyZ2V0LnJlbW92ZURlYnVmZihEZWJ1ZmZOYW1lLkJsZWVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGFyZ2V0LmFwcGx5RGVidWZmKGJsZWVkRGVidWZmKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfY29tcGxldGUgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9jYXN0KCk7XHJcbiAgICB0aGlzLl9vblN1Y2Nlc3MoKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vblN1Y2Nlc3M6ICgpID0+IHZvaWQ7XHJcblxyXG4gIGFuaW1hdGlvbjogQW5pbWF0aW9uW107XHJcbiAgdGFyZ2V0czogRnJpZW5kbHlbXTtcclxuXHJcbiAgY29uc3RydWN0b3IodGFyZ2V0czogRnJpZW5kbHlbXSwgb25TdWNjZXNzOiAoKSA9PiB2b2lkKSB7XHJcbiAgICBzdXBlcihcIkdvcmVcIik7XHJcblxyXG4gICAgdGhpcy50YXJnZXRzID0gdGFyZ2V0cztcclxuICAgIHRoaXMuX29uU3VjY2VzcyA9IG9uU3VjY2VzcztcclxuXHJcbiAgICBjb25zdCB3cmFwcGVyOiBBbmltYXRpb25XcmFwcGVyID0geyAuLi5BbmltYXRpb25zLmZ1bGxXaWR0aDIwMDAgfTtcclxuICAgIHdyYXBwZXIuYW5pbWF0aW9uLm9wdGlvbnMuY29tcGxldGUgPSB0aGlzLl9jb21wbGV0ZTtcclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbiA9IFt3cmFwcGVyLmFuaW1hdGlvbl07XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7647\n')},6746:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst Debuff_1 = __importDefault(__webpack_require__(5584));\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst Player_1 = __importDefault(__webpack_require__(698));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass Stomp extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Stomp");\r\n        this._cast = () => {\r\n            this.targets.forEach((target) => {\r\n                const harmAmount = Random_1.default.fromIntegerIntervalInclusive(16, 28);\r\n                target.harm(harmAmount);\r\n                if (!(target instanceof Player_1.default)) {\r\n                    return;\r\n                }\r\n                const player = target;\r\n                if (!player.isDead() && player.currentCast.value()) {\r\n                    const silenceDebuff = new Debuff_1.default({\r\n                        name: DebuffName_1.DebuffName.Silence,\r\n                        description: "Silenced for 3 seconds.",\r\n                        type: DebuffType_1.DebuffType.Silence,\r\n                        duration: 3000,\r\n                        target: player,\r\n                    });\r\n                    player.cancelCast();\r\n                    player.applyDebuff(silenceDebuff);\r\n                }\r\n            });\r\n        };\r\n        this._complete = () => {\r\n            this._cast();\r\n            this._onSuccess();\r\n        };\r\n        this.targets = targets;\r\n        this._onSuccess = onSuccess;\r\n        const wrapper = { ...Animations_1.default.fullWidth2000 };\r\n        wrapper.animation.options.complete = this._complete;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = Stomp;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc0Ni5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUErQjtBQUUvQixnRUFBdUM7QUFDdkMsNERBQStCO0FBQy9CLCtDQUEyQztBQUMzQywrQ0FBMkM7QUFFM0MsMkRBQStCO0FBQy9CLDREQUErQjtBQUUvQixNQUFxQixLQUFNLFNBQVEsZ0JBQU07SUFvQ3ZDLFlBQVksT0FBbUIsRUFBRSxTQUFxQjtRQUNwRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFwQ1QsVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQWdCLEVBQUUsRUFBRTtnQkFDeEMsTUFBTSxVQUFVLEdBQUcsZ0JBQU0sQ0FBQyw0QkFBNEIsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQy9ELE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBRXhCLElBQUksQ0FBQyxDQUFDLE1BQU0sWUFBWSxnQkFBTSxDQUFDLEVBQUU7b0JBQy9CLE9BQU87aUJBQ1I7Z0JBRUQsTUFBTSxNQUFNLEdBQUcsTUFBZ0IsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxFQUFFO29CQUNsRCxNQUFNLGFBQWEsR0FBRyxJQUFJLGdCQUFNLENBQUM7d0JBQy9CLElBQUksRUFBRSx1QkFBVSxDQUFDLE9BQU87d0JBQ3hCLFdBQVcsRUFBRSx5QkFBeUI7d0JBQ3RDLElBQUksRUFBRSx1QkFBVSxDQUFDLE9BQU87d0JBQ3hCLFFBQVEsRUFBRSxJQUFJO3dCQUNkLE1BQU0sRUFBRSxNQUFNO3FCQUNmLENBQUMsQ0FBQztvQkFFSCxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUM7b0JBQ3BCLE1BQU0sQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7aUJBQ25DO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFTSxjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUM7UUFVQSxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUU1QixNQUFNLE9BQU8sR0FBcUIsRUFBRSxHQUFHLG9CQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDbEUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFcEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUEvQ0QsMkJBK0NDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQm9zc2VzL0Vsb25nVHVzay9BY3Rpb25zLnRzL1N0b21wLnRzPzQ0YzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGlvbiBmcm9tIFwidHMvQWN0aW9uXCI7XHJcbmltcG9ydCB7IEFuaW1hdGlvbiwgQW5pbWF0aW9uV3JhcHBlciB9IGZyb20gXCJ0cy9BbmltYXRpb25cIjtcclxuaW1wb3J0IEFuaW1hdGlvbnMgZnJvbSBcInRzL0FuaW1hdGlvbnNcIjtcclxuaW1wb3J0IERlYnVmZiBmcm9tIFwidHMvRGVidWZmXCI7XHJcbmltcG9ydCB7IERlYnVmZk5hbWUgfSBmcm9tIFwidHMvRGVidWZmTmFtZVwiO1xyXG5pbXBvcnQgeyBEZWJ1ZmZUeXBlIH0gZnJvbSBcInRzL0RlYnVmZlR5cGVcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCJ0cy9GcmllbmRseVwiO1xyXG5pbXBvcnQgUGxheWVyIGZyb20gXCJ0cy9QbGF5ZXJcIjtcclxuaW1wb3J0IFJhbmRvbSBmcm9tIFwidHMvUmFuZG9tXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9tcCBleHRlbmRzIEFjdGlvbiB7XHJcbiAgcHJpdmF0ZSBfY2FzdCA9ICgpID0+IHtcclxuICAgIHRoaXMudGFyZ2V0cy5mb3JFYWNoKCh0YXJnZXQ6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICAgIGNvbnN0IGhhcm1BbW91bnQgPSBSYW5kb20uZnJvbUludGVnZXJJbnRlcnZhbEluY2x1c2l2ZSgxNiwgMjgpO1xyXG4gICAgICB0YXJnZXQuaGFybShoYXJtQW1vdW50KTtcclxuXHJcbiAgICAgIGlmICghKHRhcmdldCBpbnN0YW5jZW9mIFBsYXllcikpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHBsYXllciA9IHRhcmdldCBhcyBQbGF5ZXI7XHJcbiAgICAgIGlmICghcGxheWVyLmlzRGVhZCgpICYmIHBsYXllci5jdXJyZW50Q2FzdC52YWx1ZSgpKSB7XHJcbiAgICAgICAgY29uc3Qgc2lsZW5jZURlYnVmZiA9IG5ldyBEZWJ1ZmYoe1xyXG4gICAgICAgICAgbmFtZTogRGVidWZmTmFtZS5TaWxlbmNlLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiU2lsZW5jZWQgZm9yIDMgc2Vjb25kcy5cIixcclxuICAgICAgICAgIHR5cGU6IERlYnVmZlR5cGUuU2lsZW5jZSxcclxuICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLFxyXG4gICAgICAgICAgdGFyZ2V0OiBwbGF5ZXIsXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHBsYXllci5jYW5jZWxDYXN0KCk7XHJcbiAgICAgICAgcGxheWVyLmFwcGx5RGVidWZmKHNpbGVuY2VEZWJ1ZmYpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9jb21wbGV0ZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX2Nhc3QoKTtcclxuICAgIHRoaXMuX29uU3VjY2VzcygpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uU3VjY2VzczogKCkgPT4gdm9pZDtcclxuXHJcbiAgYW5pbWF0aW9uOiBBbmltYXRpb25bXTtcclxuICB0YXJnZXRzOiBGcmllbmRseVtdO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0YXJnZXRzOiBGcmllbmRseVtdLCBvblN1Y2Nlc3M6ICgpID0+IHZvaWQpIHtcclxuICAgIHN1cGVyKFwiU3RvbXBcIik7XHJcblxyXG4gICAgdGhpcy50YXJnZXRzID0gdGFyZ2V0cztcclxuICAgIHRoaXMuX29uU3VjY2VzcyA9IG9uU3VjY2VzcztcclxuXHJcbiAgICBjb25zdCB3cmFwcGVyOiBBbmltYXRpb25XcmFwcGVyID0geyAuLi5BbmltYXRpb25zLmZ1bGxXaWR0aDIwMDAgfTtcclxuICAgIHdyYXBwZXIuYW5pbWF0aW9uLm9wdGlvbnMuY29tcGxldGUgPSB0aGlzLl9jb21wbGV0ZTtcclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbiA9IFt3cmFwcGVyLmFuaW1hdGlvbl07XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6746\n')},15:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Boss_1 = __importDefault(__webpack_require__(3717));\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nconst Loops_1 = __importDefault(__webpack_require__(7657));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nconst Trigger_1 = __importDefault(__webpack_require__(6983));\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst ThrowFood_1 = __importDefault(__webpack_require__(4263));\r\nconst Enrage_1 = __importDefault(__webpack_require__(9473));\r\n// The encounter begins and Gordo Ramzee is not pleased he is being interrupted.\r\n// He targets the tank and does 20-25 damage every 2-4 seconds.\r\n// Every 10 seconds, he throws food, hitting 2 members of the party, damaging each between 12-18.\r\n// Affected party members eat the food. I mean, who wouldn\'t?\r\n// There\'s a 50% chance the food was bland and dry, dealing 8-16 damage every 1 second for 5 seconds.\r\n// At 20% health, he enrages and all damage done to the tank is doubled.\r\nclass GordoRamzee extends Boss_1.default {\r\n    constructor(player, tank, raid, onDeathCallback) {\r\n        super(58418, player, tank, raid, onDeathCallback);\r\n        this._attackTank = () => {\r\n            this._targetTank();\r\n            let attackTankAmount = Random_1.default.fromIntegerIntervalInclusive(20, 25);\r\n            if (this._isEnraged) {\r\n                attackTankAmount *= 2;\r\n            }\r\n            this._tank.harm(attackTankAmount);\r\n        };\r\n        this._enrage = () => {\r\n            const enrage = new Enrage_1.default([], // No specific target\r\n            () => {\r\n                this._isEnraged = true;\r\n                this.finishCast(enrage);\r\n                this._targetTank();\r\n            });\r\n            this.cast(enrage);\r\n        };\r\n        this._getAttackTankLoop = () => {\r\n            return this.getLoop("Attack Tank");\r\n        };\r\n        this._targetTank = () => {\r\n            this.targets([this._tank]);\r\n        };\r\n        this._throwFood = () => {\r\n            this._getAttackTankLoop().pause();\r\n            const throwFoodTargets = this._raid.getRandomMembers(2, true /* allowPlayer */);\r\n            this.targets(throwFoodTargets);\r\n            const throwFood = new ThrowFood_1.default(throwFoodTargets, () => {\r\n                this.finishCast(throwFood);\r\n                this._targetTank();\r\n                this._getAttackTankLoop().resume();\r\n            });\r\n            this.cast(throwFood);\r\n        };\r\n        this.initialEvents = [];\r\n        this.initialTargets = [];\r\n        this.onDeathOfFriendly = (friendly) => {\r\n            if (friendly === this._tank) {\r\n                // The tank just died.\r\n                this.targets.remove(this._tank);\r\n                const remainingAlive = this._raid.getLivingMembers();\r\n                if (remainingAlive.length === 0) {\r\n                    this.stop();\r\n                    return;\r\n                }\r\n                if (remainingAlive.length === 1 && remainingAlive[0] === this._player) {\r\n                    // The player is the last one alive.\r\n                    this._tank = this._player;\r\n                }\r\n                else {\r\n                    // Choose some random DPS to become the new tank.\r\n                    this._tank = this._raid.getOneRandomNpc();\r\n                }\r\n                this.targets.push(this._tank);\r\n            }\r\n        };\r\n        this.name = BossName_1.BossName.GordoRamzee;\r\n        this._isEnraged = false;\r\n        this.loops = new Loops_1.default(new Loop_1.default("Attack Tank", this._attackTank, function () {\r\n            return 1000 * Random_1.default.fromIntegerIntervalInclusive(2, 4);\r\n        }), new Loop_1.default("Throw Food", this._throwFood, 10000));\r\n        this.initialTargets = [this._tank];\r\n        this.triggers = [\r\n            new Trigger_1.default((healthPercentage) => {\r\n                if (healthPercentage <= 20) {\r\n                    this._enrage();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }),\r\n        ];\r\n    }\r\n}\r\nexports["default"] = GordoRamzee;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n')},4263:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nconst DotDebuff_1 = __importDefault(__webpack_require__(7966));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass ThrowFood extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Throw Food");\r\n        this._cast = () => {\r\n            this.targets.forEach((target) => {\r\n                const harmAmount = Random_1.default.fromIntegerIntervalInclusive(12, 18);\r\n                target.harm(harmAmount);\r\n                if (!target.isDead() && Math.random() < 0.5) {\r\n                    const foodPoisoningDebuff = new DotDebuff_1.default({\r\n                        name: DebuffName_1.DebuffName.FoodPoisoning,\r\n                        description: "The food was bland and dry, dealing 8-16 damage every 1 second for 5 seconds.",\r\n                        interval: 1000,\r\n                        duration: 5000,\r\n                        target: target,\r\n                        harmEffect: (target, harmAmount) => {\r\n                            target.harm(harmAmount);\r\n                            return harmAmount;\r\n                        },\r\n                        getHarmAmount: (target) => {\r\n                            return Random_1.default.fromIntegerIntervalInclusive(8, 16);\r\n                        },\r\n                    });\r\n                    target.applyDebuff(foodPoisoningDebuff);\r\n                }\r\n            });\r\n        };\r\n        this._complete = () => {\r\n            this._cast();\r\n            this._onSuccess();\r\n        };\r\n        this.targets = targets;\r\n        this._onSuccess = onSuccess;\r\n        const wrapper = { ...Animations_1.default.fullWidth2000 };\r\n        wrapper.animation.options.complete = this._complete;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = ThrowFood;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDI2My5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUErQjtBQUUvQixnRUFBdUM7QUFDdkMsK0NBQTJDO0FBQzNDLCtEQUFxQztBQUVyQyw0REFBK0I7QUFFL0IsTUFBcUIsU0FBVSxTQUFRLGdCQUFNO0lBc0MzQyxZQUFZLE9BQW1CLEVBQUUsU0FBcUI7UUFDcEQsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBdENkLFVBQUssR0FBRyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7Z0JBQ3hDLE1BQU0sVUFBVSxHQUFHLGdCQUFNLENBQUMsNEJBQTRCLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMvRCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUV4QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEVBQUU7b0JBQzNDLE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxtQkFBUyxDQUFDO3dCQUN4QyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxhQUFhO3dCQUM5QixXQUFXLEVBQ1QsK0VBQStFO3dCQUNqRixRQUFRLEVBQUUsSUFBSTt3QkFDZCxRQUFRLEVBQUUsSUFBSTt3QkFDZCxNQUFNLEVBQUUsTUFBTTt3QkFDZCxVQUFVLEVBQUUsQ0FBQyxNQUFnQixFQUFFLFVBQWtCLEVBQUUsRUFBRTs0QkFDbkQsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzs0QkFDeEIsT0FBTyxVQUFVLENBQUM7d0JBQ3BCLENBQUM7d0JBQ0QsYUFBYSxFQUFFLENBQUMsTUFBZ0IsRUFBVSxFQUFFOzRCQUMxQyxPQUFPLGdCQUFNLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO3dCQUNwRCxDQUFDO3FCQUNGLENBQUMsQ0FBQztvQkFFSCxNQUFNLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLENBQUM7aUJBQ3pDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFTSxjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUM7UUFVQSxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUU1QixNQUFNLE9BQU8sR0FBcUIsRUFBRSxHQUFHLG9CQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDbEUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFcEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUFqREQsK0JBaURDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQm9zc2VzL0dvcmRvUmFtemVlL0FjdGlvbnMvVGhyb3dGb29kLnRzPzg1NjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGlvbiBmcm9tIFwidHMvQWN0aW9uXCI7XHJcbmltcG9ydCB7IEFuaW1hdGlvbiwgQW5pbWF0aW9uV3JhcHBlciB9IGZyb20gXCJ0cy9BbmltYXRpb25cIjtcclxuaW1wb3J0IEFuaW1hdGlvbnMgZnJvbSBcInRzL0FuaW1hdGlvbnNcIjtcclxuaW1wb3J0IHsgRGVidWZmTmFtZSB9IGZyb20gXCJ0cy9EZWJ1ZmZOYW1lXCI7XHJcbmltcG9ydCBEb3REZWJ1ZmYgZnJvbSBcInRzL0RvdERlYnVmZlwiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcInRzL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBSYW5kb20gZnJvbSBcInRzL1JhbmRvbVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGhyb3dGb29kIGV4dGVuZHMgQWN0aW9uIHtcclxuICBwcml2YXRlIF9jYXN0ID0gKCkgPT4ge1xyXG4gICAgdGhpcy50YXJnZXRzLmZvckVhY2goKHRhcmdldDogRnJpZW5kbHkpID0+IHtcclxuICAgICAgY29uc3QgaGFybUFtb3VudCA9IFJhbmRvbS5mcm9tSW50ZWdlckludGVydmFsSW5jbHVzaXZlKDEyLCAxOCk7XHJcbiAgICAgIHRhcmdldC5oYXJtKGhhcm1BbW91bnQpO1xyXG5cclxuICAgICAgaWYgKCF0YXJnZXQuaXNEZWFkKCkgJiYgTWF0aC5yYW5kb20oKSA8IDAuNSkge1xyXG4gICAgICAgIGNvbnN0IGZvb2RQb2lzb25pbmdEZWJ1ZmYgPSBuZXcgRG90RGVidWZmKHtcclxuICAgICAgICAgIG5hbWU6IERlYnVmZk5hbWUuRm9vZFBvaXNvbmluZyxcclxuICAgICAgICAgIGRlc2NyaXB0aW9uOlxyXG4gICAgICAgICAgICBcIlRoZSBmb29kIHdhcyBibGFuZCBhbmQgZHJ5LCBkZWFsaW5nIDgtMTYgZGFtYWdlIGV2ZXJ5IDEgc2Vjb25kIGZvciA1IHNlY29uZHMuXCIsXHJcbiAgICAgICAgICBpbnRlcnZhbDogMTAwMCxcclxuICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLFxyXG4gICAgICAgICAgdGFyZ2V0OiB0YXJnZXQsXHJcbiAgICAgICAgICBoYXJtRWZmZWN0OiAodGFyZ2V0OiBGcmllbmRseSwgaGFybUFtb3VudDogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgIHRhcmdldC5oYXJtKGhhcm1BbW91bnQpO1xyXG4gICAgICAgICAgICByZXR1cm4gaGFybUFtb3VudDtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBnZXRIYXJtQW1vdW50OiAodGFyZ2V0OiBGcmllbmRseSk6IG51bWJlciA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBSYW5kb20uZnJvbUludGVnZXJJbnRlcnZhbEluY2x1c2l2ZSg4LCAxNik7XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0YXJnZXQuYXBwbHlEZWJ1ZmYoZm9vZFBvaXNvbmluZ0RlYnVmZik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX2NvbXBsZXRlID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fY2FzdCgpO1xyXG4gICAgdGhpcy5fb25TdWNjZXNzKCk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25TdWNjZXNzOiAoKSA9PiB2b2lkO1xyXG5cclxuICBhbmltYXRpb246IEFuaW1hdGlvbltdO1xyXG4gIHRhcmdldHM6IEZyaWVuZGx5W107XHJcblxyXG4gIGNvbnN0cnVjdG9yKHRhcmdldHM6IEZyaWVuZGx5W10sIG9uU3VjY2VzczogKCkgPT4gdm9pZCkge1xyXG4gICAgc3VwZXIoXCJUaHJvdyBGb29kXCIpO1xyXG5cclxuICAgIHRoaXMudGFyZ2V0cyA9IHRhcmdldHM7XHJcbiAgICB0aGlzLl9vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XHJcblxyXG4gICAgY29uc3Qgd3JhcHBlcjogQW5pbWF0aW9uV3JhcHBlciA9IHsgLi4uQW5pbWF0aW9ucy5mdWxsV2lkdGgyMDAwIH07XHJcbiAgICB3cmFwcGVyLmFuaW1hdGlvbi5vcHRpb25zLmNvbXBsZXRlID0gdGhpcy5fY29tcGxldGU7XHJcblxyXG4gICAgdGhpcy5hbmltYXRpb24gPSBbd3JhcHBlci5hbmltYXRpb25dO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4263\n')},9473:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Action_1 = __importDefault(__webpack_require__(5942));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nclass Enrage extends Action_1.default {\r\n    constructor(targets, onSuccess) {\r\n        super("Enrage");\r\n        const wrapper = { ...Animations_1.default.fullWidth5000 };\r\n        wrapper.animation.options.complete = onSuccess;\r\n        this.animation = [wrapper.animation];\r\n    }\r\n}\r\nexports["default"] = Enrage;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQ3My5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUErQjtBQUUvQixnRUFBdUM7QUFHdkMsTUFBcUIsTUFBTyxTQUFRLGdCQUFNO0lBR3hDLFlBQVksT0FBbUIsRUFBRSxTQUFxQjtRQUNwRCxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFaEIsTUFBTSxPQUFPLEdBQXFCLEVBQUUsR0FBRyxvQkFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ2xFLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7UUFFL0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUFYRCw0QkFXQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0Jvc3Nlcy9TaGFyZWQvQWN0aW9ucy9FbnJhZ2UudHM/ODFkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aW9uIGZyb20gXCJ0cy9BY3Rpb25cIjtcclxuaW1wb3J0IHsgQW5pbWF0aW9uLCBBbmltYXRpb25XcmFwcGVyIH0gZnJvbSBcInRzL0FuaW1hdGlvblwiO1xyXG5pbXBvcnQgQW5pbWF0aW9ucyBmcm9tIFwidHMvQW5pbWF0aW9uc1wiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcInRzL0ZyaWVuZGx5XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbnJhZ2UgZXh0ZW5kcyBBY3Rpb24ge1xyXG4gIGFuaW1hdGlvbjogQW5pbWF0aW9uW107XHJcblxyXG4gIGNvbnN0cnVjdG9yKHRhcmdldHM6IEZyaWVuZGx5W10sIG9uU3VjY2VzczogKCkgPT4gdm9pZCkge1xyXG4gICAgc3VwZXIoXCJFbnJhZ2VcIik7XHJcblxyXG4gICAgY29uc3Qgd3JhcHBlcjogQW5pbWF0aW9uV3JhcHBlciA9IHsgLi4uQW5pbWF0aW9ucy5mdWxsV2lkdGg1MDAwIH07XHJcbiAgICB3cmFwcGVyLmFuaW1hdGlvbi5vcHRpb25zLmNvbXBsZXRlID0gb25TdWNjZXNzO1xyXG5cclxuICAgIHRoaXMuYW5pbWF0aW9uID0gW3dyYXBwZXIuYW5pbWF0aW9uXTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9473\n')},9347:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Icons_1 = __webpack_require__(3607);\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nclass Buff {\r\n    constructor(params) {\r\n        this._applied = false;\r\n        this._tick = () => {\r\n            if (!this._applied) {\r\n                this._effect(this._target);\r\n                this._applied = true;\r\n            }\r\n            else {\r\n                this._loop.stop();\r\n                this._target.removeBuff(this.name);\r\n            }\r\n        };\r\n        this.pause = () => {\r\n            this._loop.pause();\r\n        };\r\n        this.resume = () => {\r\n            this._loop.resume();\r\n        };\r\n        this.start = (target) => {\r\n            this._target = target;\r\n        };\r\n        this.stop = () => {\r\n            this._loop.stop();\r\n        };\r\n        const name = params.name;\r\n        this.name = name;\r\n        this.description = params.description;\r\n        this._duration = params.duration;\r\n        this._target = params.target;\r\n        this._effect = params.effect;\r\n        this.icon = (0, Icons_1.getBuffIcon)(name);\r\n        this._loop = new Loop_1.default(name, this._tick, this._duration);\r\n    }\r\n    get tooltip() {\r\n        return `${this.name} -> ${this.description}`;\r\n    }\r\n}\r\nexports["default"] = Buff;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM0Ny5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUdBLDBDQUFzQztBQUN0Qyx5REFBMEI7QUFFMUIsTUFBcUIsSUFBSTtJQW9DdkIsWUFBWSxNQUFrQjtRQW5DdEIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQU14QixVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDdEI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3BDO1FBQ0gsQ0FBQyxDQUFDO1FBS0YsVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNYLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDckIsQ0FBQyxDQUFDO1FBRUYsV0FBTSxHQUFHLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDO1FBRUYsVUFBSyxHQUFHLENBQUMsTUFBZ0IsRUFBRSxFQUFFO1lBQzNCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3hCLENBQUMsQ0FBQztRQUVGLFNBQUksR0FBRyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQztRQUdBLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFFekIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNqQyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsdUJBQVcsRUFBQyxJQUFJLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksY0FBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQy9DLENBQUM7Q0FDRjtBQXBERCwwQkFvREMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9CdWZmLnRzPzAxNDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZk5hbWUgfSBmcm9tIFwiLi9CdWZmTmFtZVwiO1xyXG5pbXBvcnQgeyBCdWZmUGFyYW1zIH0gZnJvbSBcIi4vQnVmZlBhcmFtc1wiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcIi4vRnJpZW5kbHlcIjtcclxuaW1wb3J0IHsgZ2V0QnVmZkljb24gfSBmcm9tIFwiLi9JY29uc1wiO1xyXG5pbXBvcnQgTG9vcCBmcm9tIFwiLi9Mb29wXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWZmIHtcclxuICBwcml2YXRlIF9hcHBsaWVkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIHByb3RlY3RlZCBfZHVyYXRpb246IG51bWJlcjtcclxuICBwcm90ZWN0ZWQgX2VmZmVjdDogKHRhcmdldDogRnJpZW5kbHkpID0+IHZvaWQ7XHJcbiAgcHJvdGVjdGVkIF9sb29wOiBMb29wO1xyXG4gIHByb3RlY3RlZCBfdGFyZ2V0OiBGcmllbmRseTtcclxuICBwcm90ZWN0ZWQgX3RpY2sgPSAoKSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuX2FwcGxpZWQpIHtcclxuICAgICAgdGhpcy5fZWZmZWN0KHRoaXMuX3RhcmdldCk7XHJcbiAgICAgIHRoaXMuX2FwcGxpZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fbG9vcC5zdG9wKCk7XHJcbiAgICAgIHRoaXMuX3RhcmdldC5yZW1vdmVCdWZmKHRoaXMubmFtZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZztcclxuICBpY29uOiBzdHJpbmc7XHJcbiAgbmFtZTogQnVmZk5hbWU7XHJcbiAgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9sb29wLnBhdXNlKCk7XHJcbiAgfTtcclxuXHJcbiAgcmVzdW1lID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fbG9vcC5yZXN1bWUoKTtcclxuICB9O1xyXG5cclxuICBzdGFydCA9ICh0YXJnZXQ6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICB0aGlzLl90YXJnZXQgPSB0YXJnZXQ7XHJcbiAgfTtcclxuXHJcbiAgc3RvcCA9ICgpID0+IHtcclxuICAgIHRoaXMuX2xvb3Auc3RvcCgpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogQnVmZlBhcmFtcykge1xyXG4gICAgY29uc3QgbmFtZSA9IHBhcmFtcy5uYW1lO1xyXG5cclxuICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcGFyYW1zLmRlc2NyaXB0aW9uO1xyXG4gICAgdGhpcy5fZHVyYXRpb24gPSBwYXJhbXMuZHVyYXRpb247XHJcbiAgICB0aGlzLl90YXJnZXQgPSBwYXJhbXMudGFyZ2V0O1xyXG4gICAgdGhpcy5fZWZmZWN0ID0gcGFyYW1zLmVmZmVjdDtcclxuICAgIHRoaXMuaWNvbiA9IGdldEJ1ZmZJY29uKG5hbWUpO1xyXG5cclxuICAgIHRoaXMuX2xvb3AgPSBuZXcgTG9vcChuYW1lLCB0aGlzLl90aWNrLCB0aGlzLl9kdXJhdGlvbik7XHJcbiAgfVxyXG5cclxuICBnZXQgdG9vbHRpcCgpIHtcclxuICAgIHJldHVybiBgJHt0aGlzLm5hbWV9IC0+ICR7dGhpcy5kZXNjcmlwdGlvbn1gO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9347\n')},8176:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.BuffName = void 0;\r\nvar BuffName;\r\n(function (BuffName) {\r\n    BuffName["Renew"] = "Renew";\r\n})(BuffName = exports.BuffName || (exports.BuffName = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODE3Ni5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFFBRVg7QUFGRCxXQUFZLFFBQVE7SUFDbEIsMkJBQWU7QUFDakIsQ0FBQyxFQUZXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBRW5CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvQnVmZk5hbWUudHM/MDQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBCdWZmTmFtZSB7XHJcbiAgUmVuZXcgPSBcIlJlbmV3XCIsXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8176\n')},5584:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst Icons_1 = __webpack_require__(3607);\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nclass Debuff {\r\n    constructor(params) {\r\n        this.tick = () => {\r\n            this.loop.stop();\r\n            this.target.removeDebuff(this.name);\r\n        };\r\n        this.pause = () => {\r\n            this.loop.pause();\r\n        };\r\n        this.resume = () => {\r\n            this.loop.resume();\r\n        };\r\n        this.restart = () => {\r\n            this.loop.restart();\r\n        };\r\n        this.start = (target) => {\r\n            this.target = target;\r\n            if (this.harmEffect) {\r\n                this.harmEffect(this.target, 0);\r\n            }\r\n            this.loop.start();\r\n        };\r\n        this.stop = () => {\r\n            this.loop.stop();\r\n        };\r\n        this.postHealCallback = (target) => {\r\n            if (this._postHealCallback) {\r\n                this._postHealCallback(target);\r\n            }\r\n        };\r\n        const name = params.name;\r\n        this.name = name;\r\n        this.description = params.description;\r\n        this.type = params.type || DebuffType_1.DebuffType.None;\r\n        this.harmEffect = params.harmEffect;\r\n        this.getHarmAmount = params.getHarmAmount || ((target) => 0);\r\n        this.icon = (0, Icons_1.getDebuffIcon)(name);\r\n        this._postHealCallback = params.postHealCallback;\r\n        this.duration = params.duration || 5000;\r\n        this.target = params.target;\r\n        this.loop = new Loop_1.default(name, this.tick, this.duration);\r\n    }\r\n    get tooltip() {\r\n        return `${this.name} -> ${this.description}`;\r\n    }\r\n}\r\nexports["default"] = Debuff;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTU4NC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUVBLCtDQUEwQztBQUUxQywwQ0FBd0M7QUFDeEMseURBQTBCO0FBRTFCLE1BQXFCLE1BQU07SUFnRHpCLFlBQVksTUFBb0I7UUF6Q3RCLFNBQUksR0FBRyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDO1FBTUYsVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDO1FBRUYsV0FBTSxHQUFHLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDckIsQ0FBQyxDQUFDO1FBRUYsWUFBTyxHQUFHLEdBQUcsRUFBRTtZQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDO1FBRUYsVUFBSyxHQUFHLENBQUMsTUFBZ0IsRUFBRSxFQUFFO1lBQzNCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQ3JCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ2pDO1lBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUM7UUFFRixTQUFJLEdBQUcsR0FBRyxFQUFFO1lBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuQixDQUFDLENBQUM7UUFFRixxQkFBZ0IsR0FBRyxDQUFDLE1BQWdCLEVBQVEsRUFBRTtZQUM1QyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ2hDO1FBQ0gsQ0FBQyxDQUFDO1FBS0EsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztRQUV6QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxJQUFJLHVCQUFVLENBQUMsSUFBSSxDQUFDO1FBQzNDLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNwQyxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxhQUFhLElBQUksQ0FBQyxDQUFDLE1BQWdCLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxJQUFJLEdBQUcseUJBQWEsRUFBQyxJQUFJLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDO1FBRWpELElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFFeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxjQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDL0MsQ0FBQztDQUNGO0FBcEVELDRCQW9FQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0RlYnVmZi50cz83OTIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlYnVmZk5hbWUgfSBmcm9tIFwiLi9EZWJ1ZmZOYW1lXCI7XHJcbmltcG9ydCB7IERlYnVmZlBhcmFtcyB9IGZyb20gXCIuL0RlYnVmZlBhcmFtc1wiO1xyXG5pbXBvcnQgeyBEZWJ1ZmZUeXBlIH0gZnJvbSBcIi4vRGVidWZmVHlwZVwiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcIi4vRnJpZW5kbHlcIjtcclxuaW1wb3J0IHsgZ2V0RGVidWZmSWNvbiB9IGZyb20gXCIuL0ljb25zXCI7XHJcbmltcG9ydCBMb29wIGZyb20gXCIuL0xvb3BcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlYnVmZiB7XHJcbiAgcHJpdmF0ZSBfcG9zdEhlYWxDYWxsYmFjaz86ICh0YXJnZXQ6IEZyaWVuZGx5KSA9PiB2b2lkO1xyXG5cclxuICBwcm90ZWN0ZWQgZHVyYXRpb246IG51bWJlcjtcclxuICBwcm90ZWN0ZWQgbG9vcDogTG9vcDtcclxuICBwcm90ZWN0ZWQgZ2V0SGFybUFtb3VudDogKHRhcmdldDogRnJpZW5kbHkpID0+IG51bWJlcjtcclxuICBwcm90ZWN0ZWQgdGFyZ2V0OiBGcmllbmRseTtcclxuICBwcm90ZWN0ZWQgdGljayA9ICgpID0+IHtcclxuICAgIHRoaXMubG9vcC5zdG9wKCk7XHJcbiAgICB0aGlzLnRhcmdldC5yZW1vdmVEZWJ1ZmYodGhpcy5uYW1lKTtcclxuICB9O1xyXG5cclxuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG4gIGhhcm1FZmZlY3Q/OiAodGFyZ2V0OiBGcmllbmRseSwgaGFybUFtb3VudDogbnVtYmVyKSA9PiBudW1iZXI7XHJcbiAgaWNvbjogc3RyaW5nO1xyXG4gIG5hbWU6IERlYnVmZk5hbWU7XHJcbiAgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICB0aGlzLmxvb3AucGF1c2UoKTtcclxuICB9O1xyXG5cclxuICByZXN1bWUgPSAoKSA9PiB7XHJcbiAgICB0aGlzLmxvb3AucmVzdW1lKCk7XHJcbiAgfTtcclxuXHJcbiAgcmVzdGFydCA9ICgpID0+IHtcclxuICAgIHRoaXMubG9vcC5yZXN0YXJ0KCk7XHJcbiAgfTtcclxuXHJcbiAgc3RhcnQgPSAodGFyZ2V0OiBGcmllbmRseSkgPT4ge1xyXG4gICAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XHJcbiAgICBpZiAodGhpcy5oYXJtRWZmZWN0KSB7XHJcbiAgICAgIHRoaXMuaGFybUVmZmVjdCh0aGlzLnRhcmdldCwgMCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmxvb3Auc3RhcnQoKTtcclxuICB9O1xyXG5cclxuICBzdG9wID0gKCkgPT4ge1xyXG4gICAgdGhpcy5sb29wLnN0b3AoKTtcclxuICB9O1xyXG5cclxuICBwb3N0SGVhbENhbGxiYWNrID0gKHRhcmdldDogRnJpZW5kbHkpOiB2b2lkID0+IHtcclxuICAgIGlmICh0aGlzLl9wb3N0SGVhbENhbGxiYWNrKSB7XHJcbiAgICAgIHRoaXMuX3Bvc3RIZWFsQ2FsbGJhY2sodGFyZ2V0KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICB0eXBlOiBEZWJ1ZmZUeXBlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IERlYnVmZlBhcmFtcykge1xyXG4gICAgY29uc3QgbmFtZSA9IHBhcmFtcy5uYW1lO1xyXG5cclxuICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcGFyYW1zLmRlc2NyaXB0aW9uO1xyXG4gICAgdGhpcy50eXBlID0gcGFyYW1zLnR5cGUgfHwgRGVidWZmVHlwZS5Ob25lO1xyXG4gICAgdGhpcy5oYXJtRWZmZWN0ID0gcGFyYW1zLmhhcm1FZmZlY3Q7XHJcbiAgICB0aGlzLmdldEhhcm1BbW91bnQgPSBwYXJhbXMuZ2V0SGFybUFtb3VudCB8fCAoKHRhcmdldDogRnJpZW5kbHkpID0+IDApO1xyXG4gICAgdGhpcy5pY29uID0gZ2V0RGVidWZmSWNvbihuYW1lKTtcclxuICAgIHRoaXMuX3Bvc3RIZWFsQ2FsbGJhY2sgPSBwYXJhbXMucG9zdEhlYWxDYWxsYmFjaztcclxuXHJcbiAgICB0aGlzLmR1cmF0aW9uID0gcGFyYW1zLmR1cmF0aW9uIHx8IDUwMDA7XHJcblxyXG4gICAgdGhpcy50YXJnZXQgPSBwYXJhbXMudGFyZ2V0O1xyXG4gICAgdGhpcy5sb29wID0gbmV3IExvb3AobmFtZSwgdGhpcy50aWNrLCB0aGlzLmR1cmF0aW9uKTtcclxuICB9XHJcblxyXG4gIGdldCB0b29sdGlwKCkge1xyXG4gICAgcmV0dXJuIGAke3RoaXMubmFtZX0gLT4gJHt0aGlzLmRlc2NyaXB0aW9ufWA7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5584\n')},8017:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.DebuffName = void 0;\r\nvar DebuffName;\r\n(function (DebuffName) {\r\n    DebuffName["FoodPoisoning"] = "Food Poisoning";\r\n    DebuffName["Uncertainty"] = "Uncertainty";\r\n    DebuffName["Confusion"] = "Confusion";\r\n    DebuffName["Bleed"] = "Bleed";\r\n    DebuffName["Silence"] = "Silence";\r\n})(DebuffName = exports.DebuffName || (exports.DebuffName = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAxNy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFVBTVg7QUFORCxXQUFZLFVBQVU7SUFDcEIsOENBQWdDO0lBQ2hDLHlDQUEyQjtJQUMzQixxQ0FBdUI7SUFDdkIsNkJBQWU7SUFDZixpQ0FBbUI7QUFDckIsQ0FBQyxFQU5XLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBTXJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvRGVidWZmTmFtZS50cz9lOWRkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIERlYnVmZk5hbWUge1xyXG4gIEZvb2RQb2lzb25pbmcgPSBcIkZvb2QgUG9pc29uaW5nXCIsXHJcbiAgVW5jZXJ0YWludHkgPSBcIlVuY2VydGFpbnR5XCIsXHJcbiAgQ29uZnVzaW9uID0gXCJDb25mdXNpb25cIixcclxuICBCbGVlZCA9IFwiQmxlZWRcIixcclxuICBTaWxlbmNlID0gXCJTaWxlbmNlXCIsXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8017\n')},1660:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.DebuffType = void 0;\r\nvar DebuffType;\r\n(function (DebuffType) {\r\n    DebuffType[DebuffType["None"] = 0] = "None";\r\n    DebuffType[DebuffType["DamageOverTime"] = 1] = "DamageOverTime";\r\n    DebuffType[DebuffType["IncreaseDamageTaken"] = 2] = "IncreaseDamageTaken";\r\n    DebuffType[DebuffType["Silence"] = 3] = "Silence";\r\n})(DebuffType = exports.DebuffType || (exports.DebuffType = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2MC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFVBS1g7QUFMRCxXQUFZLFVBQVU7SUFDcEIsMkNBQVE7SUFDUiwrREFBa0I7SUFDbEIseUVBQXVCO0lBQ3ZCLGlEQUFXO0FBQ2IsQ0FBQyxFQUxXLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBS3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvRGVidWZmVHlwZS50cz82OWE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIERlYnVmZlR5cGUge1xyXG4gIE5vbmUgPSAwLFxyXG4gIERhbWFnZU92ZXJUaW1lID0gMSxcclxuICBJbmNyZWFzZURhbWFnZVRha2VuID0gMixcclxuICBTaWxlbmNlID0gMyxcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1660\n')},7966:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Debuff_1 = __importDefault(__webpack_require__(5584));\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nclass DotDebuff extends Debuff_1.default {\r\n    constructor(params) {\r\n        super(params);\r\n        this.tick = () => {\r\n            if (this.harmEffect) {\r\n                this.harmEffect(this.target, this.getHarmAmount(this.target));\r\n            }\r\n            if (this.duration > 0 && ++this._tickCount === this._numTicks) {\r\n                this.loop.stop();\r\n                this.target.removeDebuff(this.name);\r\n            }\r\n        };\r\n        this.type = DebuffType_1.DebuffType.DamageOverTime;\r\n        this._interval = params.interval || 2000;\r\n        this._tickCount = 0;\r\n        this._numTicks = Math.floor(this.duration / this._interval);\r\n        this.loop = new Loop_1.default(params.name, this.tick, this._interval);\r\n    }\r\n}\r\nexports["default"] = DotDebuff;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk2Ni5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUE4QjtBQUU5QiwrQ0FBMEM7QUFDMUMseURBQTBCO0FBTTFCLE1BQXFCLFNBQVUsU0FBUSxnQkFBTTtJQWdCM0MsWUFBWSxNQUF1QjtRQUNqQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFaRyxTQUFJLEdBQUcsR0FBRyxFQUFFO1lBQzdCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7YUFDL0Q7WUFFRCxJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsS0FBSyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUM3RCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDckM7UUFDSCxDQUFDLENBQUM7UUFLQSxJQUFJLENBQUMsSUFBSSxHQUFHLHVCQUFVLENBQUMsY0FBYyxDQUFDO1FBRXRDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFDekMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTVELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxjQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0Y7QUEzQkQsK0JBMkJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvRG90RGVidWZmLnRzPzQzZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERlYnVmZiBmcm9tIFwiLi9EZWJ1ZmZcIjtcclxuaW1wb3J0IHsgRGVidWZmUGFyYW1zIH0gZnJvbSBcIi4vRGVidWZmUGFyYW1zXCI7XHJcbmltcG9ydCB7IERlYnVmZlR5cGUgfSBmcm9tIFwiLi9EZWJ1ZmZUeXBlXCI7XHJcbmltcG9ydCBMb29wIGZyb20gXCIuL0xvb3BcIjtcclxuXHJcbnR5cGUgRG90RGVidWZmUGFyYW1zID0gRGVidWZmUGFyYW1zICYge1xyXG4gIGludGVydmFsOiBudW1iZXI7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb3REZWJ1ZmYgZXh0ZW5kcyBEZWJ1ZmYge1xyXG4gIHByaXZhdGUgX2ludGVydmFsOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfbnVtVGlja3M6IG51bWJlcjtcclxuICBwcml2YXRlIF90aWNrQ291bnQ6IG51bWJlcjtcclxuXHJcbiAgcHJvdGVjdGVkIG92ZXJyaWRlIHRpY2sgPSAoKSA9PiB7XHJcbiAgICBpZiAodGhpcy5oYXJtRWZmZWN0KSB7XHJcbiAgICAgIHRoaXMuaGFybUVmZmVjdCh0aGlzLnRhcmdldCwgdGhpcy5nZXRIYXJtQW1vdW50KHRoaXMudGFyZ2V0KSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuZHVyYXRpb24gPiAwICYmICsrdGhpcy5fdGlja0NvdW50ID09PSB0aGlzLl9udW1UaWNrcykge1xyXG4gICAgICB0aGlzLmxvb3Auc3RvcCgpO1xyXG4gICAgICB0aGlzLnRhcmdldC5yZW1vdmVEZWJ1ZmYodGhpcy5uYW1lKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IERvdERlYnVmZlBhcmFtcykge1xyXG4gICAgc3VwZXIocGFyYW1zKTtcclxuXHJcbiAgICB0aGlzLnR5cGUgPSBEZWJ1ZmZUeXBlLkRhbWFnZU92ZXJUaW1lO1xyXG5cclxuICAgIHRoaXMuX2ludGVydmFsID0gcGFyYW1zLmludGVydmFsIHx8IDIwMDA7XHJcbiAgICB0aGlzLl90aWNrQ291bnQgPSAwO1xyXG4gICAgdGhpcy5fbnVtVGlja3MgPSBNYXRoLmZsb29yKHRoaXMuZHVyYXRpb24gLyB0aGlzLl9pbnRlcnZhbCk7XHJcblxyXG4gICAgdGhpcy5sb29wID0gbmV3IExvb3AocGFyYW1zLm5hbWUsIHRoaXMudGljaywgdGhpcy5faW50ZXJ2YWwpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7966\n')},2472:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst HealOutcome_1 = __importDefault(__webpack_require__(659));\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nconst Loops_1 = __importDefault(__webpack_require__(7657));\r\nconst Stats_1 = __importDefault(__webpack_require__(8062));\r\nclass Friendly {\r\n    constructor(name, params) {\r\n        this._adjustHealth = (amount) => {\r\n            const currentHealth = this.health();\r\n            const newHealth = currentHealth + amount;\r\n            if (newHealth >= this.maxHealth()) {\r\n                this.health(this.maxHealth());\r\n                return newHealth - this.maxHealth(); // overheal\r\n            }\r\n            if (newHealth <= 0) {\r\n                this.health(0);\r\n                return newHealth; // underheal\r\n            }\r\n            this.health(newHealth);\r\n            return 0;\r\n        };\r\n        this._attack = () => {\r\n            this._onAttackCallback(this);\r\n        };\r\n        this._initialize = () => {\r\n            const healthSubscription = this.health.subscribe((currentHealth) => {\r\n                if (currentHealth === 0) {\r\n                    this._onDeath();\r\n                    if (this._onDeathCallback) {\r\n                        this._onDeathCallback(this);\r\n                    }\r\n                    healthSubscription.dispose();\r\n                }\r\n            });\r\n        };\r\n        this._stats = Stats_1.default;\r\n        this.getDebuffsByType = (debuffType) => {\r\n            return this.debuffs().filter((debuff) => debuff.type === debuffType);\r\n        };\r\n        this._onDeath = () => {\r\n            this.stop();\r\n            this.buffs.removeAll();\r\n            this.debuffs.removeAll();\r\n            this.isDead(true);\r\n        };\r\n        this.animations = Animations_1.default;\r\n        this.applyBuff = (buff) => {\r\n            // Remove any pre-existing buffs by this name.\r\n            this.removeBuff(buff.name);\r\n            buff.start(this);\r\n            this.buffs.push(buff);\r\n        };\r\n        this.applyDebuff = (debuff) => {\r\n            const currentDebuffs = this.getDebuffsByType(debuff.type);\r\n            if (currentDebuffs.length) {\r\n                // Don\'t apply the buff twice, just restart the current one.\r\n                currentDebuffs.forEach((currentDebuff) => currentDebuff.restart());\r\n            }\r\n            else {\r\n                debuff.start(this);\r\n                this.debuffs.push(debuff);\r\n            }\r\n        };\r\n        this.harm = (amount) => {\r\n            const debuffs = this.getDebuffsByType(DebuffType_1.DebuffType.IncreaseDamageTaken);\r\n            debuffs.forEach((debuff) => {\r\n                if (debuff.harmEffect) {\r\n                    amount = debuff.harmEffect(this, amount);\r\n                }\r\n            });\r\n            return this._adjustHealth(0 - amount);\r\n        };\r\n        this.heal = (healName, amount, isCrit, isFromHotBuff = false, isFirstHotTick = false) => {\r\n            const healOutcome = new HealOutcome_1.default(healName);\r\n            healOutcome.amount = amount;\r\n            healOutcome.isCrit = isCrit;\r\n            healOutcome.isFromHotBuff = isFromHotBuff;\r\n            healOutcome.isFirstHotTick = isFirstHotTick;\r\n            if (this.isDead()) {\r\n                healOutcome.targetDied = true;\r\n            }\r\n            else {\r\n                const overheal = this._adjustHealth(amount);\r\n                this.debuffs().forEach((debuff) => debuff.postHealCallback(this));\r\n                healOutcome.overheal = overheal;\r\n            }\r\n            this.lastHealInfo(healOutcome);\r\n            this._stats.update(healOutcome);\r\n            return healOutcome;\r\n        };\r\n        this.healToMax = (allowResurrection) => {\r\n            if (this.isDead() && allowResurrection) {\r\n                this.resurrect(this.maxHealth());\r\n            }\r\n            else {\r\n                this.health(this.maxHealth());\r\n            }\r\n        };\r\n        this.healthPercentage = ko.pureComputed(() => this.health() / this.maxHealth());\r\n        this.healthPercentageString = ko.pureComputed(() => `${100.0 * this.healthPercentage()}%`);\r\n        this.healthStatusString = ko.pureComputed(() => `${this.health()}/${this.maxHealth()}`);\r\n        this.lastHealStatusString = ko.pureComputed(() => {\r\n            const lastHealInfo = this.lastHealInfo();\r\n            if (!lastHealInfo || lastHealInfo.targetDied) {\r\n                return "";\r\n            }\r\n            return `+${lastHealInfo.effectiveAmount}`;\r\n        });\r\n        this.pause = () => {\r\n            this._loops.pause();\r\n            this.buffs().forEach(function (buff) {\r\n                buff.pause();\r\n            });\r\n            this.debuffs().forEach(function (debuff) {\r\n                debuff.pause();\r\n            });\r\n        };\r\n        this.removeBuff = (buffNameToRemove) => {\r\n            const removedBuffs = this.buffs.remove((buff) => buff.name === buffNameToRemove);\r\n            if (removedBuffs.length) {\r\n                removedBuffs.forEach((removedBuff) => {\r\n                    removedBuff.stop();\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.removeDebuff = (debuffNameToRemove) => {\r\n            const removedDebuffs = this.debuffs.remove((debuff) => debuff.name === debuffNameToRemove);\r\n            if (removedDebuffs.length) {\r\n                removedDebuffs.forEach((removedDebuff) => {\r\n                    removedDebuff.stop();\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        this.removeLastDebuff = () => {\r\n            this.debuffs.pop().stop();\r\n        };\r\n        this.reset = () => {\r\n            this.healToMax(true);\r\n            this.buffs.removeAll().forEach((buff) => buff.stop());\r\n            this.debuffs.removeAll().forEach((debuff) => debuff.stop());\r\n        };\r\n        this.resume = () => {\r\n            this._loops.resume();\r\n            this.buffs().forEach(function (buff) {\r\n                buff.resume();\r\n            });\r\n            this.debuffs().forEach(function (debuff) {\r\n                debuff.resume();\r\n            });\r\n        };\r\n        this.resurrect = (health) => {\r\n            if (this.isDead()) {\r\n                this.isDead(false);\r\n                this.health(health || Math.round(this.maxHealth() * 0.2));\r\n            }\r\n        };\r\n        this.start = () => {\r\n            this._loops.start();\r\n        };\r\n        this.stop = () => {\r\n            this._loops.stop();\r\n            this.buffs.removeAll().forEach(function (buff) {\r\n                buff.stop();\r\n            });\r\n            this.debuffs.removeAll().forEach(function (debuff) {\r\n                debuff.stop();\r\n            });\r\n        };\r\n        const health = params.health || 100;\r\n        this.name = name;\r\n        this.health = ko.observable(health);\r\n        this.isDead = ko.observable(false);\r\n        this.buffs = ko.observableArray([]);\r\n        this.debuffs = ko.observableArray([]);\r\n        this.lastHealInfo = ko.observable();\r\n        this.maxHealth = ko.observable(params.maxHealth || health);\r\n        this._initialAttackDelay = params.initialAttackDelay || 0;\r\n        this._attackInterval = params.attackInterval || 1000;\r\n        this._onAttackCallback = params.onAttack;\r\n        this._onDeathCallback = params.onDeath;\r\n        this._loops = new Loops_1.default(new Loop_1.default("Attack", this._attack, this._attackInterval, this._initialAttackDelay));\r\n        this._initialize();\r\n    }\r\n    get isAtFullHealth() {\r\n        return this.health() === this.maxHealth();\r\n    }\r\n}\r\nexports["default"] = Friendly;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2472\n')},1232:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\n__webpack_require__(6721);\r\nconst GamePage_html_1 = __importDefault(__webpack_require__(6807));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst AnimationHelpers_1 = __importDefault(__webpack_require__(5926));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst BossFactory_1 = __importDefault(__webpack_require__(275));\r\nconst Friendly_1 = __importDefault(__webpack_require__(2472));\r\nconst HealFactory_1 = __importDefault(__webpack_require__(9986));\r\nconst Party_1 = __importDefault(__webpack_require__(3836));\r\nconst Player_1 = __importDefault(__webpack_require__(698));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nconst Rewards_1 = __importDefault(__webpack_require__(9225));\r\nconst Stats_1 = __importDefault(__webpack_require__(8062));\r\nclass GameViewModel {\r\n    constructor() {\r\n        this._document_onKeyPress = (e) => {\r\n            const keyboardEvent = e;\r\n            const keyCode = keyboardEvent.keyCode;\r\n            if (keyCode === 27) {\r\n                // ESC\r\n                this.cancelCast();\r\n            }\r\n            if (keyCode === 32) {\r\n                // SPACE\r\n                const previousCast = this.player.currentCast.previous();\r\n                if (previousCast && previousCast.name) {\r\n                    this.cast(previousCast.name);\r\n                }\r\n            }\r\n            else if (keyCode >= 48 && keyCode <= 57) {\r\n                // 0-9\r\n                const actionIndex = keyCode - 49; // - \'0\' - 1\r\n                const action = this.player.getActionByIndex(actionIndex);\r\n                if (action) {\r\n                    this.cast(action);\r\n                }\r\n            }\r\n            else {\r\n                let partyIndex = -1;\r\n                switch (keyCode) {\r\n                    case 81: // q\r\n                        partyIndex = 0;\r\n                        break;\r\n                    case 87: // w\r\n                        partyIndex = 1;\r\n                        break;\r\n                    case 69: // e\r\n                        partyIndex = 2;\r\n                        break;\r\n                    case 82: // r\r\n                        partyIndex = 3;\r\n                        break;\r\n                    case 84: // t\r\n                        partyIndex = 4;\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n                const member = this.friendlies.getMemberByIndex(partyIndex);\r\n                this.player.setTarget(member);\r\n            }\r\n        };\r\n        this._finishCast = (action, outcome) => {\r\n            if (!outcome.manaSpent && !outcome.targetDied) {\r\n                this.player.spendMana(action.manaCost);\r\n            }\r\n            if (!outcome.targetDied) {\r\n                const heals = `${outcome.isCrit ? "crits" : "heals"}`;\r\n                let message = `${action.name} ${heals} ${action.target.name} for ${outcome.effectiveAmount}`;\r\n                if (outcome.overheal) {\r\n                    message += ` (${outcome.overheal} overheal)`;\r\n                }\r\n                message += ".";\r\n                this.addLog(message);\r\n            }\r\n            this.player.castQueuedHeal();\r\n        };\r\n        this._onBossKill = () => {\r\n            const bossName = this.boss().name;\r\n            this.addLog(`${bossName} was defeated!`);\r\n            const promptFunction = (message) => {\r\n                setTimeout(() => {\r\n                    this.friendlies.stop();\r\n                    alert(message);\r\n                    this.inCombat(false);\r\n                }, 0);\r\n            };\r\n            const reward = Rewards_1.default.get(bossName);\r\n            if (reward) {\r\n                promptFunction("Good job. You\'ve unlocked the \'" +\r\n                    reward.healName +\r\n                    "\' spell. It may come in handy against " +\r\n                    reward.bossName +\r\n                    ".");\r\n                this.player.actions.push(reward.healName);\r\n                this.player.maxMana(Math.round(this.player.maxMana() * 1.2));\r\n                this.friendlies.members.forEach((friendly) => friendly.maxHealth(Math.round(friendly.maxHealth() * 1.1)));\r\n                this.friendlies.reset();\r\n                this.player.restoreManaToMax();\r\n                this.boss(BossFactory_1.default.create(reward.bossName, this.player, this.friendlies.members[0], this.friendlies, this._onBossKill));\r\n            }\r\n            else {\r\n                promptFunction("You win!");\r\n            }\r\n        };\r\n        this._onFriendlyAttack = (damageModifier) => {\r\n            return ((innerDamageModifier) => {\r\n                return (friendly) => {\r\n                    const isCrit = Math.random() < 0.2;\r\n                    let attackAmount = innerDamageModifier * Random_1.default.fromIntegerIntervalInclusive(50, 80);\r\n                    if (isCrit) {\r\n                        attackAmount = attackAmount * 2;\r\n                    }\r\n                    attackAmount = Math.round(attackAmount);\r\n                    const attacks = isCrit ? "crits" : "attacks";\r\n                    const message = `${friendly.name} ${attacks} ${this.boss().name} for ${attackAmount}`;\r\n                    this.addLog(message);\r\n                    this.boss().harm(attackAmount);\r\n                };\r\n            })(damageModifier || 1);\r\n        };\r\n        this._onFriendlyDeath = (friendly) => {\r\n            this.addLog(`${friendly.name} died.`);\r\n            friendly.stop();\r\n            if (this.player.target() === friendly) {\r\n                this.player.setTarget(undefined);\r\n            }\r\n            this.boss().onDeathOfFriendly(friendly);\r\n            if (this.friendlies.isWiped()) {\r\n                setTimeout(() => {\r\n                    this.friendlies.stop();\r\n                    this.boss().stop();\r\n                    this.pause();\r\n                    alert("You lose!");\r\n                    this.inCombat(false);\r\n                    this.friendlies.reset();\r\n                    this.player.restoreManaToMax();\r\n                    this.boss().reset();\r\n                    this.resume();\r\n                }, 0);\r\n                return;\r\n            }\r\n        };\r\n        this.addLog = (message) => {\r\n            console.log(message);\r\n        };\r\n        this.allowPause = document.location.protocol === "file:";\r\n        this.allowSkip = document.location.protocol === "file:";\r\n        this.animations = Animations_1.default;\r\n        this.cancelCast = () => {\r\n            const currentCast = this.player.currentCast.value();\r\n            if (currentCast && !currentCast.isInstant) {\r\n                currentCast.cancel();\r\n            }\r\n        };\r\n        this.cast = (actionName) => {\r\n            if (this.isPaused()) {\r\n                return;\r\n            }\r\n            const target = this.player.target();\r\n            if (!target) {\r\n                return;\r\n            }\r\n            const healParams = {\r\n                critChance: this.player.critChance(),\r\n                onFinish: this._finishCast,\r\n                onCancel: this.player.cancelCast,\r\n            };\r\n            const heal = HealFactory_1.default.create(actionName, target, healParams);\r\n            if (this.player.mana() < heal.manaCost) {\r\n                // Out of mana\r\n                return;\r\n            }\r\n            this.player.cast(heal);\r\n        };\r\n        this.engageBoss = () => {\r\n            this.addLog(`${this.boss().name} engaged.`);\r\n            this.boss().engage();\r\n            this.friendlies.start();\r\n            this.inCombat(true);\r\n        };\r\n        this.joinGroupButton_onClick = () => {\r\n            this.showIntro(false);\r\n        };\r\n        this.pause = () => {\r\n            this.isPaused(true);\r\n            this.boss().pause();\r\n            this.friendlies.pause();\r\n            AnimationHelpers_1.default.pause();\r\n        };\r\n        this.resetStats_onClick = () => {\r\n            this.stats.reset();\r\n        };\r\n        this.resume = () => {\r\n            this.isPaused(false);\r\n            this.boss().resume();\r\n            this.friendlies.resume();\r\n            AnimationHelpers_1.default.resume();\r\n        };\r\n        this.showBuff = (buff, member) => {\r\n            this.player.setTarget(member);\r\n        };\r\n        this.showDebuff = (debuff, member) => {\r\n            this.player.setTarget(member);\r\n        };\r\n        this.skip = () => {\r\n            this.boss().stop();\r\n            this._onBossKill();\r\n        };\r\n        this.stats = Stats_1.default;\r\n        this.toggleStatsLink = ko.pureComputed(() => {\r\n            return this.showStats() ? "Hide stats" : "Show stats";\r\n        });\r\n        this.toggleStats_onClick = () => {\r\n            this.showStats(!this.showStats());\r\n        };\r\n        this.showIntro = ko.observable(true);\r\n        this.showStats = ko.observable(false);\r\n        this.isPaused = ko.observable(false);\r\n        this.inCombat = ko.observable(false);\r\n        this.player = new Player_1.default({\r\n            health: 109,\r\n            attackInterval: 30000,\r\n            onAttack: this._onFriendlyAttack(2),\r\n            onDeath: this._onFriendlyDeath,\r\n        }, 1081, [ActionName_1.ActionName.SmallHeal]);\r\n        const tank = new Friendly_1.default("Tank", {\r\n            health: 212,\r\n            attackInterval: 400,\r\n            onAttack: this._onFriendlyAttack(1),\r\n            onDeath: this._onFriendlyDeath,\r\n        });\r\n        this.friendlies = new Party_1.default([\r\n            tank,\r\n            new Friendly_1.default("DPS #1", {\r\n                health: 127,\r\n                attackInterval: 1000,\r\n                initialAttackDelay: 4000,\r\n                onAttack: this._onFriendlyAttack(3.2),\r\n                onDeath: this._onFriendlyDeath,\r\n            }),\r\n            new Friendly_1.default("DPS #2", {\r\n                health: 113,\r\n                attackInterval: 1200,\r\n                initialAttackDelay: 3500,\r\n                onAttack: this._onFriendlyAttack(3.0),\r\n                onDeath: this._onFriendlyDeath,\r\n            }),\r\n            new Friendly_1.default("DPS #3", {\r\n                health: 141,\r\n                attackInterval: 1400,\r\n                initialAttackDelay: 3000,\r\n                onAttack: this._onFriendlyAttack(2.8),\r\n                onDeath: this._onFriendlyDeath,\r\n            }),\r\n            this.player,\r\n        ]);\r\n        this.boss = ko.observable(BossFactory_1.default.create(BossName_1.BossName.GordoRamzee, this.player, tank, this.friendlies, this._onBossKill));\r\n        ko.utils.registerEventHandler(document, "keydown", this._document_onKeyPress);\r\n    }\r\n}\r\nexports["default"] = { viewModel: GameViewModel, template: GamePage_html_1.default };\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1232\n')},8505:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst AnimationHelpers_1 = __importDefault(__webpack_require__(5926));\r\nconst HealOutcome_1 = __importDefault(__webpack_require__(659));\r\nclass Heal {\r\n    constructor(target, params) {\r\n        this._complete = () => {\r\n            const outcome = this.getOutcome();\r\n            this._onFinish(this, outcome);\r\n        };\r\n        this._updateProgress = (progress) => {\r\n            this.castProgress = progress.complete || 0;\r\n        };\r\n        this.begin = (elements) => {\r\n            if (!elements || elements.length === 0) {\r\n                return;\r\n            }\r\n            elements[0].style.width = "0%";\r\n            AnimationHelpers_1.default.removeStyleAttribute(elements);\r\n        };\r\n        this.cancel = () => {\r\n            const outcome = new HealOutcome_1.default(this.name);\r\n            outcome.wasCancelled = true;\r\n            this._onCancel(this, outcome);\r\n        };\r\n        this.target = target;\r\n        this.isInstant = false;\r\n        this._onFinish = params.onFinish;\r\n        this._onCancel = params.onCancel;\r\n        this.castProgress = 0.0;\r\n    }\r\n    get animation() {\r\n        return [\r\n            {\r\n                properties: AnimationHelpers_1.default.fullWidth,\r\n                options: {\r\n                    duration: this.castTime,\r\n                    begin: this.begin,\r\n                    progress: AnimationHelpers_1.default.makeUpdateProgressFunction(this._updateProgress),\r\n                    complete: this._complete,\r\n                },\r\n            },\r\n        ];\r\n    }\r\n}\r\nexports["default"] = Heal;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUwNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUdBLHNFQUFrRDtBQUdsRCxnRUFBd0M7QUFHeEMsTUFBOEIsSUFBSTtJQXNDaEMsWUFBWSxNQUFnQixFQUFFLE1BQWtCO1FBckN4QyxjQUFTLEdBQUcsR0FBRyxFQUFFO1lBQ3ZCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNoQyxDQUFDLENBQUM7UUFJTSxvQkFBZSxHQUFHLENBQUMsUUFBMkIsRUFBRSxFQUFFO1lBQ3hELElBQUksQ0FBQyxZQUFZLEdBQUcsUUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUFDO1FBRVEsVUFBSyxHQUF1QixDQUFDLFFBQXlCLEVBQUUsRUFBRTtZQUNsRSxJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN0QyxPQUFPO2FBQ1I7WUFFRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDL0IsMEJBQWdCLENBQUMsb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDO1FBTUYsV0FBTSxHQUFHLEdBQUcsRUFBRTtZQUNaLE1BQU0sT0FBTyxHQUFHLElBQUkscUJBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0MsT0FBTyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7WUFFNUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDaEMsQ0FBQyxDQUFDO1FBU0EsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFFckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFFdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUVqQyxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTztZQUNMO2dCQUNFLFVBQVUsRUFBRSwwQkFBZ0IsQ0FBQyxTQUFTO2dCQUN0QyxPQUFPLEVBQUU7b0JBQ1AsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO29CQUN2QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7b0JBQ2pCLFFBQVEsRUFBRSwwQkFBZ0IsQ0FBQywwQkFBMEIsQ0FDbkQsSUFBSSxDQUFDLGVBQWUsQ0FDckI7b0JBQ0QsUUFBUSxFQUFFLElBQUksQ0FBQyxTQUFTO2lCQUN6QjthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQWhFRCwwQkFnRUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9IZWFsLnRzPzAxNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVsb2NpdHlDYWxsYmFja0ZuLCBWZWxvY2l0eVJlc3VsdCB9IGZyb20gXCJ2ZWxvY2l0eS1hbmltYXRlXCI7XHJcbmltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwiLi9BY3Rpb25OYW1lXCI7XHJcbmltcG9ydCB7IEFuaW1hdGlvbiB9IGZyb20gXCIuL0FuaW1hdGlvblwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uSGVscGVycyBmcm9tIFwiLi9BbmltYXRpb25IZWxwZXJzXCI7XHJcbmltcG9ydCB7IEFuaW1hdGlvblByb2dyZXNzIH0gZnJvbSBcIi4vQW5pbWF0aW9uUHJvZ3Jlc3NcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCIuL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBIZWFsT3V0Y29tZSBmcm9tIFwiLi9IZWFsT3V0Y29tZVwiO1xyXG5pbXBvcnQgeyBIZWFsUGFyYW1zIH0gZnJvbSBcIi4vSGVhbFBhcmFtc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgSGVhbCB7XHJcbiAgcHJpdmF0ZSBfY29tcGxldGUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBvdXRjb21lID0gdGhpcy5nZXRPdXRjb21lKCk7XHJcbiAgICB0aGlzLl9vbkZpbmlzaCh0aGlzLCBvdXRjb21lKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkNhbmNlbDogKGFjdGlvbjogSGVhbCwgb3V0Y29tZTogSGVhbE91dGNvbWUpID0+IHZvaWQ7XHJcbiAgcHJpdmF0ZSBfb25GaW5pc2g6IChhY3Rpb246IEhlYWwsIG91dGNvbWU6IEhlYWxPdXRjb21lKSA9PiB2b2lkO1xyXG4gIHByaXZhdGUgX3VwZGF0ZVByb2dyZXNzID0gKHByb2dyZXNzOiBBbmltYXRpb25Qcm9ncmVzcykgPT4ge1xyXG4gICAgdGhpcy5jYXN0UHJvZ3Jlc3MgPSBwcm9ncmVzcy5jb21wbGV0ZSB8fCAwO1xyXG4gIH07XHJcblxyXG4gIHByb3RlY3RlZCBiZWdpbjogVmVsb2NpdHlDYWxsYmFja0ZuID0gKGVsZW1lbnRzPzogVmVsb2NpdHlSZXN1bHQpID0+IHtcclxuICAgIGlmICghZWxlbWVudHMgfHwgZWxlbWVudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBlbGVtZW50c1swXS5zdHlsZS53aWR0aCA9IFwiMCVcIjtcclxuICAgIEFuaW1hdGlvbkhlbHBlcnMucmVtb3ZlU3R5bGVBdHRyaWJ1dGUoZWxlbWVudHMpO1xyXG4gIH07XHJcblxyXG4gIHByb3RlY3RlZCBhYnN0cmFjdCBjYXN0VGltZTogbnVtYmVyO1xyXG4gIHByb3RlY3RlZCBhYnN0cmFjdCBnZXRPdXRjb21lOiAoKSA9PiBIZWFsT3V0Y29tZTtcclxuICB0YXJnZXQ6IEZyaWVuZGx5O1xyXG5cclxuICBjYW5jZWwgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBvdXRjb21lID0gbmV3IEhlYWxPdXRjb21lKHRoaXMubmFtZSk7XHJcbiAgICBvdXRjb21lLndhc0NhbmNlbGxlZCA9IHRydWU7XHJcblxyXG4gICAgdGhpcy5fb25DYW5jZWwodGhpcywgb3V0Y29tZSk7XHJcbiAgfTtcclxuXHJcbiAgYWJzdHJhY3QgY2FzdDogKCkgPT4gSGVhbE91dGNvbWU7XHJcbiAgY2FzdFByb2dyZXNzOiBudW1iZXI7XHJcbiAgaXNJbnN0YW50OiBib29sZWFuO1xyXG4gIGFic3RyYWN0IG1hbmFDb3N0OiBudW1iZXI7XHJcbiAgYWJzdHJhY3QgbmFtZTogQWN0aW9uTmFtZTtcclxuXHJcbiAgY29uc3RydWN0b3IodGFyZ2V0OiBGcmllbmRseSwgcGFyYW1zOiBIZWFsUGFyYW1zKSB7XHJcbiAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcclxuXHJcbiAgICB0aGlzLmlzSW5zdGFudCA9IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuX29uRmluaXNoID0gcGFyYW1zLm9uRmluaXNoO1xyXG4gICAgdGhpcy5fb25DYW5jZWwgPSBwYXJhbXMub25DYW5jZWw7XHJcblxyXG4gICAgdGhpcy5jYXN0UHJvZ3Jlc3MgPSAwLjA7XHJcbiAgfVxyXG5cclxuICBnZXQgYW5pbWF0aW9uKCk6IEFuaW1hdGlvbltdIHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgIHtcclxuICAgICAgICBwcm9wZXJ0aWVzOiBBbmltYXRpb25IZWxwZXJzLmZ1bGxXaWR0aCxcclxuICAgICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5jYXN0VGltZSxcclxuICAgICAgICAgIGJlZ2luOiB0aGlzLmJlZ2luLFxyXG4gICAgICAgICAgcHJvZ3Jlc3M6IEFuaW1hdGlvbkhlbHBlcnMubWFrZVVwZGF0ZVByb2dyZXNzRnVuY3Rpb24oXHJcbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZVByb2dyZXNzXHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgY29tcGxldGU6IHRoaXMuX2NvbXBsZXRlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICBdO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8505\n')},9986:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst MediumHeal_1 = __importDefault(__webpack_require__(5581));\r\nconst Renew_1 = __importDefault(__webpack_require__(6038));\r\nconst SmallHeal_1 = __importDefault(__webpack_require__(6205));\r\nclass HealFactory {\r\n    create(healName, target, healParams) {\r\n        switch (healName) {\r\n            case ActionName_1.ActionName.SmallHeal:\r\n                return new SmallHeal_1.default(target, healParams);\r\n            case ActionName_1.ActionName.Renew:\r\n                return new Renew_1.default(target, healParams);\r\n            case ActionName_1.ActionName.MediumHeal:\r\n                return new MediumHeal_1.default(target, healParams);\r\n        }\r\n    }\r\n}\r\nexports["default"] = new HealFactory();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTk4Ni5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtDQUEwQztBQUkxQyxnRUFBNEM7QUFDNUMsMkRBQWtDO0FBQ2xDLCtEQUEwQztBQUUxQyxNQUFNLFdBQVc7SUFDZixNQUFNLENBQUMsUUFBb0IsRUFBRSxNQUFnQixFQUFFLFVBQXNCO1FBQ25FLFFBQVEsUUFBUSxFQUFFO1lBQ2hCLEtBQUssdUJBQVUsQ0FBQyxTQUFTO2dCQUN2QixPQUFPLElBQUksbUJBQVMsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDM0MsS0FBSyx1QkFBVSxDQUFDLEtBQUs7Z0JBQ25CLE9BQU8sSUFBSSxlQUFLLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZDLEtBQUssdUJBQVUsQ0FBQyxVQUFVO2dCQUN4QixPQUFPLElBQUksb0JBQVUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDN0M7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxxQkFBZSxJQUFJLFdBQVcsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvSGVhbEZhY3RvcnkudHM/NWMzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25OYW1lIH0gZnJvbSBcIi4vQWN0aW9uTmFtZVwiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcIi4vRnJpZW5kbHlcIjtcclxuaW1wb3J0IEhlYWwgZnJvbSBcIi4vSGVhbFwiO1xyXG5pbXBvcnQgeyBIZWFsUGFyYW1zIH0gZnJvbSBcIi4vSGVhbFBhcmFtc1wiO1xyXG5pbXBvcnQgTWVkaXVtSGVhbCBmcm9tIFwiLi9IZWFscy9NZWRpdW1IZWFsXCI7XHJcbmltcG9ydCBSZW5ldyBmcm9tIFwiLi9IZWFscy9SZW5ld1wiO1xyXG5pbXBvcnQgU21hbGxIZWFsIGZyb20gXCIuL0hlYWxzL1NtYWxsSGVhbFwiO1xyXG5cclxuY2xhc3MgSGVhbEZhY3Rvcnkge1xyXG4gIGNyZWF0ZShoZWFsTmFtZTogQWN0aW9uTmFtZSwgdGFyZ2V0OiBGcmllbmRseSwgaGVhbFBhcmFtczogSGVhbFBhcmFtcyk6IEhlYWwge1xyXG4gICAgc3dpdGNoIChoZWFsTmFtZSkge1xyXG4gICAgICBjYXNlIEFjdGlvbk5hbWUuU21hbGxIZWFsOlxyXG4gICAgICAgIHJldHVybiBuZXcgU21hbGxIZWFsKHRhcmdldCwgaGVhbFBhcmFtcyk7XHJcbiAgICAgIGNhc2UgQWN0aW9uTmFtZS5SZW5ldzpcclxuICAgICAgICByZXR1cm4gbmV3IFJlbmV3KHRhcmdldCwgaGVhbFBhcmFtcyk7XHJcbiAgICAgIGNhc2UgQWN0aW9uTmFtZS5NZWRpdW1IZWFsOlxyXG4gICAgICAgIHJldHVybiBuZXcgTWVkaXVtSGVhbCh0YXJnZXQsIGhlYWxQYXJhbXMpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IEhlYWxGYWN0b3J5KCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9986\n')},659:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass HealOutcome {\r\n    constructor(healName) {\r\n        this._amount = 0;\r\n        this._isCrit = false;\r\n        this._isFromHotBuff = false;\r\n        this._isFirstHotTick = false;\r\n        this._manaSpent = 0;\r\n        this._overheal = 0;\r\n        this._targetDied = false;\r\n        this._wasCancelled = false;\r\n        this._healName = healName;\r\n    }\r\n    get healName() {\r\n        return this._healName;\r\n    }\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n    set amount(value) {\r\n        this._amount = value;\r\n    }\r\n    get effectiveAmount() {\r\n        return this.amount - this._overheal;\r\n    }\r\n    get isCrit() {\r\n        return this._isCrit;\r\n    }\r\n    set isCrit(value) {\r\n        this._isCrit = value;\r\n    }\r\n    get isFromHotBuff() {\r\n        return this._isFromHotBuff;\r\n    }\r\n    set isFromHotBuff(value) {\r\n        this._isFromHotBuff = value;\r\n    }\r\n    get isFirstHotTick() {\r\n        return this._isFirstHotTick;\r\n    }\r\n    set isFirstHotTick(value) {\r\n        this._isFirstHotTick = value;\r\n    }\r\n    get manaSpent() {\r\n        return this._manaSpent;\r\n    }\r\n    set manaSpent(value) {\r\n        this._manaSpent = value;\r\n    }\r\n    get overheal() {\r\n        return this._overheal;\r\n    }\r\n    set overheal(value) {\r\n        this._overheal = value;\r\n    }\r\n    get targetDied() {\r\n        return this._targetDied;\r\n    }\r\n    set targetDied(value) {\r\n        this._targetDied = value;\r\n    }\r\n    get wasCancelled() {\r\n        return this._wasCancelled;\r\n    }\r\n    set wasCancelled(value) {\r\n        this._wasCancelled = value;\r\n    }\r\n}\r\nexports["default"] = HealOutcome;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiI7O0FBRUEsTUFBcUIsV0FBVztJQVc5QixZQUFZLFFBQW9CO1FBVHhCLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFDcEIsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUN6QixtQkFBYyxHQUFZLEtBQUssQ0FBQztRQUNoQyxvQkFBZSxHQUFZLEtBQUssQ0FBQztRQUNqQyxlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFDdEIsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFDN0Isa0JBQWEsR0FBWSxLQUFLLENBQUM7UUFHckMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxJQUFJLE1BQU0sQ0FBQyxLQUFhO1FBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLGVBQWU7UUFDakIsT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDdEMsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBSSxNQUFNLENBQUMsS0FBYztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFJLGFBQWEsQ0FBQyxLQUFjO1FBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLGNBQWMsQ0FBQyxLQUFjO1FBQy9CLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQWE7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxRQUFRLENBQUMsS0FBYTtRQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUFjO1FBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQUksWUFBWSxDQUFDLEtBQWM7UUFDN0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBdEZELGlDQXNGQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0hlYWxPdXRjb21lLnRzPzczZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uTmFtZSB9IGZyb20gXCIuL0FjdGlvbk5hbWVcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWxPdXRjb21lIHtcclxuICBwcml2YXRlIF9oZWFsTmFtZTogQWN0aW9uTmFtZTtcclxuICBwcml2YXRlIF9hbW91bnQ6IG51bWJlciA9IDA7XHJcbiAgcHJpdmF0ZSBfaXNDcml0OiBib29sZWFuID0gZmFsc2U7XHJcbiAgcHJpdmF0ZSBfaXNGcm9tSG90QnVmZjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX2lzRmlyc3RIb3RUaWNrOiBib29sZWFuID0gZmFsc2U7XHJcbiAgcHJpdmF0ZSBfbWFuYVNwZW50OiBudW1iZXIgPSAwO1xyXG4gIHByaXZhdGUgX292ZXJoZWFsOiBudW1iZXIgPSAwO1xyXG4gIHByaXZhdGUgX3RhcmdldERpZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIF93YXNDYW5jZWxsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgY29uc3RydWN0b3IoaGVhbE5hbWU6IEFjdGlvbk5hbWUpIHtcclxuICAgIHRoaXMuX2hlYWxOYW1lID0gaGVhbE5hbWU7XHJcbiAgfVxyXG5cclxuICBnZXQgaGVhbE5hbWUoKTogQWN0aW9uTmFtZSB7XHJcbiAgICByZXR1cm4gdGhpcy5faGVhbE5hbWU7XHJcbiAgfVxyXG5cclxuICBnZXQgYW1vdW50KCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fYW1vdW50O1xyXG4gIH1cclxuXHJcbiAgc2V0IGFtb3VudCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9hbW91bnQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIGdldCBlZmZlY3RpdmVBbW91bnQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmFtb3VudCAtIHRoaXMuX292ZXJoZWFsO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzQ3JpdCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0NyaXQ7XHJcbiAgfVxyXG5cclxuICBzZXQgaXNDcml0KHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9pc0NyaXQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIGdldCBpc0Zyb21Ib3RCdWZmKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lzRnJvbUhvdEJ1ZmY7XHJcbiAgfVxyXG5cclxuICBzZXQgaXNGcm9tSG90QnVmZih2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgdGhpcy5faXNGcm9tSG90QnVmZiA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzRmlyc3RIb3RUaWNrKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lzRmlyc3RIb3RUaWNrO1xyXG4gIH1cclxuXHJcbiAgc2V0IGlzRmlyc3RIb3RUaWNrKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9pc0ZpcnN0SG90VGljayA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IG1hbmFTcGVudCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX21hbmFTcGVudDtcclxuICB9XHJcblxyXG4gIHNldCBtYW5hU3BlbnQodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fbWFuYVNwZW50ID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuICBnZXQgb3ZlcmhlYWwoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9vdmVyaGVhbDtcclxuICB9XHJcblxyXG4gIHNldCBvdmVyaGVhbCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9vdmVyaGVhbCA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRhcmdldERpZWQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fdGFyZ2V0RGllZDtcclxuICB9XHJcblxyXG4gIHNldCB0YXJnZXREaWVkKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl90YXJnZXREaWVkID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuICBnZXQgd2FzQ2FuY2VsbGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3dhc0NhbmNlbGxlZDtcclxuICB9XHJcblxyXG4gIHNldCB3YXNDYW5jZWxsZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuX3dhc0NhbmNlbGxlZCA9IHZhbHVlO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n')},6926:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nclass HealStat {\r\n    constructor(healName) {\r\n        this.efficiency = ko.pureComputed(() => {\r\n            if (this.numHeals() === 0 || this.total() === 0) {\r\n                return "-";\r\n            }\r\n            const efficiency = (100 * this._effectiveAmount()) / this.total();\r\n            return `${efficiency.toFixed(2)}%`;\r\n        });\r\n        this.reset = () => {\r\n            this._effectiveAmount(0);\r\n            this.numCrits(0);\r\n            this.numHeals(0);\r\n            this.overheal(0);\r\n            this.total(0);\r\n        };\r\n        this.name = healName;\r\n        this._effectiveAmount = ko.observable(0);\r\n        this.numCrits = ko.observable(0);\r\n        this.numHeals = ko.observable(0);\r\n        this.overheal = ko.observable(0);\r\n        this.total = ko.observable(0);\r\n    }\r\n    add(healOutcome) {\r\n        if (!healOutcome.isFromHotBuff || healOutcome.isFirstHotTick) {\r\n            this.numHeals(this.numHeals() + 1);\r\n        }\r\n        if (healOutcome.isCrit) {\r\n            this.numCrits(this.numCrits() + 1);\r\n        }\r\n        this.total(this.total() + healOutcome.amount);\r\n        this._effectiveAmount(this._effectiveAmount() + healOutcome.effectiveAmount);\r\n        this.overheal(this.overheal() + healOutcome.overheal);\r\n    }\r\n}\r\nexports["default"] = HealStat;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkyNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0I7QUFJL0IsTUFBcUIsUUFBUTtJQXdCM0IsWUFBWSxRQUFvQjtRQWhCaEMsZUFBVSxHQUE0QixFQUFFLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRTtZQUN6RCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDL0MsT0FBTyxHQUFHLENBQUM7YUFDWjtZQUNELE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2xFLE9BQU8sR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUM7UUFFSCxVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ1gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEIsQ0FBQyxDQUFDO1FBR0EsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7UUFFckIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxHQUFHLENBQUMsV0FBd0I7UUFDMUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLElBQUksV0FBVyxDQUFDLGNBQWMsRUFBRTtZQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUVELElBQUksV0FBVyxDQUFDLE1BQU0sRUFBRTtZQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUVELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsZ0JBQWdCLENBQ25CLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLFdBQVcsQ0FBQyxlQUFlLENBQ3RELENBQUM7UUFDRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEQsQ0FBQztDQUNGO0FBakRELDhCQWlEQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL0hlYWxTdGF0LnRzPzVkNmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMga28gZnJvbSBcImtub2Nrb3V0XCI7XHJcbmltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwiLi9BY3Rpb25OYW1lXCI7XHJcbmltcG9ydCBIZWFsT3V0Y29tZSBmcm9tIFwiLi9IZWFsT3V0Y29tZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVhbFN0YXQge1xyXG4gIHByaXZhdGUgX2VmZmVjdGl2ZUFtb3VudDoga28uT2JzZXJ2YWJsZTxudW1iZXI+O1xyXG4gIG5hbWU6IEFjdGlvbk5hbWU7XHJcbiAgbnVtQ3JpdHM6IGtvLk9ic2VydmFibGU8bnVtYmVyPjtcclxuICBudW1IZWFsczoga28uT2JzZXJ2YWJsZTxudW1iZXI+O1xyXG4gIG92ZXJoZWFsOiBrby5PYnNlcnZhYmxlPG51bWJlcj47XHJcbiAgdG90YWw6IGtvLk9ic2VydmFibGU8bnVtYmVyPjtcclxuXHJcbiAgZWZmaWNpZW5jeToga28uUHVyZUNvbXB1dGVkPHN0cmluZz4gPSBrby5wdXJlQ29tcHV0ZWQoKCkgPT4ge1xyXG4gICAgaWYgKHRoaXMubnVtSGVhbHMoKSA9PT0gMCB8fCB0aGlzLnRvdGFsKCkgPT09IDApIHtcclxuICAgICAgcmV0dXJuIFwiLVwiO1xyXG4gICAgfVxyXG4gICAgY29uc3QgZWZmaWNpZW5jeSA9ICgxMDAgKiB0aGlzLl9lZmZlY3RpdmVBbW91bnQoKSkgLyB0aGlzLnRvdGFsKCk7XHJcbiAgICByZXR1cm4gYCR7ZWZmaWNpZW5jeS50b0ZpeGVkKDIpfSVgO1xyXG4gIH0pO1xyXG5cclxuICByZXNldCA9ICgpID0+IHtcclxuICAgIHRoaXMuX2VmZmVjdGl2ZUFtb3VudCgwKTtcclxuICAgIHRoaXMubnVtQ3JpdHMoMCk7XHJcbiAgICB0aGlzLm51bUhlYWxzKDApO1xyXG4gICAgdGhpcy5vdmVyaGVhbCgwKTtcclxuICAgIHRoaXMudG90YWwoMCk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3RydWN0b3IoaGVhbE5hbWU6IEFjdGlvbk5hbWUpIHtcclxuICAgIHRoaXMubmFtZSA9IGhlYWxOYW1lO1xyXG5cclxuICAgIHRoaXMuX2VmZmVjdGl2ZUFtb3VudCA9IGtvLm9ic2VydmFibGUoMCk7XHJcbiAgICB0aGlzLm51bUNyaXRzID0ga28ub2JzZXJ2YWJsZSgwKTtcclxuICAgIHRoaXMubnVtSGVhbHMgPSBrby5vYnNlcnZhYmxlKDApO1xyXG4gICAgdGhpcy5vdmVyaGVhbCA9IGtvLm9ic2VydmFibGUoMCk7XHJcbiAgICB0aGlzLnRvdGFsID0ga28ub2JzZXJ2YWJsZSgwKTtcclxuICB9XHJcblxyXG4gIGFkZChoZWFsT3V0Y29tZTogSGVhbE91dGNvbWUpIHtcclxuICAgIGlmICghaGVhbE91dGNvbWUuaXNGcm9tSG90QnVmZiB8fCBoZWFsT3V0Y29tZS5pc0ZpcnN0SG90VGljaykge1xyXG4gICAgICB0aGlzLm51bUhlYWxzKHRoaXMubnVtSGVhbHMoKSArIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChoZWFsT3V0Y29tZS5pc0NyaXQpIHtcclxuICAgICAgdGhpcy5udW1Dcml0cyh0aGlzLm51bUNyaXRzKCkgKyAxKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRvdGFsKHRoaXMudG90YWwoKSArIGhlYWxPdXRjb21lLmFtb3VudCk7XHJcbiAgICB0aGlzLl9lZmZlY3RpdmVBbW91bnQoXHJcbiAgICAgIHRoaXMuX2VmZmVjdGl2ZUFtb3VudCgpICsgaGVhbE91dGNvbWUuZWZmZWN0aXZlQW1vdW50XHJcbiAgICApO1xyXG4gICAgdGhpcy5vdmVyaGVhbCh0aGlzLm92ZXJoZWFsKCkgKyBoZWFsT3V0Y29tZS5vdmVyaGVhbCk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6926\n')},5581:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst Heal_1 = __importDefault(__webpack_require__(8505));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass MediumHeal extends Heal_1.default {\r\n    constructor(target, params) {\r\n        super(target, params);\r\n        this.castTime = 2000;\r\n        this.getOutcome = () => this.cast();\r\n        this.cast = () => {\r\n            const isCrit = Math.random() < this._critChance;\r\n            let healAmount = Random_1.default.fromIntegerIntervalInclusive(38, 50);\r\n            if (isCrit) {\r\n                healAmount = Math.round(healAmount * this._critMultiplier);\r\n            }\r\n            return this.target.heal(this.name, healAmount, isCrit);\r\n        };\r\n        this.manaCost = 60;\r\n        this.name = ActionName_1.ActionName.MediumHeal;\r\n        this._critChance = 0.1;\r\n        this._critMultiplier = 1.5;\r\n    }\r\n}\r\nexports["default"] = MediumHeal;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTU4MS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtDQUEyQztBQUUzQywwREFBMkI7QUFFM0IsNERBQStCO0FBRS9CLE1BQXFCLFVBQVcsU0FBUSxjQUFJO0lBcUIxQyxZQUFZLE1BQWdCLEVBQUUsTUFBa0I7UUFDOUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQWxCZCxhQUFRLEdBQVcsSUFBSSxDQUFDO1FBQ3hCLGVBQVUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFaEMsU0FBSSxHQUFHLEdBQUcsRUFBRTtZQUNuQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUNoRCxJQUFJLFVBQVUsR0FBRyxnQkFBTSxDQUFDLDRCQUE0QixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUU3RCxJQUFJLE1BQU0sRUFBRTtnQkFDVixVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2FBQzVEO1lBRUQsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6RCxDQUFDLENBQUM7UUFFRixhQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLFNBQUksR0FBZSx1QkFBVSxDQUFDLFVBQVUsQ0FBQztRQUt2QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN2QixJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQztJQUM3QixDQUFDO0NBQ0Y7QUEzQkQsZ0NBMkJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvSGVhbHMvTWVkaXVtSGVhbC50cz9lZTY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwidHMvQWN0aW9uTmFtZVwiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcInRzL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBIZWFsIGZyb20gXCJ0cy9IZWFsXCI7XHJcbmltcG9ydCB7IEhlYWxQYXJhbXMgfSBmcm9tIFwidHMvSGVhbFBhcmFtc1wiO1xyXG5pbXBvcnQgUmFuZG9tIGZyb20gXCJ0cy9SYW5kb21cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lZGl1bUhlYWwgZXh0ZW5kcyBIZWFsIHtcclxuICBwcml2YXRlIF9jcml0Q2hhbmNlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfY3JpdE11bHRpcGxpZXI6IG51bWJlcjtcclxuXHJcbiAgcHJvdGVjdGVkIGNhc3RUaW1lOiBudW1iZXIgPSAyMDAwO1xyXG4gIHByb3RlY3RlZCBnZXRPdXRjb21lID0gKCkgPT4gdGhpcy5jYXN0KCk7XHJcblxyXG4gIG92ZXJyaWRlIGNhc3QgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBpc0NyaXQgPSBNYXRoLnJhbmRvbSgpIDwgdGhpcy5fY3JpdENoYW5jZTtcclxuICAgIGxldCBoZWFsQW1vdW50ID0gUmFuZG9tLmZyb21JbnRlZ2VySW50ZXJ2YWxJbmNsdXNpdmUoMzgsIDUwKTtcclxuXHJcbiAgICBpZiAoaXNDcml0KSB7XHJcbiAgICAgIGhlYWxBbW91bnQgPSBNYXRoLnJvdW5kKGhlYWxBbW91bnQgKiB0aGlzLl9jcml0TXVsdGlwbGllcik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMudGFyZ2V0LmhlYWwodGhpcy5uYW1lLCBoZWFsQW1vdW50LCBpc0NyaXQpO1xyXG4gIH07XHJcblxyXG4gIG1hbmFDb3N0OiBudW1iZXIgPSA2MDtcclxuICBuYW1lOiBBY3Rpb25OYW1lID0gQWN0aW9uTmFtZS5NZWRpdW1IZWFsO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0YXJnZXQ6IEZyaWVuZGx5LCBwYXJhbXM6IEhlYWxQYXJhbXMpIHtcclxuICAgIHN1cGVyKHRhcmdldCwgcGFyYW1zKTtcclxuXHJcbiAgICB0aGlzLl9jcml0Q2hhbmNlID0gMC4xO1xyXG4gICAgdGhpcy5fY3JpdE11bHRpcGxpZXIgPSAxLjU7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5581\n')},6038:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst AnimationHelpers_1 = __importDefault(__webpack_require__(5926));\r\nconst BuffName_1 = __webpack_require__(8176);\r\nconst Heal_1 = __importDefault(__webpack_require__(8505));\r\nconst HealOutcome_1 = __importDefault(__webpack_require__(659));\r\nconst HotBuff_1 = __importDefault(__webpack_require__(4225));\r\nclass Renew extends Heal_1.default {\r\n    constructor(target, params) {\r\n        super(target, params);\r\n        this._hasTicked = false;\r\n        this.castTime = 250;\r\n        this.getOutcome = () => {\r\n            const healOutcome = new HealOutcome_1.default(this.name);\r\n            healOutcome.manaSpent = this.manaCost;\r\n            return healOutcome;\r\n        };\r\n        this.begin = (elements) => {\r\n            AnimationHelpers_1.default.removeStyleAttribute(elements);\r\n            this.cast();\r\n        };\r\n        this.cast = () => {\r\n            const renewBuff = new HotBuff_1.default({\r\n                name: BuffName_1.BuffName.Renew,\r\n                description: "The target feels renewed, gaining health over time.",\r\n                duration: 10000,\r\n                interval: 2000,\r\n                target: this.target,\r\n                effect: (renewTarget) => {\r\n                    const isCrit = Math.random() < this._critChance;\r\n                    let healAmount = 8;\r\n                    if (isCrit) {\r\n                        healAmount = Math.round(healAmount * this._critMultiplier);\r\n                    }\r\n                    renewTarget.heal(this.name, healAmount, isCrit, true, !this._hasTicked);\r\n                    this._hasTicked = true;\r\n                },\r\n            });\r\n            this.target.applyBuff(renewBuff);\r\n            const healOutcome = new HealOutcome_1.default(this.name);\r\n            return healOutcome;\r\n        };\r\n        this.manaCost = 80;\r\n        this.name = ActionName_1.ActionName.Renew;\r\n        this.isInstant = true;\r\n        this._critChance = 0.1;\r\n        this._critMultiplier = 1.5;\r\n    }\r\n}\r\nexports["default"] = Renew;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAzOC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtDQUEyQztBQUMzQyxzRUFBbUQ7QUFDbkQsNkNBQXVDO0FBRXZDLDBEQUEyQjtBQUMzQixnRUFBeUM7QUFFekMsNkRBQWlDO0FBR2pDLE1BQXFCLEtBQU0sU0FBUSxjQUFJO0lBaURyQyxZQUFZLE1BQWdCLEVBQUUsTUFBa0I7UUFDOUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQS9DaEIsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUUxQixhQUFRLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLGVBQVUsR0FBRyxHQUFnQixFQUFFO1lBQ3ZDLE1BQU0sV0FBVyxHQUFHLElBQUkscUJBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0MsV0FBVyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3RDLE9BQU8sV0FBVyxDQUFDO1FBQ3JCLENBQUMsQ0FBQztRQUVpQixVQUFLLEdBQXVCLENBQzdDLFFBQXlCLEVBQ3pCLEVBQUU7WUFDRiwwQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoRCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZCxDQUFDLENBQUM7UUFFTyxTQUFJLEdBQUcsR0FBRyxFQUFFO1lBQ25CLE1BQU0sU0FBUyxHQUFHLElBQUksaUJBQU8sQ0FBQztnQkFDNUIsSUFBSSxFQUFFLG1CQUFRLENBQUMsS0FBSztnQkFDcEIsV0FBVyxFQUFFLHFEQUFxRDtnQkFDbEUsUUFBUSxFQUFFLEtBQUs7Z0JBQ2YsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2dCQUNuQixNQUFNLEVBQUUsQ0FBQyxXQUFxQixFQUFFLEVBQUU7b0JBQ2hDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO29CQUNoRCxJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUM7b0JBRW5CLElBQUksTUFBTSxFQUFFO3dCQUNWLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7cUJBQzVEO29CQUVELFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFFeEUsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7Z0JBQ3pCLENBQUM7YUFDRixDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUVqQyxNQUFNLFdBQVcsR0FBRyxJQUFJLHFCQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQy9DLE9BQU8sV0FBVyxDQUFDO1FBQ3JCLENBQUMsQ0FBQztRQUVGLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDdEIsU0FBSSxHQUFlLHVCQUFVLENBQUMsS0FBSyxDQUFDO1FBS2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBRXRCLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxlQUFlLEdBQUcsR0FBRyxDQUFDO0lBQzdCLENBQUM7Q0FDRjtBQXpERCwyQkF5REMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9IZWFscy9SZW5ldy50cz9lYjNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwidHMvQWN0aW9uTmFtZVwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uSGVscGVycyBmcm9tIFwidHMvQW5pbWF0aW9uSGVscGVyc1wiO1xyXG5pbXBvcnQgeyBCdWZmTmFtZSB9IGZyb20gXCJ0cy9CdWZmTmFtZVwiO1xyXG5pbXBvcnQgRnJpZW5kbHkgZnJvbSBcInRzL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBIZWFsIGZyb20gXCJ0cy9IZWFsXCI7XHJcbmltcG9ydCBIZWFsT3V0Y29tZSBmcm9tIFwidHMvSGVhbE91dGNvbWVcIjtcclxuaW1wb3J0IHsgSGVhbFBhcmFtcyB9IGZyb20gXCJ0cy9IZWFsUGFyYW1zXCI7XHJcbmltcG9ydCBIb3RCdWZmIGZyb20gXCJ0cy9Ib3RCdWZmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5Q2FsbGJhY2tGbiwgVmVsb2NpdHlSZXN1bHQgfSBmcm9tIFwidmVsb2NpdHktYW5pbWF0ZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVuZXcgZXh0ZW5kcyBIZWFsIHtcclxuICBwcml2YXRlIF9jcml0Q2hhbmNlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfY3JpdE11bHRpcGxpZXI6IG51bWJlcjtcclxuICBwcml2YXRlIF9oYXNUaWNrZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgcHJvdGVjdGVkIGNhc3RUaW1lOiBudW1iZXIgPSAyNTA7XHJcbiAgcHJvdGVjdGVkIGdldE91dGNvbWUgPSAoKTogSGVhbE91dGNvbWUgPT4ge1xyXG4gICAgY29uc3QgaGVhbE91dGNvbWUgPSBuZXcgSGVhbE91dGNvbWUodGhpcy5uYW1lKTtcclxuICAgIGhlYWxPdXRjb21lLm1hbmFTcGVudCA9IHRoaXMubWFuYUNvc3Q7XHJcbiAgICByZXR1cm4gaGVhbE91dGNvbWU7XHJcbiAgfTtcclxuXHJcbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGJlZ2luOiBWZWxvY2l0eUNhbGxiYWNrRm4gPSAoXHJcbiAgICBlbGVtZW50cz86IFZlbG9jaXR5UmVzdWx0XHJcbiAgKSA9PiB7XHJcbiAgICBBbmltYXRpb25IZWxwZXJzLnJlbW92ZVN0eWxlQXR0cmlidXRlKGVsZW1lbnRzKTtcclxuICAgIHRoaXMuY2FzdCgpO1xyXG4gIH07XHJcblxyXG4gIG92ZXJyaWRlIGNhc3QgPSAoKSA9PiB7XHJcbiAgICBjb25zdCByZW5ld0J1ZmYgPSBuZXcgSG90QnVmZih7XHJcbiAgICAgIG5hbWU6IEJ1ZmZOYW1lLlJlbmV3LFxyXG4gICAgICBkZXNjcmlwdGlvbjogXCJUaGUgdGFyZ2V0IGZlZWxzIHJlbmV3ZWQsIGdhaW5pbmcgaGVhbHRoIG92ZXIgdGltZS5cIixcclxuICAgICAgZHVyYXRpb246IDEwMDAwLFxyXG4gICAgICBpbnRlcnZhbDogMjAwMCxcclxuICAgICAgdGFyZ2V0OiB0aGlzLnRhcmdldCxcclxuICAgICAgZWZmZWN0OiAocmVuZXdUYXJnZXQ6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXNDcml0ID0gTWF0aC5yYW5kb20oKSA8IHRoaXMuX2NyaXRDaGFuY2U7XHJcbiAgICAgICAgbGV0IGhlYWxBbW91bnQgPSA4O1xyXG5cclxuICAgICAgICBpZiAoaXNDcml0KSB7XHJcbiAgICAgICAgICBoZWFsQW1vdW50ID0gTWF0aC5yb3VuZChoZWFsQW1vdW50ICogdGhpcy5fY3JpdE11bHRpcGxpZXIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVuZXdUYXJnZXQuaGVhbCh0aGlzLm5hbWUsIGhlYWxBbW91bnQsIGlzQ3JpdCwgdHJ1ZSwgIXRoaXMuX2hhc1RpY2tlZCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2hhc1RpY2tlZCA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnRhcmdldC5hcHBseUJ1ZmYocmVuZXdCdWZmKTtcclxuXHJcbiAgICBjb25zdCBoZWFsT3V0Y29tZSA9IG5ldyBIZWFsT3V0Y29tZSh0aGlzLm5hbWUpO1xyXG4gICAgcmV0dXJuIGhlYWxPdXRjb21lO1xyXG4gIH07XHJcblxyXG4gIG1hbmFDb3N0OiBudW1iZXIgPSA4MDtcclxuICBuYW1lOiBBY3Rpb25OYW1lID0gQWN0aW9uTmFtZS5SZW5ldztcclxuXHJcbiAgY29uc3RydWN0b3IodGFyZ2V0OiBGcmllbmRseSwgcGFyYW1zOiBIZWFsUGFyYW1zKSB7XHJcbiAgICBzdXBlcih0YXJnZXQsIHBhcmFtcyk7XHJcblxyXG4gICAgdGhpcy5pc0luc3RhbnQgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuX2NyaXRDaGFuY2UgPSAwLjE7XHJcbiAgICB0aGlzLl9jcml0TXVsdGlwbGllciA9IDEuNTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6038\n')},6205:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst Heal_1 = __importDefault(__webpack_require__(8505));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass SmallHeal extends Heal_1.default {\r\n    constructor(target, params) {\r\n        super(target, params);\r\n        this.castTime = 1000;\r\n        this.getOutcome = () => this.cast();\r\n        this.cast = () => {\r\n            const isCrit = Math.random() < this._critChance;\r\n            let healAmount = Random_1.default.fromIntegerIntervalInclusive(18, 24);\r\n            if (isCrit) {\r\n                healAmount = Math.round(healAmount * this._critMultiplier);\r\n            }\r\n            return this.target.heal(this.name, healAmount, isCrit);\r\n        };\r\n        this.manaCost = 40;\r\n        this.name = ActionName_1.ActionName.SmallHeal;\r\n        this._critChance = 0.1;\r\n        this._critMultiplier = 1.5;\r\n    }\r\n}\r\nexports["default"] = SmallHeal;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIwNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtDQUEyQztBQUUzQywwREFBMkI7QUFFM0IsNERBQStCO0FBRS9CLE1BQXFCLFNBQVUsU0FBUSxjQUFJO0lBcUJ6QyxZQUFZLE1BQWdCLEVBQUUsTUFBa0I7UUFDOUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQWxCZCxhQUFRLEdBQVcsSUFBSSxDQUFDO1FBQ3hCLGVBQVUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFaEMsU0FBSSxHQUFHLEdBQUcsRUFBRTtZQUNuQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUNoRCxJQUFJLFVBQVUsR0FBRyxnQkFBTSxDQUFDLDRCQUE0QixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUU3RCxJQUFJLE1BQU0sRUFBRTtnQkFDVixVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2FBQzVEO1lBRUQsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6RCxDQUFDLENBQUM7UUFFRixhQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLFNBQUksR0FBZSx1QkFBVSxDQUFDLFNBQVMsQ0FBQztRQUt0QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN2QixJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQztJQUM3QixDQUFDO0NBQ0Y7QUEzQkQsK0JBMkJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvSGVhbHMvU21hbGxIZWFsLnRzPzIyOWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uTmFtZSB9IGZyb20gXCJ0cy9BY3Rpb25OYW1lXCI7XHJcbmltcG9ydCBGcmllbmRseSBmcm9tIFwidHMvRnJpZW5kbHlcIjtcclxuaW1wb3J0IEhlYWwgZnJvbSBcInRzL0hlYWxcIjtcclxuaW1wb3J0IHsgSGVhbFBhcmFtcyB9IGZyb20gXCJ0cy9IZWFsUGFyYW1zXCI7XHJcbmltcG9ydCBSYW5kb20gZnJvbSBcInRzL1JhbmRvbVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU21hbGxIZWFsIGV4dGVuZHMgSGVhbCB7XHJcbiAgcHJpdmF0ZSBfY3JpdENoYW5jZTogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2NyaXRNdWx0aXBsaWVyOiBudW1iZXI7XHJcblxyXG4gIHByb3RlY3RlZCBjYXN0VGltZTogbnVtYmVyID0gMTAwMDtcclxuICBwcm90ZWN0ZWQgZ2V0T3V0Y29tZSA9ICgpID0+IHRoaXMuY2FzdCgpO1xyXG5cclxuICBvdmVycmlkZSBjYXN0ID0gKCkgPT4ge1xyXG4gICAgY29uc3QgaXNDcml0ID0gTWF0aC5yYW5kb20oKSA8IHRoaXMuX2NyaXRDaGFuY2U7XHJcbiAgICBsZXQgaGVhbEFtb3VudCA9IFJhbmRvbS5mcm9tSW50ZWdlckludGVydmFsSW5jbHVzaXZlKDE4LCAyNCk7XHJcblxyXG4gICAgaWYgKGlzQ3JpdCkge1xyXG4gICAgICBoZWFsQW1vdW50ID0gTWF0aC5yb3VuZChoZWFsQW1vdW50ICogdGhpcy5fY3JpdE11bHRpcGxpZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLnRhcmdldC5oZWFsKHRoaXMubmFtZSwgaGVhbEFtb3VudCwgaXNDcml0KTtcclxuICB9O1xyXG5cclxuICBtYW5hQ29zdDogbnVtYmVyID0gNDA7XHJcbiAgbmFtZTogQWN0aW9uTmFtZSA9IEFjdGlvbk5hbWUuU21hbGxIZWFsO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0YXJnZXQ6IEZyaWVuZGx5LCBwYXJhbXM6IEhlYWxQYXJhbXMpIHtcclxuICAgIHN1cGVyKHRhcmdldCwgcGFyYW1zKTtcclxuXHJcbiAgICB0aGlzLl9jcml0Q2hhbmNlID0gMC4xO1xyXG4gICAgdGhpcy5fY3JpdE11bHRpcGxpZXIgPSAxLjU7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6205\n')},4225:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Buff_1 = __importDefault(__webpack_require__(9347));\r\nconst Loop_1 = __importDefault(__webpack_require__(893));\r\nclass HotBuff extends Buff_1.default {\r\n    constructor(params) {\r\n        super(params);\r\n        this._tick = () => {\r\n            this._effect(this._target);\r\n            if (++this._tickCount === this._numTicks) {\r\n                this._loop.stop();\r\n                this._target.removeBuff(this.name);\r\n            }\r\n        };\r\n        this.pause = () => {\r\n            this._loop.pause();\r\n        };\r\n        this.resume = () => {\r\n            this._loop.resume();\r\n        };\r\n        this.start = (target) => {\r\n            this._target = target;\r\n            this._loop.start();\r\n        };\r\n        this.stop = () => {\r\n            this._loop.stop();\r\n        };\r\n        this._interval = params.interval || 2000;\r\n        this._tickCount = 0;\r\n        this._numTicks = Math.floor(this._duration / this._interval);\r\n        this._loop = new Loop_1.default(params.name, this._tick, this._interval);\r\n    }\r\n}\r\nexports["default"] = HotBuff;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIyNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDBEQUEwQjtBQUcxQix5REFBMEI7QUFNMUIsTUFBcUIsT0FBUSxTQUFRLGNBQUk7SUErQnZDLFlBQVksTUFBcUI7UUFDL0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBM0JHLFVBQUssR0FBRyxHQUFHLEVBQUU7WUFDOUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFM0IsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDeEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3BDO1FBQ0gsQ0FBQyxDQUFDO1FBRU8sVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3JCLENBQUMsQ0FBQztRQUVGLFdBQU0sR0FBRyxHQUFHLEVBQUU7WUFDWixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3RCLENBQUMsQ0FBQztRQUVGLFVBQUssR0FBRyxDQUFDLE1BQWdCLEVBQUUsRUFBRTtZQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztZQUN0QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3JCLENBQUMsQ0FBQztRQUVGLFNBQUksR0FBRyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQztRQUtBLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFDekMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTdELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxjQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNqRSxDQUFDO0NBQ0Y7QUF4Q0QsNkJBd0NDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvSG90QnVmZi50cz9mNjExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdWZmIGZyb20gXCIuL0J1ZmZcIjtcclxuaW1wb3J0IHsgQnVmZlBhcmFtcyB9IGZyb20gXCIuL0J1ZmZQYXJhbXNcIjtcclxuaW1wb3J0IEZyaWVuZGx5IGZyb20gXCIuL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBMb29wIGZyb20gXCIuL0xvb3BcIjtcclxuXHJcbnR5cGUgSG90QnVmZlBhcmFtcyA9IEJ1ZmZQYXJhbXMgJiB7XHJcbiAgaW50ZXJ2YWw6IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhvdEJ1ZmYgZXh0ZW5kcyBCdWZmIHtcclxuICBwcml2YXRlIF9pbnRlcnZhbDogbnVtYmVyO1xyXG4gIHByaXZhdGUgX251bVRpY2tzOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfdGlja0NvdW50OiBudW1iZXI7XHJcblxyXG4gIHByb3RlY3RlZCBvdmVycmlkZSBfdGljayA9ICgpID0+IHtcclxuICAgIHRoaXMuX2VmZmVjdCh0aGlzLl90YXJnZXQpO1xyXG5cclxuICAgIGlmICgrK3RoaXMuX3RpY2tDb3VudCA9PT0gdGhpcy5fbnVtVGlja3MpIHtcclxuICAgICAgdGhpcy5fbG9vcC5zdG9wKCk7XHJcbiAgICAgIHRoaXMuX3RhcmdldC5yZW1vdmVCdWZmKHRoaXMubmFtZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgb3ZlcnJpZGUgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9sb29wLnBhdXNlKCk7XHJcbiAgfTtcclxuXHJcbiAgcmVzdW1lID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fbG9vcC5yZXN1bWUoKTtcclxuICB9O1xyXG5cclxuICBzdGFydCA9ICh0YXJnZXQ6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICB0aGlzLl90YXJnZXQgPSB0YXJnZXQ7XHJcbiAgICB0aGlzLl9sb29wLnN0YXJ0KCk7XHJcbiAgfTtcclxuXHJcbiAgc3RvcCA9ICgpID0+IHtcclxuICAgIHRoaXMuX2xvb3Auc3RvcCgpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogSG90QnVmZlBhcmFtcykge1xyXG4gICAgc3VwZXIocGFyYW1zKTtcclxuXHJcbiAgICB0aGlzLl9pbnRlcnZhbCA9IHBhcmFtcy5pbnRlcnZhbCB8fCAyMDAwO1xyXG4gICAgdGhpcy5fdGlja0NvdW50ID0gMDtcclxuICAgIHRoaXMuX251bVRpY2tzID0gTWF0aC5mbG9vcih0aGlzLl9kdXJhdGlvbiAvIHRoaXMuX2ludGVydmFsKTtcclxuXHJcbiAgICB0aGlzLl9sb29wID0gbmV3IExvb3AocGFyYW1zLm5hbWUsIHRoaXMuX3RpY2ssIHRoaXMuX2ludGVydmFsKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4225\n')},3607:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.getDebuffIcon = exports.getBuffIcon = void 0;\r\nconst BuffName_1 = __webpack_require__(8176);\r\nconst DebuffName_1 = __webpack_require__(8017);\r\nfunction getBuffIcon(buffName) {\r\n    switch (buffName) {\r\n        case BuffName_1.BuffName.Renew:\r\n            return "🌿";\r\n    }\r\n}\r\nexports.getBuffIcon = getBuffIcon;\r\nfunction getDebuffIcon(debuffName) {\r\n    switch (debuffName) {\r\n        case DebuffName_1.DebuffName.FoodPoisoning:\r\n            return "🤢";\r\n        case DebuffName_1.DebuffName.Confusion:\r\n            return "😕";\r\n        case DebuffName_1.DebuffName.Uncertainty:\r\n            return "😵‍💫";\r\n        case DebuffName_1.DebuffName.Bleed:\r\n            return "🩸";\r\n        case DebuffName_1.DebuffName.Silence:\r\n            return "🤫";\r\n    }\r\n}\r\nexports.getDebuffIcon = getDebuffIcon;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYwNy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBc0M7QUFDdEMsK0NBQTBDO0FBRTFDLFNBQWdCLFdBQVcsQ0FBQyxRQUFrQjtJQUM1QyxRQUFRLFFBQVEsRUFBRTtRQUNoQixLQUFLLG1CQUFRLENBQUMsS0FBSztZQUNqQixPQUFPLElBQUksQ0FBQztLQUNmO0FBQ0gsQ0FBQztBQUxELGtDQUtDO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLFVBQXNCO0lBQ2xELFFBQVEsVUFBVSxFQUFFO1FBQ2xCLEtBQUssdUJBQVUsQ0FBQyxhQUFhO1lBQzNCLE9BQU8sSUFBSSxDQUFDO1FBQ2QsS0FBSyx1QkFBVSxDQUFDLFNBQVM7WUFDdkIsT0FBTyxJQUFJLENBQUM7UUFDZCxLQUFLLHVCQUFVLENBQUMsV0FBVztZQUN6QixPQUFPLE9BQU8sQ0FBQztRQUNqQixLQUFLLHVCQUFVLENBQUMsS0FBSztZQUNuQixPQUFPLElBQUksQ0FBQztRQUNkLEtBQUssdUJBQVUsQ0FBQyxPQUFPO1lBQ3JCLE9BQU8sSUFBSSxDQUFDO0tBQ2Y7QUFDSCxDQUFDO0FBYkQsc0NBYUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9JY29ucy50cz8zYTM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZOYW1lIH0gZnJvbSBcIi4vQnVmZk5hbWVcIjtcclxuaW1wb3J0IHsgRGVidWZmTmFtZSB9IGZyb20gXCIuL0RlYnVmZk5hbWVcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRCdWZmSWNvbihidWZmTmFtZTogQnVmZk5hbWUpOiBzdHJpbmcge1xyXG4gIHN3aXRjaCAoYnVmZk5hbWUpIHtcclxuICAgIGNhc2UgQnVmZk5hbWUuUmVuZXc6XHJcbiAgICAgIHJldHVybiBcIvCfjL9cIjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWJ1ZmZJY29uKGRlYnVmZk5hbWU6IERlYnVmZk5hbWUpOiBzdHJpbmcge1xyXG4gIHN3aXRjaCAoZGVidWZmTmFtZSkge1xyXG4gICAgY2FzZSBEZWJ1ZmZOYW1lLkZvb2RQb2lzb25pbmc6XHJcbiAgICAgIHJldHVybiBcIvCfpKJcIjtcclxuICAgIGNhc2UgRGVidWZmTmFtZS5Db25mdXNpb246XHJcbiAgICAgIHJldHVybiBcIvCfmJVcIjtcclxuICAgIGNhc2UgRGVidWZmTmFtZS5VbmNlcnRhaW50eTpcclxuICAgICAgcmV0dXJuIFwi8J+YteKAjfCfkqtcIjtcclxuICAgIGNhc2UgRGVidWZmTmFtZS5CbGVlZDpcclxuICAgICAgcmV0dXJuIFwi8J+puFwiO1xyXG4gICAgY2FzZSBEZWJ1ZmZOYW1lLlNpbGVuY2U6XHJcbiAgICAgIHJldHVybiBcIvCfpKtcIjtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3607\n')},521:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst velocity_animate_1 = __importDefault(__webpack_require__(8581));\r\nfunction applyExtensions() {\r\n    ko.bindingHandlers.animate = {\r\n        update: (element, valueAccessor) => {\r\n            const currentCast = valueAccessor();\r\n            if (!currentCast) {\r\n                return;\r\n            }\r\n            ko.utils.arrayForEach([].concat(currentCast.animation), (animationStep) => {\r\n                animationStep.options.easing = "linear";\r\n                (0, velocity_animate_1.default)(element, animationStep.properties, animationStep.options);\r\n            });\r\n        },\r\n    };\r\n    ko.bindingHandlers.animateAction = {\r\n        update: (element, valueAccessor, allBindings, viewModel, bindingContext) => {\r\n            const action = ko.unwrap(valueAccessor());\r\n            if (!action) {\r\n                return;\r\n            }\r\n            if (!ko.bindingHandlers.animate.update) {\r\n                return;\r\n            }\r\n            ko.bindingHandlers.animate.update(element, () => {\r\n                return { animation: { properties: action, options: {} } };\r\n            }, allBindings, viewModel, bindingContext);\r\n        },\r\n    };\r\n}\r\nexports["default"] = applyExtensions;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG1EQUErQjtBQUMvQixzRUFJMEI7QUFHMUIsU0FBd0IsZUFBZTtJQUNyQyxFQUFFLENBQUMsZUFBZSxDQUFDLE9BQU8sR0FBRztRQUMzQixNQUFNLEVBQUUsQ0FBQyxPQUF5QixFQUFFLGFBQXdCLEVBQUUsRUFBRTtZQUM5RCxNQUFNLFdBQVcsR0FBRyxhQUFhLEVBQUUsQ0FBQztZQUVwQyxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNoQixPQUFPO2FBQ1I7WUFFRCxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FDbkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLEVBQ2hDLENBQUMsYUFBd0IsRUFBRSxFQUFFO2dCQUMzQixhQUFhLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUM7Z0JBQ3hDLDhCQUFRLEVBQUMsT0FBTyxFQUFFLGFBQWEsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3JFLENBQUMsQ0FDRixDQUFDO1FBQ0osQ0FBQztLQUNGLENBQUM7SUFFRixFQUFFLENBQUMsZUFBZSxDQUFDLGFBQWEsR0FBRztRQUNqQyxNQUFNLEVBQUUsQ0FDTixPQUF5QixFQUN6QixhQUF3QixFQUN4QixXQUEyQixFQUMzQixTQUFjLEVBQ2QsY0FBc0MsRUFDdEMsRUFBRTtZQUNGLE1BQU0sTUFBTSxHQUFpQyxFQUFFLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7WUFFeEUsSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDWCxPQUFPO2FBQ1I7WUFFRCxJQUFJLENBQUMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFO2dCQUN0QyxPQUFPO2FBQ1I7WUFFRCxFQUFFLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQy9CLE9BQU8sRUFDUCxHQUFxQixFQUFFO2dCQUNyQixPQUFPLEVBQUUsU0FBUyxFQUFFLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztZQUM1RCxDQUFDLEVBQ0QsV0FBVyxFQUNYLFNBQVMsRUFDVCxjQUFjLENBQ2YsQ0FBQztRQUNKLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQztBQWhERCxxQ0FnREMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9Lbm9ja291dEV4dGVuc2lvbnMudHM/MzdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBrbyBmcm9tIFwia25vY2tvdXRcIjtcclxuaW1wb3J0IFZlbG9jaXR5LCB7XHJcbiAgUHJvcGVydGllcyxcclxuICBWZWxvY2l0eUVsZW1lbnRzLFxyXG4gIFZlbG9jaXR5UHJvcGVydHksXHJcbn0gZnJvbSBcInZlbG9jaXR5LWFuaW1hdGVcIjtcclxuaW1wb3J0IHsgQW5pbWF0aW9uLCBBbmltYXRpb25XcmFwcGVyIH0gZnJvbSBcIi4vQW5pbWF0aW9uXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcHBseUV4dGVuc2lvbnMoKSB7XHJcbiAga28uYmluZGluZ0hhbmRsZXJzLmFuaW1hdGUgPSB7XHJcbiAgICB1cGRhdGU6IChlbGVtZW50OiBWZWxvY2l0eUVsZW1lbnRzLCB2YWx1ZUFjY2Vzc29yOiAoKSA9PiBhbnkpID0+IHtcclxuICAgICAgY29uc3QgY3VycmVudENhc3QgPSB2YWx1ZUFjY2Vzc29yKCk7XHJcblxyXG4gICAgICBpZiAoIWN1cnJlbnRDYXN0KSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBrby51dGlscy5hcnJheUZvckVhY2goXHJcbiAgICAgICAgW10uY29uY2F0KGN1cnJlbnRDYXN0LmFuaW1hdGlvbiksXHJcbiAgICAgICAgKGFuaW1hdGlvblN0ZXA6IEFuaW1hdGlvbikgPT4ge1xyXG4gICAgICAgICAgYW5pbWF0aW9uU3RlcC5vcHRpb25zLmVhc2luZyA9IFwibGluZWFyXCI7XHJcbiAgICAgICAgICBWZWxvY2l0eShlbGVtZW50LCBhbmltYXRpb25TdGVwLnByb3BlcnRpZXMsIGFuaW1hdGlvblN0ZXAub3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgfSxcclxuICB9O1xyXG5cclxuICBrby5iaW5kaW5nSGFuZGxlcnMuYW5pbWF0ZUFjdGlvbiA9IHtcclxuICAgIHVwZGF0ZTogKFxyXG4gICAgICBlbGVtZW50OiBWZWxvY2l0eUVsZW1lbnRzLFxyXG4gICAgICB2YWx1ZUFjY2Vzc29yOiAoKSA9PiBhbnksXHJcbiAgICAgIGFsbEJpbmRpbmdzOiBrby5BbGxCaW5kaW5ncyxcclxuICAgICAgdmlld01vZGVsOiBhbnksXHJcbiAgICAgIGJpbmRpbmdDb250ZXh0OiBrby5CaW5kaW5nQ29udGV4dDxhbnk+XHJcbiAgICApID0+IHtcclxuICAgICAgY29uc3QgYWN0aW9uOiBQcm9wZXJ0aWVzPFZlbG9jaXR5UHJvcGVydHk+ID0ga28udW53cmFwKHZhbHVlQWNjZXNzb3IoKSk7XHJcblxyXG4gICAgICBpZiAoIWFjdGlvbikge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFrby5iaW5kaW5nSGFuZGxlcnMuYW5pbWF0ZS51cGRhdGUpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGtvLmJpbmRpbmdIYW5kbGVycy5hbmltYXRlLnVwZGF0ZShcclxuICAgICAgICBlbGVtZW50LFxyXG4gICAgICAgICgpOiBBbmltYXRpb25XcmFwcGVyID0+IHtcclxuICAgICAgICAgIHJldHVybiB7IGFuaW1hdGlvbjogeyBwcm9wZXJ0aWVzOiBhY3Rpb24sIG9wdGlvbnM6IHt9IH0gfTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFsbEJpbmRpbmdzLFxyXG4gICAgICAgIHZpZXdNb2RlbCxcclxuICAgICAgICBiaW5kaW5nQ29udGV4dFxyXG4gICAgICApO1xyXG4gICAgfSxcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///521\n')},893:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nvar LoopState;\r\n(function (LoopState) {\r\n    LoopState[LoopState["Stopped"] = 0] = "Stopped";\r\n    LoopState[LoopState["Paused"] = 1] = "Paused";\r\n    LoopState[LoopState["Running"] = 2] = "Running";\r\n})(LoopState || (LoopState = {}));\r\nclass Loop {\r\n    constructor(name, callback, delay, startDelay = 0) {\r\n        this._loop = (delayOverride) => {\r\n            this._runLoopIteration(delayOverride);\r\n        };\r\n        this._runLoopIteration = (delayOverride) => {\r\n            this._timerStart = new Date().getTime();\r\n            this._timerRemaining =\r\n                delayOverride ||\r\n                    (typeof this._delay === "function" ? this._delay() : this._delay);\r\n            this._timerId = setTimeout(() => {\r\n                if (this._state === LoopState.Running) {\r\n                    this._callback();\r\n                }\r\n                // The callback could have paused/stopped the loop.\r\n                if (this._state === LoopState.Running) {\r\n                    this._runLoopIteration();\r\n                }\r\n            }, this._timerRemaining);\r\n        };\r\n        this._state = LoopState.Stopped;\r\n        this._timerId = -1;\r\n        this._timerRemaining = -1;\r\n        this._timerStart = -1;\r\n        this.pause = () => {\r\n            if (this._state !== LoopState.Running) {\r\n                return;\r\n            }\r\n            this._timerRemaining -= new Date().getTime() - this._timerStart;\r\n            clearTimeout(this._timerStart);\r\n            this._timerStart = -1;\r\n            this._state = LoopState.Paused;\r\n        };\r\n        this.resume = () => {\r\n            if (this._state !== LoopState.Paused) {\r\n                return;\r\n            }\r\n            this._state = LoopState.Running;\r\n            this._loop(this._timerRemaining);\r\n        };\r\n        this.restart = () => {\r\n            this.stop();\r\n            this.start(LoopState.Paused);\r\n        };\r\n        this.start = (initialState = LoopState.Running) => {\r\n            this._state = initialState;\r\n            if (this._startDelay) {\r\n                setTimeout(this._loop, this._startDelay);\r\n            }\r\n            else {\r\n                this._loop();\r\n            }\r\n        };\r\n        this.stop = () => {\r\n            this._timerStart = -1;\r\n            this._timerRemaining = -1;\r\n            clearTimeout(this._timerId);\r\n            this._timerId = -1;\r\n            this._state = LoopState.Stopped;\r\n        };\r\n        this.name = name;\r\n        this._callback = callback;\r\n        this._delay = delay;\r\n        this._startDelay = startDelay;\r\n    }\r\n}\r\nexports["default"] = Loop;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSyxTQUlKO0FBSkQsV0FBSyxTQUFTO0lBQ1osK0NBQVc7SUFDWCw2Q0FBVTtJQUNWLCtDQUFXO0FBQ2IsQ0FBQyxFQUpJLFNBQVMsS0FBVCxTQUFTLFFBSWI7QUFFRCxNQUFxQixJQUFJO0lBNkV2QixZQUNFLElBQVksRUFDWixRQUFvQixFQUNwQixLQUE4QixFQUM5QixhQUFxQixDQUFDO1FBOUVoQixVQUFLLEdBQUcsQ0FBQyxhQUFzQixFQUFFLEVBQUU7WUFDekMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQztRQUVNLHNCQUFpQixHQUFHLENBQUMsYUFBc0IsRUFBRSxFQUFFO1lBQ3JELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUN4QyxJQUFJLENBQUMsZUFBZTtnQkFDbEIsYUFBYTtvQkFDYixDQUFDLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRXBFLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDOUIsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxPQUFPLEVBQUU7b0JBQ3JDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztpQkFDbEI7Z0JBRUQsbURBQW1EO2dCQUNuRCxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFDLE9BQU8sRUFBRTtvQkFDckMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7aUJBQzFCO1lBQ0gsQ0FBQyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUM7UUFHTSxXQUFNLEdBQWMsU0FBUyxDQUFDLE9BQU8sQ0FBQztRQUN0QyxhQUFRLEdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDdEIsb0JBQWUsR0FBVyxDQUFDLENBQUMsQ0FBQztRQUM3QixnQkFBVyxHQUFXLENBQUMsQ0FBQyxDQUFDO1FBR2pDLFVBQUssR0FBRyxHQUFHLEVBQUU7WUFDWCxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFDLE9BQU8sRUFBRTtnQkFDckMsT0FBTzthQUNSO1lBRUQsSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7WUFFaEUsWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMvQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQztRQUNqQyxDQUFDLENBQUM7UUFFRixXQUFNLEdBQUcsR0FBRyxFQUFFO1lBQ1osSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxNQUFNLEVBQUU7Z0JBQ3BDLE9BQU87YUFDUjtZQUVELElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQztZQUNoQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNuQyxDQUFDLENBQUM7UUFFRixZQUFPLEdBQUcsR0FBRyxFQUFFO1lBQ2IsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDO1FBRUYsVUFBSyxHQUFHLENBQUMsZUFBMEIsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ3RELElBQUksQ0FBQyxNQUFNLEdBQUcsWUFBWSxDQUFDO1lBRTNCLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDcEIsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUNkO1FBQ0gsQ0FBQyxDQUFDO1FBRUYsU0FBSSxHQUFHLEdBQUcsRUFBRTtZQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUUxQixZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO1FBQ2xDLENBQUMsQ0FBQztRQVFBLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO1FBQzFCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBQ2hDLENBQUM7Q0FDRjtBQXhGRCwwQkF3RkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9Mb29wLnRzP2Y0OTgiXSwic291cmNlc0NvbnRlbnQiOlsiZW51bSBMb29wU3RhdGUge1xyXG4gIFN0b3BwZWQgPSAwLFxyXG4gIFBhdXNlZCA9IDEsXHJcbiAgUnVubmluZyA9IDIsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb3Age1xyXG4gIHByaXZhdGUgX2NhbGxiYWNrOiAoKSA9PiB2b2lkO1xyXG4gIHByaXZhdGUgX2RlbGF5OiAoKCkgPT4gbnVtYmVyKSB8IG51bWJlcjtcclxuICBwcml2YXRlIF9sb29wID0gKGRlbGF5T3ZlcnJpZGU/OiBudW1iZXIpID0+IHtcclxuICAgIHRoaXMuX3J1bkxvb3BJdGVyYXRpb24oZGVsYXlPdmVycmlkZSk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfcnVuTG9vcEl0ZXJhdGlvbiA9IChkZWxheU92ZXJyaWRlPzogbnVtYmVyKSA9PiB7XHJcbiAgICB0aGlzLl90aW1lclN0YXJ0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICB0aGlzLl90aW1lclJlbWFpbmluZyA9XHJcbiAgICAgIGRlbGF5T3ZlcnJpZGUgfHxcclxuICAgICAgKHR5cGVvZiB0aGlzLl9kZWxheSA9PT0gXCJmdW5jdGlvblwiID8gdGhpcy5fZGVsYXkoKSA6IHRoaXMuX2RlbGF5KTtcclxuXHJcbiAgICB0aGlzLl90aW1lcklkID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gTG9vcFN0YXRlLlJ1bm5pbmcpIHtcclxuICAgICAgICB0aGlzLl9jYWxsYmFjaygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBUaGUgY2FsbGJhY2sgY291bGQgaGF2ZSBwYXVzZWQvc3RvcHBlZCB0aGUgbG9vcC5cclxuICAgICAgaWYgKHRoaXMuX3N0YXRlID09PSBMb29wU3RhdGUuUnVubmluZykge1xyXG4gICAgICAgIHRoaXMuX3J1bkxvb3BJdGVyYXRpb24oKTtcclxuICAgICAgfVxyXG4gICAgfSwgdGhpcy5fdGltZXJSZW1haW5pbmcpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX3N0YXJ0RGVsYXk6IG51bWJlcjtcclxuICBwcml2YXRlIF9zdGF0ZTogTG9vcFN0YXRlID0gTG9vcFN0YXRlLlN0b3BwZWQ7XHJcbiAgcHJpdmF0ZSBfdGltZXJJZDogbnVtYmVyID0gLTE7XHJcbiAgcHJpdmF0ZSBfdGltZXJSZW1haW5pbmc6IG51bWJlciA9IC0xO1xyXG4gIHByaXZhdGUgX3RpbWVyU3RhcnQ6IG51bWJlciA9IC0xO1xyXG5cclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICBpZiAodGhpcy5fc3RhdGUgIT09IExvb3BTdGF0ZS5SdW5uaW5nKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl90aW1lclJlbWFpbmluZyAtPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRoaXMuX3RpbWVyU3RhcnQ7XHJcblxyXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyU3RhcnQpO1xyXG4gICAgdGhpcy5fdGltZXJTdGFydCA9IC0xO1xyXG4gICAgdGhpcy5fc3RhdGUgPSBMb29wU3RhdGUuUGF1c2VkO1xyXG4gIH07XHJcblxyXG4gIHJlc3VtZSA9ICgpID0+IHtcclxuICAgIGlmICh0aGlzLl9zdGF0ZSAhPT0gTG9vcFN0YXRlLlBhdXNlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fc3RhdGUgPSBMb29wU3RhdGUuUnVubmluZztcclxuICAgIHRoaXMuX2xvb3AodGhpcy5fdGltZXJSZW1haW5pbmcpO1xyXG4gIH07XHJcblxyXG4gIHJlc3RhcnQgPSAoKSA9PiB7XHJcbiAgICB0aGlzLnN0b3AoKTtcclxuICAgIHRoaXMuc3RhcnQoTG9vcFN0YXRlLlBhdXNlZCk7XHJcbiAgfTtcclxuXHJcbiAgc3RhcnQgPSAoaW5pdGlhbFN0YXRlOiBMb29wU3RhdGUgPSBMb29wU3RhdGUuUnVubmluZykgPT4ge1xyXG4gICAgdGhpcy5fc3RhdGUgPSBpbml0aWFsU3RhdGU7XHJcblxyXG4gICAgaWYgKHRoaXMuX3N0YXJ0RGVsYXkpIHtcclxuICAgICAgc2V0VGltZW91dCh0aGlzLl9sb29wLCB0aGlzLl9zdGFydERlbGF5KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2xvb3AoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBzdG9wID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fdGltZXJTdGFydCA9IC0xO1xyXG4gICAgdGhpcy5fdGltZXJSZW1haW5pbmcgPSAtMTtcclxuXHJcbiAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZXJJZCk7XHJcbiAgICB0aGlzLl90aW1lcklkID0gLTE7XHJcbiAgICB0aGlzLl9zdGF0ZSA9IExvb3BTdGF0ZS5TdG9wcGVkO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgbmFtZTogc3RyaW5nLFxyXG4gICAgY2FsbGJhY2s6ICgpID0+IHZvaWQsXHJcbiAgICBkZWxheTogKCgpID0+IG51bWJlcikgfCBudW1iZXIsXHJcbiAgICBzdGFydERlbGF5OiBudW1iZXIgPSAwXHJcbiAgKSB7XHJcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgIHRoaXMuX2RlbGF5ID0gZGVsYXk7XHJcbiAgICB0aGlzLl9zdGFydERlbGF5ID0gc3RhcnREZWxheTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///893\n')},7657:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass Loops {\r\n    constructor(...loops) {\r\n        this._loops = new Map();\r\n        this.get = (loopName) => {\r\n            const loop = this._loops.get(loopName);\r\n            if (!loop) {\r\n                throw `Cannot find loop named ${loopName}`;\r\n            }\r\n            return loop;\r\n        };\r\n        this.pause = () => {\r\n            this._loops.forEach((loop) => {\r\n                loop.pause();\r\n            });\r\n        };\r\n        this.resume = () => {\r\n            this._loops.forEach((loop) => {\r\n                loop.resume();\r\n            });\r\n        };\r\n        this.start = () => {\r\n            this._loops.forEach((loop) => {\r\n                loop.start();\r\n            });\r\n        };\r\n        this.stop = () => {\r\n            this._loops.forEach((loop) => {\r\n                loop.stop();\r\n            });\r\n        };\r\n        for (let loop of loops) {\r\n            this._loops.set(loop.name, loop);\r\n        }\r\n    }\r\n}\r\nexports["default"] = Loops;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY1Ny5qcyIsIm1hcHBpbmdzIjoiOztBQUVBLE1BQXFCLEtBQUs7SUFvQ3hCLFlBQVksR0FBRyxLQUFhO1FBbkNwQixXQUFNLEdBQXNCLElBQUksR0FBRyxFQUFFLENBQUM7UUFFOUMsUUFBRyxHQUFHLENBQUMsUUFBZ0IsRUFBUSxFQUFFO1lBQy9CLE1BQU0sSUFBSSxHQUFxQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN6RCxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNULE1BQU0sMEJBQTBCLFFBQVEsRUFBRSxDQUFDO2FBQzVDO1lBRUQsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUM7UUFFRixVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ1gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFVLEVBQUUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2YsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFRixXQUFNLEdBQUcsR0FBRyxFQUFFO1lBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFVLEVBQUUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBRUYsVUFBSyxHQUFHLEdBQUcsRUFBRTtZQUNYLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNmLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBRUYsU0FBSSxHQUFHLEdBQUcsRUFBRTtZQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNkLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBR0EsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEVBQUU7WUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNsQztJQUNILENBQUM7Q0FDRjtBQXpDRCwyQkF5Q0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9Mb29wcy50cz84ZjBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb29wIGZyb20gXCIuL0xvb3BcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb3BzIHtcclxuICBwcml2YXRlIF9sb29wczogTWFwPHN0cmluZywgTG9vcD4gPSBuZXcgTWFwKCk7XHJcblxyXG4gIGdldCA9IChsb29wTmFtZTogc3RyaW5nKTogTG9vcCA9PiB7XHJcbiAgICBjb25zdCBsb29wOiBMb29wIHwgdW5kZWZpbmVkID0gdGhpcy5fbG9vcHMuZ2V0KGxvb3BOYW1lKTtcclxuICAgIGlmICghbG9vcCkge1xyXG4gICAgICB0aHJvdyBgQ2Fubm90IGZpbmQgbG9vcCBuYW1lZCAke2xvb3BOYW1lfWA7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxvb3A7XHJcbiAgfTtcclxuXHJcbiAgcGF1c2UgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9sb29wcy5mb3JFYWNoKChsb29wOiBMb29wKSA9PiB7XHJcbiAgICAgIGxvb3AucGF1c2UoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJlc3VtZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX2xvb3BzLmZvckVhY2goKGxvb3A6IExvb3ApID0+IHtcclxuICAgICAgbG9vcC5yZXN1bWUoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHN0YXJ0ID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fbG9vcHMuZm9yRWFjaCgobG9vcDogTG9vcCkgPT4ge1xyXG4gICAgICBsb29wLnN0YXJ0KCk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBzdG9wID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fbG9vcHMuZm9yRWFjaCgobG9vcDogTG9vcCkgPT4ge1xyXG4gICAgICBsb29wLnN0b3AoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKC4uLmxvb3BzOiBMb29wW10pIHtcclxuICAgIGZvciAobGV0IGxvb3Agb2YgbG9vcHMpIHtcclxuICAgICAgdGhpcy5fbG9vcHMuc2V0KGxvb3AubmFtZSwgbG9vcCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7657\n')},3836:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst Player_1 = __importDefault(__webpack_require__(698));\r\nconst Random_1 = __importDefault(__webpack_require__(3640));\r\nclass Party {\r\n    constructor(members) {\r\n        this.getLivingMembers = () => {\r\n            return this.members.filter((member) => {\r\n                return !member.isDead();\r\n            });\r\n        };\r\n        this.getMemberByIndex = (index) => {\r\n            if (!this.members[index]) {\r\n                throw `Could not get member at index ${index}`;\r\n            }\r\n            return this.members[index];\r\n        };\r\n        this.getOneRandomNpc = () => this.getRandomMembers(1)[0];\r\n        this.getRandomMembers = (amount, allowPlayer, allowDead) => {\r\n            if (amount === 0) {\r\n                return [];\r\n            }\r\n            const clone = allowDead && allowPlayer\r\n                ? Object.assign([], this.members)\r\n                : this.members.filter((member) => {\r\n                    let allowed = true;\r\n                    if (!allowPlayer) {\r\n                        allowed = !(member instanceof Player_1.default);\r\n                    }\r\n                    if (allowed && !allowDead) {\r\n                        allowed = !member.isDead();\r\n                    }\r\n                    return allowed;\r\n                });\r\n            if (amount >= clone.length) {\r\n                return clone;\r\n            }\r\n            const chooseMembersToRemove = amount > clone.length - amount;\r\n            amount = Math.min(amount, clone.length - amount);\r\n            const randomMembers = [];\r\n            for (let i = 0; i < amount; i++) {\r\n                const index = Random_1.default.nonNegativeIntegerUpToNonInclusive(clone.length);\r\n                randomMembers.push(clone.splice(index, 1)[0]);\r\n            }\r\n            return chooseMembersToRemove ? clone : randomMembers;\r\n        };\r\n        this.isWiped = () => this.members.every((member) => member.isDead());\r\n        this.pause = () => {\r\n            this.members.forEach((member) => {\r\n                member.pause();\r\n            });\r\n        };\r\n        this.reset = () => {\r\n            this.members.forEach((member) => {\r\n                member.reset();\r\n            });\r\n        };\r\n        this.resume = () => {\r\n            this.members.forEach((member) => {\r\n                member.resume();\r\n            });\r\n        };\r\n        this.start = () => {\r\n            this.members.forEach((member) => {\r\n                member.start();\r\n            });\r\n        };\r\n        this.stop = () => {\r\n            this.members.forEach((member) => {\r\n                member.stop();\r\n            });\r\n        };\r\n        this.members = members;\r\n    }\r\n}\r\nexports["default"] = Party;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzgzNi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBLDJEQUE4QjtBQUM5Qiw0REFBOEI7QUFFOUIsTUFBcUIsS0FBSztJQTRGeEIsWUFBWSxPQUFtQjtRQTNGL0IscUJBQWdCLEdBQUcsR0FBZSxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7Z0JBQzlDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFRixxQkFBZ0IsR0FBRyxDQUFDLEtBQWEsRUFBWSxFQUFFO1lBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUN4QixNQUFNLGlDQUFpQyxLQUFLLEVBQUUsQ0FBQzthQUNoRDtZQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixDQUFDLENBQUM7UUFFRixvQkFBZSxHQUFHLEdBQWEsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU5RCxxQkFBZ0IsR0FBRyxDQUNqQixNQUFjLEVBQ2QsV0FBcUIsRUFDckIsU0FBbUIsRUFDUCxFQUFFO1lBQ2QsSUFBSSxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUNoQixPQUFPLEVBQUUsQ0FBQzthQUNYO1lBRUQsTUFBTSxLQUFLLEdBQ1QsU0FBUyxJQUFJLFdBQVc7Z0JBQ3RCLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNqQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7b0JBQ3ZDLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQztvQkFFbkIsSUFBSSxDQUFDLFdBQVcsRUFBRTt3QkFDaEIsT0FBTyxHQUFHLENBQUMsQ0FBQyxNQUFNLFlBQVksZ0JBQU0sQ0FBQyxDQUFDO3FCQUN2QztvQkFFRCxJQUFJLE9BQU8sSUFBSSxDQUFDLFNBQVMsRUFBRTt3QkFDekIsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO3FCQUM1QjtvQkFFRCxPQUFPLE9BQU8sQ0FBQztnQkFDakIsQ0FBQyxDQUFDLENBQUM7WUFFVCxJQUFJLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO2dCQUMxQixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsTUFBTSxxQkFBcUIsR0FBRyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDN0QsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUM7WUFFakQsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO1lBQ3pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQy9CLE1BQU0sS0FBSyxHQUFHLGdCQUFNLENBQUMsa0NBQWtDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN0RSxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDL0M7WUFFRCxPQUFPLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQztRQUN2RCxDQUFDLENBQUM7UUFFRixZQUFPLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUcxRSxVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7Z0JBQ3hDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNqQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQztRQUVGLFVBQUssR0FBRyxHQUFHLEVBQUU7WUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQWdCLEVBQUUsRUFBRTtnQkFDeEMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2pCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBRUYsV0FBTSxHQUFHLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBZ0IsRUFBRSxFQUFFO2dCQUN4QyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDbEIsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUM7UUFFRixVQUFLLEdBQUcsR0FBRyxFQUFFO1lBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFnQixFQUFFLEVBQUU7Z0JBQ3hDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNqQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQztRQUVGLFNBQUksR0FBRyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQWdCLEVBQUUsRUFBRTtnQkFDeEMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBR0EsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztDQUNGO0FBL0ZELDJCQStGQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL1BhcnR5LnRzP2QxNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZyaWVuZGx5IGZyb20gXCIuL0ZyaWVuZGx5XCI7XHJcbmltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vUGxheWVyXCI7XHJcbmltcG9ydCBSYW5kb20gZnJvbSBcIi4vUmFuZG9tXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXJ0eSB7XHJcbiAgZ2V0TGl2aW5nTWVtYmVycyA9ICgpOiBGcmllbmRseVtdID0+IHtcclxuICAgIHJldHVybiB0aGlzLm1lbWJlcnMuZmlsdGVyKChtZW1iZXI6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICAgIHJldHVybiAhbWVtYmVyLmlzRGVhZCgpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgZ2V0TWVtYmVyQnlJbmRleCA9IChpbmRleDogbnVtYmVyKTogRnJpZW5kbHkgPT4ge1xyXG4gICAgaWYgKCF0aGlzLm1lbWJlcnNbaW5kZXhdKSB7XHJcbiAgICAgIHRocm93IGBDb3VsZCBub3QgZ2V0IG1lbWJlciBhdCBpbmRleCAke2luZGV4fWA7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMubWVtYmVyc1tpbmRleF07XHJcbiAgfTtcclxuXHJcbiAgZ2V0T25lUmFuZG9tTnBjID0gKCk6IEZyaWVuZGx5ID0+IHRoaXMuZ2V0UmFuZG9tTWVtYmVycygxKVswXTtcclxuXHJcbiAgZ2V0UmFuZG9tTWVtYmVycyA9IChcclxuICAgIGFtb3VudDogbnVtYmVyLFxyXG4gICAgYWxsb3dQbGF5ZXI/OiBib29sZWFuLFxyXG4gICAgYWxsb3dEZWFkPzogYm9vbGVhblxyXG4gICk6IEZyaWVuZGx5W10gPT4ge1xyXG4gICAgaWYgKGFtb3VudCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2xvbmUgPVxyXG4gICAgICBhbGxvd0RlYWQgJiYgYWxsb3dQbGF5ZXJcclxuICAgICAgICA/IE9iamVjdC5hc3NpZ24oW10sIHRoaXMubWVtYmVycylcclxuICAgICAgICA6IHRoaXMubWVtYmVycy5maWx0ZXIoKG1lbWJlcjogRnJpZW5kbHkpID0+IHtcclxuICAgICAgICAgICAgbGV0IGFsbG93ZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgaWYgKCFhbGxvd1BsYXllcikge1xyXG4gICAgICAgICAgICAgIGFsbG93ZWQgPSAhKG1lbWJlciBpbnN0YW5jZW9mIFBsYXllcik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChhbGxvd2VkICYmICFhbGxvd0RlYWQpIHtcclxuICAgICAgICAgICAgICBhbGxvd2VkID0gIW1lbWJlci5pc0RlYWQoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGFsbG93ZWQ7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICBpZiAoYW1vdW50ID49IGNsb25lLmxlbmd0aCkge1xyXG4gICAgICByZXR1cm4gY2xvbmU7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2hvb3NlTWVtYmVyc1RvUmVtb3ZlID0gYW1vdW50ID4gY2xvbmUubGVuZ3RoIC0gYW1vdW50O1xyXG4gICAgYW1vdW50ID0gTWF0aC5taW4oYW1vdW50LCBjbG9uZS5sZW5ndGggLSBhbW91bnQpO1xyXG5cclxuICAgIGNvbnN0IHJhbmRvbU1lbWJlcnMgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYW1vdW50OyBpKyspIHtcclxuICAgICAgY29uc3QgaW5kZXggPSBSYW5kb20ubm9uTmVnYXRpdmVJbnRlZ2VyVXBUb05vbkluY2x1c2l2ZShjbG9uZS5sZW5ndGgpO1xyXG4gICAgICByYW5kb21NZW1iZXJzLnB1c2goY2xvbmUuc3BsaWNlKGluZGV4LCAxKVswXSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGNob29zZU1lbWJlcnNUb1JlbW92ZSA/IGNsb25lIDogcmFuZG9tTWVtYmVycztcclxuICB9O1xyXG5cclxuICBpc1dpcGVkID0gKCkgPT4gdGhpcy5tZW1iZXJzLmV2ZXJ5KChtZW1iZXI6IEZyaWVuZGx5KSA9PiBtZW1iZXIuaXNEZWFkKCkpO1xyXG5cclxuICBtZW1iZXJzOiBGcmllbmRseVtdO1xyXG4gIHBhdXNlID0gKCkgPT4ge1xyXG4gICAgdGhpcy5tZW1iZXJzLmZvckVhY2goKG1lbWJlcjogRnJpZW5kbHkpID0+IHtcclxuICAgICAgbWVtYmVyLnBhdXNlKCk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXNldCA9ICgpID0+IHtcclxuICAgIHRoaXMubWVtYmVycy5mb3JFYWNoKChtZW1iZXI6IEZyaWVuZGx5KSA9PiB7XHJcbiAgICAgIG1lbWJlci5yZXNldCgpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmVzdW1lID0gKCkgPT4ge1xyXG4gICAgdGhpcy5tZW1iZXJzLmZvckVhY2goKG1lbWJlcjogRnJpZW5kbHkpID0+IHtcclxuICAgICAgbWVtYmVyLnJlc3VtZSgpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgc3RhcnQgPSAoKSA9PiB7XHJcbiAgICB0aGlzLm1lbWJlcnMuZm9yRWFjaCgobWVtYmVyOiBGcmllbmRseSkgPT4ge1xyXG4gICAgICBtZW1iZXIuc3RhcnQoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHN0b3AgPSAoKSA9PiB7XHJcbiAgICB0aGlzLm1lbWJlcnMuZm9yRWFjaCgobWVtYmVyOiBGcmllbmRseSkgPT4ge1xyXG4gICAgICBtZW1iZXIuc3RvcCgpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3RydWN0b3IobWVtYmVyczogRnJpZW5kbHlbXSkge1xyXG4gICAgdGhpcy5tZW1iZXJzID0gbWVtYmVycztcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3836\n')},698:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst ActionObservable_1 = __importDefault(__webpack_require__(6491));\r\nconst AnimationHelpers_1 = __importDefault(__webpack_require__(5926));\r\nconst Animations_1 = __importDefault(__webpack_require__(9454));\r\nconst DebuffType_1 = __webpack_require__(1660);\r\nconst Friendly_1 = __importDefault(__webpack_require__(2472));\r\nclass Player extends Friendly_1.default {\r\n    constructor(params, mana, actions) {\r\n        super("Player", params);\r\n        this._adjustMana = (amount) => {\r\n            const currentMana = this.mana();\r\n            const newMana = currentMana + amount;\r\n            if (newMana >= this.maxMana()) {\r\n                this.mana(this.maxMana());\r\n            }\r\n            else if (newMana <= 0) {\r\n                this.mana(0);\r\n            }\r\n            else {\r\n                this.mana(newMana);\r\n            }\r\n        };\r\n        this._cast = (heal) => {\r\n            if (this._isSilenced()) {\r\n                return;\r\n            }\r\n            if (heal.isInstant) {\r\n                this.spendMana(heal.manaCost);\r\n            }\r\n            this.currentCast.action("finish");\r\n            this.currentCast.value(heal);\r\n        };\r\n        this._regenMana = () => {\r\n            const increase = Math.round(this.maxMana() * 0.05);\r\n            this._adjustMana(increase);\r\n            this.regenManaNotifier(true);\r\n        };\r\n        this._queuedAction = null;\r\n        this._onDeath = () => {\r\n            this.stop();\r\n            this.buffs.removeAll();\r\n            this.debuffs.removeAll();\r\n            this.isDead(true);\r\n            this.target(undefined);\r\n        };\r\n        this.cancelCast = () => {\r\n            this._queuedAction = null;\r\n            this.currentCast.action("stop");\r\n            this.currentCast.value(null);\r\n        };\r\n        this.cast = (heal) => {\r\n            if (this._isSilenced()) {\r\n                return;\r\n            }\r\n            const currentCast = this.currentCast.value();\r\n            if (currentCast) {\r\n                if (!currentCast.isInstant && currentCast.castProgress > 0.5) {\r\n                    // If an action is cast while already casting, queue up the action.\r\n                    // It will cast immediately after the current cast completes.\r\n                    this._queuedAction = heal;\r\n                }\r\n                return;\r\n            }\r\n            this._cast(heal);\r\n        };\r\n        this.castQueuedHeal = () => {\r\n            if (this._queuedAction) {\r\n                this._cast(this._queuedAction);\r\n                this._queuedAction = null;\r\n            }\r\n            else {\r\n                this.currentCast.value(null);\r\n            }\r\n        };\r\n        this.critChance = ko.pureComputed(() => 0.1);\r\n        this.currentCast = new ActionObservable_1.default();\r\n        this.getActionByIndex = (index) => {\r\n            return index >= 0 && this.actions().length > index\r\n                ? this.actions()[index]\r\n                : null;\r\n        };\r\n        this.hasFullMana = ko.pureComputed(() => this.mana() >= this.maxMana());\r\n        this.manaPercentageString = ko.pureComputed(() => `${(100.0 * this.mana()) / this.maxMana()}%`);\r\n        this.manaStatusString = ko.pureComputed(() => `${this.mana()} / ${this.maxMana()}`);\r\n        this.regenManaNotifier = ko\r\n            .observable(true)\r\n            .extend({ notify: "always" });\r\n        this.restoreManaToMax = () => {\r\n            this.mana(this.maxMana());\r\n        };\r\n        this.setTarget = (target) => {\r\n            if (!this.isDead()) {\r\n                this.target(target);\r\n            }\r\n        };\r\n        this.spendMana = (amount) => {\r\n            this._adjustMana(0 - amount);\r\n        };\r\n        this.mana = ko.observable(mana);\r\n        this.maxMana = ko.observable(mana);\r\n        this.actions = ko.observableArray(actions);\r\n        this.target = ko.observable();\r\n    }\r\n    _isSilenced() {\r\n        return this.getDebuffsByType(DebuffType_1.DebuffType.Silence).length > 0;\r\n    }\r\n    get regenManaAnimation() {\r\n        const wrapper = { ...Animations_1.default.fullWidth5000 };\r\n        wrapper.animation.options.begin = () => this.regenManaNotifier(true);\r\n        wrapper.animation.options.complete = (elements) => {\r\n            AnimationHelpers_1.default.removeStyleAttribute(elements);\r\n            this._regenMana();\r\n        };\r\n        return wrapper;\r\n    }\r\n}\r\nexports["default"] = Player;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///698\n')},3779:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nclass PreviousValueTracker {\r\n    constructor(initialValue) {\r\n        this.value = ko.observable(initialValue || null);\r\n        this.previous = ko.observable(initialValue || null);\r\n        this.value.subscribe((newValue) => {\r\n            if (newValue !== null) {\r\n                this.previous(newValue);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports["default"] = PreviousValueTracker;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc3OS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0I7QUFFL0IsTUFBcUIsb0JBQW9CO0lBSXZDLFlBQVksWUFBZ0I7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxDQUFDO1FBRXBELElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBa0IsRUFBRSxFQUFFO1lBQzFDLElBQUksUUFBUSxLQUFLLElBQUksRUFBRTtnQkFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUN6QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBZEQsMENBY0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9QcmV2aW91c1ZhbHVlVHJhY2tlci50cz84NWI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGtvIGZyb20gXCJrbm9ja291dFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJldmlvdXNWYWx1ZVRyYWNrZXI8VD4ge1xyXG4gIHByZXZpb3VzOiBrby5PYnNlcnZhYmxlPFQgfCBudWxsPjtcclxuICB2YWx1ZToga28uT2JzZXJ2YWJsZTxUIHwgbnVsbD47XHJcblxyXG4gIGNvbnN0cnVjdG9yKGluaXRpYWxWYWx1ZT86IFQpIHtcclxuICAgIHRoaXMudmFsdWUgPSBrby5vYnNlcnZhYmxlKGluaXRpYWxWYWx1ZSB8fCBudWxsKTtcclxuICAgIHRoaXMucHJldmlvdXMgPSBrby5vYnNlcnZhYmxlKGluaXRpYWxWYWx1ZSB8fCBudWxsKTtcclxuXHJcbiAgICB0aGlzLnZhbHVlLnN1YnNjcmliZSgobmV3VmFsdWU6IFQgfCBudWxsKSA9PiB7XHJcbiAgICAgIGlmIChuZXdWYWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMucHJldmlvdXMobmV3VmFsdWUpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3779\n')},3640:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass Random {\r\n    constructor() {\r\n        this.fromFloatInterval = (min, max) => {\r\n            return (max - min) * Math.random() + min;\r\n        };\r\n        this.fromIntegerIntervalInclusive = (min, max) => {\r\n            return Math.round(Math.random() * (max - min + 1) + min);\r\n        };\r\n        this.nonNegativeIntegerUpToNonInclusive = (max) => {\r\n            return Math.floor(Math.random() * max);\r\n        };\r\n    }\r\n}\r\nexports["default"] = new Random();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY0MC5qcyIsIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sTUFBTTtJQUFaO1FBQ0Usc0JBQWlCLEdBQUcsQ0FBQyxHQUFXLEVBQUUsR0FBVyxFQUFVLEVBQUU7WUFDdkQsT0FBTyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDO1FBQzNDLENBQUMsQ0FBQztRQUVGLGlDQUE0QixHQUFHLENBQUMsR0FBVyxFQUFFLEdBQVcsRUFBVSxFQUFFO1lBQ2xFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQzNELENBQUMsQ0FBQztRQUVGLHVDQUFrQyxHQUFHLENBQUMsR0FBVyxFQUFVLEVBQUU7WUFDM0QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUM7SUFDSixDQUFDO0NBQUE7QUFFRCxxQkFBZSxJQUFJLE1BQU0sRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvUmFuZG9tLnRzPzcwOGQiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUmFuZG9tIHtcclxuICBmcm9tRmxvYXRJbnRlcnZhbCA9IChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIgPT4ge1xyXG4gICAgcmV0dXJuIChtYXggLSBtaW4pICogTWF0aC5yYW5kb20oKSArIG1pbjtcclxuICB9O1xyXG5cclxuICBmcm9tSW50ZWdlckludGVydmFsSW5jbHVzaXZlID0gKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciA9PiB7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICsgbWluKTtcclxuICB9O1xyXG5cclxuICBub25OZWdhdGl2ZUludGVnZXJVcFRvTm9uSW5jbHVzaXZlID0gKG1heDogbnVtYmVyKTogbnVtYmVyID0+IHtcclxuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBtYXgpO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBSYW5kb20oKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3640\n')},1666:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass Reward {\r\n    constructor(healName, bossName) {\r\n        this.healName = healName;\r\n        this.bossName = bossName;\r\n    }\r\n}\r\nexports["default"] = Reward;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2Ni5qcyIsIm1hcHBpbmdzIjoiOztBQUdBLE1BQXFCLE1BQU07SUFJekIsWUFBWSxRQUFvQixFQUFFLFFBQWtCO1FBQ2xELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7Q0FDRjtBQVJELDRCQVFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvUmV3YXJkLnRzP2UzNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uTmFtZSB9IGZyb20gXCIuL0FjdGlvbk5hbWVcIjtcclxuaW1wb3J0IHsgQm9zc05hbWUgfSBmcm9tIFwiLi9Cb3NzZXMvQm9zc05hbWVcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJld2FyZCB7XHJcbiAgaGVhbE5hbWU6IEFjdGlvbk5hbWU7XHJcbiAgYm9zc05hbWU6IEJvc3NOYW1lO1xyXG5cclxuICBjb25zdHJ1Y3RvcihoZWFsTmFtZTogQWN0aW9uTmFtZSwgYm9zc05hbWU6IEJvc3NOYW1lKSB7XHJcbiAgICB0aGlzLmhlYWxOYW1lID0gaGVhbE5hbWU7XHJcbiAgICB0aGlzLmJvc3NOYW1lID0gYm9zc05hbWU7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1666\n')},9225:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst BossName_1 = __webpack_require__(1327);\r\nconst Reward_1 = __importDefault(__webpack_require__(1666));\r\nclass Rewards {\r\n    constructor() {\r\n        this.get = (bossName) => {\r\n            switch (bossName) {\r\n                case BossName_1.BossName.GordoRamzee:\r\n                    return new Reward_1.default(ActionName_1.ActionName.Renew, BossName_1.BossName.DonnyFrump);\r\n                case BossName_1.BossName.DonnyFrump:\r\n                    return new Reward_1.default(ActionName_1.ActionName.MediumHeal, BossName_1.BossName.ElongTusk);\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n}\r\nexports["default"] = new Rewards();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIyNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtDQUEwQztBQUMxQyw2Q0FBNkM7QUFDN0MsNERBQThCO0FBRTlCLE1BQU0sT0FBTztJQUFiO1FBQ0UsUUFBRyxHQUFHLENBQUMsUUFBa0IsRUFBaUIsRUFBRTtZQUMxQyxRQUFRLFFBQVEsRUFBRTtnQkFDaEIsS0FBSyxtQkFBUSxDQUFDLFdBQVc7b0JBQ3ZCLE9BQU8sSUFBSSxnQkFBTSxDQUFDLHVCQUFVLENBQUMsS0FBSyxFQUFFLG1CQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQzNELEtBQUssbUJBQVEsQ0FBQyxVQUFVO29CQUN0QixPQUFPLElBQUksZ0JBQU0sQ0FBQyx1QkFBVSxDQUFDLFVBQVUsRUFBRSxtQkFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ2hFO1lBQ0QsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUM7SUFDSixDQUFDO0NBQUE7QUFFRCxxQkFBZSxJQUFJLE9BQU8sRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHMtcGxlYXNlLy4vdHMvUmV3YXJkcy50cz85OTViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwiLi9BY3Rpb25OYW1lXCI7XHJcbmltcG9ydCB7IEJvc3NOYW1lIH0gZnJvbSBcIi4vQm9zc2VzL0Jvc3NOYW1lXCI7XHJcbmltcG9ydCBSZXdhcmQgZnJvbSBcIi4vUmV3YXJkXCI7XHJcblxyXG5jbGFzcyBSZXdhcmRzIHtcclxuICBnZXQgPSAoYm9zc05hbWU6IEJvc3NOYW1lKTogUmV3YXJkIHwgbnVsbCA9PiB7XHJcbiAgICBzd2l0Y2ggKGJvc3NOYW1lKSB7XHJcbiAgICAgIGNhc2UgQm9zc05hbWUuR29yZG9SYW16ZWU6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBSZXdhcmQoQWN0aW9uTmFtZS5SZW5ldywgQm9zc05hbWUuRG9ubnlGcnVtcCk7XHJcbiAgICAgIGNhc2UgQm9zc05hbWUuRG9ubnlGcnVtcDpcclxuICAgICAgICByZXR1cm4gbmV3IFJld2FyZChBY3Rpb25OYW1lLk1lZGl1bUhlYWwsIEJvc3NOYW1lLkVsb25nVHVzayk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgUmV3YXJkcygpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9225\n')},8062:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst ActionName_1 = __webpack_require__(8470);\r\nconst HealStat_1 = __importDefault(__webpack_require__(6926));\r\nclass Stats {\r\n    constructor() {\r\n        const initialStat = new HealStat_1.default(ActionName_1.ActionName.SmallHeal);\r\n        this._healStats = new Map([[ActionName_1.ActionName.SmallHeal, initialStat]]);\r\n        this.healStats = ko.observableArray([initialStat]);\r\n    }\r\n    reset() {\r\n        this._healStats.forEach((stat) => {\r\n            stat.reset();\r\n        });\r\n    }\r\n    update(healOutcome) {\r\n        let healStat = this._healStats.get(healOutcome.healName);\r\n        if (healStat) {\r\n            healStat.add(healOutcome);\r\n        }\r\n        else {\r\n            healStat = new HealStat_1.default(healOutcome.healName);\r\n            healStat.add(healOutcome);\r\n            this._healStats.set(healOutcome.healName, healStat);\r\n            this.healStats.push(healStat);\r\n        }\r\n    }\r\n}\r\nexports["default"] = new Stats();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODA2Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0I7QUFDL0IsK0NBQTBDO0FBRTFDLDhEQUFrQztBQUVsQyxNQUFNLEtBQUs7SUFLVDtRQUNFLE1BQU0sV0FBVyxHQUFHLElBQUksa0JBQVEsQ0FBQyx1QkFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLHVCQUFVLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFjLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDZixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBd0I7UUFDN0IsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3pELElBQUksUUFBUSxFQUFFO1lBQ1osUUFBUSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUMzQjthQUFNO1lBQ0wsUUFBUSxHQUFHLElBQUksa0JBQVEsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUUxQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQy9CO0lBQ0gsQ0FBQztDQUNGO0FBRUQscUJBQWUsSUFBSSxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWxzLXBsZWFzZS8uL3RzL1N0YXRzLnRzP2U1MjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMga28gZnJvbSBcImtub2Nrb3V0XCI7XHJcbmltcG9ydCB7IEFjdGlvbk5hbWUgfSBmcm9tIFwiLi9BY3Rpb25OYW1lXCI7XHJcbmltcG9ydCBIZWFsT3V0Y29tZSBmcm9tIFwiLi9IZWFsT3V0Y29tZVwiO1xyXG5pbXBvcnQgSGVhbFN0YXQgZnJvbSBcIi4vSGVhbFN0YXRcIjtcclxuXHJcbmNsYXNzIFN0YXRzIHtcclxuICBwcml2YXRlIF9oZWFsU3RhdHM6IE1hcDxBY3Rpb25OYW1lLCBIZWFsU3RhdD47XHJcblxyXG4gIGhlYWxTdGF0czoga28uT2JzZXJ2YWJsZUFycmF5PEhlYWxTdGF0PjtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBjb25zdCBpbml0aWFsU3RhdCA9IG5ldyBIZWFsU3RhdChBY3Rpb25OYW1lLlNtYWxsSGVhbCk7XHJcbiAgICB0aGlzLl9oZWFsU3RhdHMgPSBuZXcgTWFwKFtbQWN0aW9uTmFtZS5TbWFsbEhlYWwsIGluaXRpYWxTdGF0XV0pO1xyXG4gICAgdGhpcy5oZWFsU3RhdHMgPSBrby5vYnNlcnZhYmxlQXJyYXk8SGVhbFN0YXQ+KFtpbml0aWFsU3RhdF0pO1xyXG4gIH1cclxuXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLl9oZWFsU3RhdHMuZm9yRWFjaCgoc3RhdDogSGVhbFN0YXQpID0+IHtcclxuICAgICAgc3RhdC5yZXNldCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoaGVhbE91dGNvbWU6IEhlYWxPdXRjb21lKSB7XHJcbiAgICBsZXQgaGVhbFN0YXQgPSB0aGlzLl9oZWFsU3RhdHMuZ2V0KGhlYWxPdXRjb21lLmhlYWxOYW1lKTtcclxuICAgIGlmIChoZWFsU3RhdCkge1xyXG4gICAgICBoZWFsU3RhdC5hZGQoaGVhbE91dGNvbWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaGVhbFN0YXQgPSBuZXcgSGVhbFN0YXQoaGVhbE91dGNvbWUuaGVhbE5hbWUpO1xyXG4gICAgICBoZWFsU3RhdC5hZGQoaGVhbE91dGNvbWUpO1xyXG5cclxuICAgICAgdGhpcy5faGVhbFN0YXRzLnNldChoZWFsT3V0Y29tZS5oZWFsTmFtZSwgaGVhbFN0YXQpO1xyXG4gICAgICB0aGlzLmhlYWxTdGF0cy5wdXNoKGhlYWxTdGF0KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBTdGF0cygpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8062\n')},6983:(__unused_webpack_module,exports)=>{"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nclass Trigger {\r\n    constructor(callback) {\r\n        this._triggered = false;\r\n        this.execute = (healthPercentage) => {\r\n            if (!this._triggered) {\r\n                this._triggered = this._callback(healthPercentage);\r\n            }\r\n        };\r\n        this._callback = callback;\r\n    }\r\n}\r\nexports["default"] = Trigger;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjk4My5qcyIsIm1hcHBpbmdzIjoiOztBQUFBLE1BQXFCLE9BQU87SUFVMUIsWUFBWSxRQUErQztRQVJuRCxlQUFVLEdBQVksS0FBSyxDQUFDO1FBRXBDLFlBQU8sR0FBRyxDQUFDLGdCQUF3QixFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ3BCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2FBQ3BEO1FBQ0gsQ0FBQyxDQUFDO1FBR0EsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztDQUNGO0FBYkQsNkJBYUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9UcmlnZ2VyLnRzPzhhZTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJpZ2dlciB7XHJcbiAgcHJpdmF0ZSBfY2FsbGJhY2s6IChoZWFsdGhQZXJjZW50YWdlOiBudW1iZXIpID0+IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBfdHJpZ2dlcmVkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIGV4ZWN1dGUgPSAoaGVhbHRoUGVyY2VudGFnZTogbnVtYmVyKSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuX3RyaWdnZXJlZCkge1xyXG4gICAgICB0aGlzLl90cmlnZ2VyZWQgPSB0aGlzLl9jYWxsYmFjayhoZWFsdGhQZXJjZW50YWdlKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdHJ1Y3RvcihjYWxsYmFjazogKGhlYWx0aFBlcmNlbnRhZ2U6IG51bWJlcikgPT4gYm9vbGVhbikge1xyXG4gICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6983\n')},4256:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o["default"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nconst ko = __importStar(__webpack_require__(9687));\r\nconst GameViewModel_1 = __importDefault(__webpack_require__(1232));\r\nconst KnockoutExtensions_1 = __importDefault(__webpack_require__(521));\r\nko.components.register("game", GameViewModel_1.default);\r\n(0, KnockoutExtensions_1.default)();\r\nko.applyBindings(null, document.body);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDI1Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0I7QUFDL0IsbUVBQTRDO0FBQzVDLHVFQUFtRDtBQUVuRCxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsdUJBQWEsQ0FBQyxDQUFDO0FBRTlDLGdDQUFlLEdBQUUsQ0FBQztBQUVsQixFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFscy1wbGVhc2UvLi90cy9hcHAudHM/OWEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBrbyBmcm9tIFwia25vY2tvdXRcIjtcclxuaW1wb3J0IEdhbWVWaWV3TW9kZWwgZnJvbSBcIi4vR2FtZVZpZXdNb2RlbFwiO1xyXG5pbXBvcnQgYXBwbHlFeHRlbnNpb25zIGZyb20gXCIuL0tub2Nrb3V0RXh0ZW5zaW9uc1wiO1xyXG5cclxua28uY29tcG9uZW50cy5yZWdpc3RlcihcImdhbWVcIiwgR2FtZVZpZXdNb2RlbCk7XHJcblxyXG5hcHBseUV4dGVuc2lvbnMoKTtcclxuXHJcbmtvLmFwcGx5QmluZGluZ3MobnVsbCwgZG9jdW1lbnQuYm9keSk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4256\n')},8581:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * velocity-animate (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/**\r\n * Check if a variable is a boolean.\r\n */\nfunction isBoolean(variable) {\n    return variable === true || variable === false;\n}\n/**\r\n * Check if a variable is a function.\r\n */\nfunction isFunction(variable) {\n    return Object.prototype.toString.call(variable) === "[object Function]";\n}\n/**\r\n * Check if a variable is an HTMLElement or SVGElement.\r\n */\nfunction isNode(variable) {\n    return !!(variable && variable.nodeType);\n}\n/**\r\n * Check if a variable is a number.\r\n */\nfunction isNumber(variable) {\n    return typeof variable === "number";\n}\n/**\r\n * Check if a variable is a plain object (and not an instance).\r\n */\nfunction isPlainObject(variable) {\n    if (!variable || (typeof variable === "undefined" ? "undefined" : _typeof(variable)) !== "object" || variable.nodeType || Object.prototype.toString.call(variable) !== "[object Object]") {\n        return false;\n    }\n    var proto = Object.getPrototypeOf(variable);\n    return !proto || proto.hasOwnProperty("constructor") && proto.constructor === Object;\n}\n/**\r\n * Check if a variable is a string.\r\n */\nfunction isString(variable) {\n    return typeof variable === "string";\n}\n/**\r\n * Check if a variable is the result of calling Velocity.\r\n */\nfunction isVelocityResult(variable) {\n    return variable && isNumber(variable.length) && isFunction(variable.velocity);\n}\n/**\r\n * Check if a variable is an array-like wrapped jQuery, Zepto or similar, where\r\n * each indexed value is a Node.\r\n */\nfunction isWrapped(variable) {\n    return variable && variable !== window && isNumber(variable.length) && !isString(variable) && !isFunction(variable) && !isNode(variable) && (variable.length === 0 || isNode(variable[0]));\n}\n/**\r\n * Check is a property is an enumerable member of an object.\r\n */\nfunction propertyIsEnumerable(obj, property) {\n    return Object.prototype.propertyIsEnumerable.call(obj, property);\n}\n\n// Project\n/**\r\n * Add a single className to an Element.\r\n */\nfunction addClass(element, className) {\n    if (element instanceof Element) {\n        if (element.classList) {\n            element.classList.add(className);\n        } else {\n            removeClass(element, className);\n            element.className += (element.className.length ? " " : "") + className;\n        }\n    }\n}\n/**\r\n * Clone an array, works for array-like too.\r\n */\nfunction cloneArray(arrayLike) {\n    return Array.prototype.slice.call(arrayLike, 0);\n}\n/**\r\n * The <strong><code>defineProperty()</code></strong> function provides a\r\n * shortcut to defining a property that cannot be accidentally iterated across.\r\n */\nfunction defineProperty$1(proto, name, value, readonly) {\n    if (proto) {\n        Object.defineProperty(proto, name, {\n            configurable: !readonly,\n            writable: !readonly,\n            value: value\n        });\n    }\n}\n/**\r\n * When there are multiple locations for a value pass them all in, then get the\r\n * first value that is valid.\r\n */\nfunction getValue() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = args[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var arg = _step.value;\n\n            if (arg !== undefined && arg === arg) {\n                return arg;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\n/**\r\n * Shim to get the current milliseconds - on anything except old IE it\'ll use\r\n * Date.now() and save creating an object. If that doesn\'t exist then it\'ll\r\n * create one that gets GC.\r\n */\nvar now = Date.now ? Date.now : function () {\n    return new Date().getTime();\n};\n/**\r\n * Remove a single className from an Element.\r\n */\nfunction removeClass(element, className) {\n    if (element instanceof Element) {\n        if (element.classList) {\n            element.classList.remove(className);\n        } else {\n            // TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?\n            element.className = element.className.replace(new RegExp("(^|\\\\s)" + className + "(\\\\s|$)", "gi"), " ");\n        }\n    }\n}\n\n// Project\n// Constants\nvar Actions = {};\n/**\r\n * Used to register an action. This should never be called by users\r\n * directly, instead it should be called via  an action:<br/>\r\n * <code>Velocity("registerAction", "name", VelocityActionFn);</code>\r\n */\nfunction registerAction(args, internal) {\n    var name = args[0],\n        callback = args[1];\n    if (!isString(name)) {\n        console.warn("VelocityJS: Trying to set \'registerAction\' name to an invalid value:", name);\n    } else if (!isFunction(callback)) {\n        console.warn("VelocityJS: Trying to set \'registerAction\' callback to an invalid value:", name, callback);\n    } else if (Actions[name] && !propertyIsEnumerable(Actions, name)) {\n        console.warn("VelocityJS: Trying to override internal \'registerAction\' callback", name);\n    } else if (internal === true) {\n        defineProperty$1(Actions, name, callback);\n    } else {\n        Actions[name] = callback;\n    }\n}\nregisterAction(["registerAction", registerAction], true);\n\n/**\r\n * Without this it will only un-prefix properties that have a valid "normal"\r\n * version.\r\n */\nvar DURATION_FAST = 200;\nvar DURATION_NORMAL = 400;\nvar DURATION_SLOW = 600;\nvar FUZZY_MS_PER_SECOND = 980;\nvar DEFAULT_CACHE = true;\nvar DEFAULT_DELAY = 0;\nvar DEFAULT_DURATION = DURATION_NORMAL;\nvar DEFAULT_EASING = "swing";\nvar DEFAULT_FPSLIMIT = 60;\nvar DEFAULT_LOOP = 0;\nvar DEFAULT_PROMISE = true;\nvar DEFAULT_PROMISE_REJECT_EMPTY = true;\nvar DEFAULT_QUEUE = "";\nvar DEFAULT_REPEAT = 0;\nvar DEFAULT_SPEED = 1;\nvar DEFAULT_SYNC = true;\nvar CLASSNAME = "velocity-animating";\nvar Duration = {\n  fast: DURATION_FAST,\n  normal: DURATION_NORMAL,\n  slow: DURATION_SLOW\n};\n\n// Project\n// Constants\nvar Easings = {};\n/**\r\n * Used to register a easing. This should never be called by users\r\n * directly, instead it should be called via an action:<br/>\r\n * <code>Velocity("registerEasing", "name", VelocityEasingFn);</code>\r\n */\nfunction registerEasing(args) {\n    var name = args[0],\n        callback = args[1];\n    if (!isString(name)) {\n        console.warn("VelocityJS: Trying to set \'registerEasing\' name to an invalid value:", name);\n    } else if (!isFunction(callback)) {\n        console.warn("VelocityJS: Trying to set \'registerEasing\' callback to an invalid value:", name, callback);\n    } else if (Easings[name]) {\n        console.warn("VelocityJS: Trying to override \'registerEasing\' callback", name);\n    } else {\n        Easings[name] = callback;\n    }\n}\nregisterAction(["registerEasing", registerEasing], true);\n/**\r\n * Linear easing, used for sequence parts that don\'t have an actual easing\r\n * function.\r\n */\nfunction linearEasing(percentComplete, startValue, endValue, property) {\n    return startValue + percentComplete * (endValue - startValue);\n}\n/**\r\n * Swing is the default for jQuery and Velocity.\r\n */\nfunction swingEasing(percentComplete, startValue, endValue) {\n    return startValue + (0.5 - Math.cos(percentComplete * Math.PI) / 2) * (endValue - startValue);\n}\n/**\r\n * A less exaggerated version of easeInOutElastic.\r\n */\nfunction springEasing(percentComplete, startValue, endValue) {\n    return startValue + (1 - Math.cos(percentComplete * 4.5 * Math.PI) * Math.exp(-percentComplete * 6)) * (endValue - startValue);\n}\nregisterEasing(["linear", linearEasing]);\nregisterEasing(["swing", swingEasing]);\nregisterEasing(["spring", springEasing]);\n\n// Project\n/**\r\n * Fix to a range of <code>0 <= num <= 1</code>.\r\n */\nfunction fixRange(num) {\n    return Math.min(Math.max(num, 0), 1);\n}\nfunction A(aA1, aA2) {\n    return 1 - 3 * aA2 + 3 * aA1;\n}\nfunction B(aA1, aA2) {\n    return 3 * aA2 - 6 * aA1;\n}\nfunction C(aA1) {\n    return 3 * aA1;\n}\nfunction calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\nfunction getSlope(aT, aA1, aA2) {\n    return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);\n}\nfunction generateBezier() {\n    var NEWTON_ITERATIONS = 4,\n        NEWTON_MIN_SLOPE = 0.001,\n        SUBDIVISION_PRECISION = 0.0000001,\n        SUBDIVISION_MAX_ITERATIONS = 10,\n        kSplineTableSize = 11,\n        kSampleStepSize = 1 / (kSplineTableSize - 1),\n        float32ArraySupported = "Float32Array" in window;\n    /* Must contain four args. */\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    if (args.length !== 4) {\n        return;\n    }\n    /* Args must be numbers. */\n    for (var i = 0; i < 4; ++i) {\n        if (typeof args[i] !== "number" || isNaN(args[i]) || !isFinite(args[i])) {\n            return;\n        }\n    }\n    /* X values must be in the [0, 1] range. */\n    var mX1 = fixRange(args[0]);\n    var mY1 = args[1];\n    var mX2 = fixRange(args[2]);\n    var mY2 = args[3];\n    var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n    function newtonRaphsonIterate(aX, aGuessT) {\n        for (var _i = 0; _i < NEWTON_ITERATIONS; ++_i) {\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0) {\n                return aGuessT;\n            }\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    }\n    function calcSampleValues() {\n        for (var _i2 = 0; _i2 < kSplineTableSize; ++_i2) {\n            mSampleValues[_i2] = calcBezier(_i2 * kSampleStepSize, mX1, mX2);\n        }\n    }\n    function binarySubdivide(aX, aA, aB) {\n        var currentX = void 0,\n            currentT = void 0,\n            i = 0;\n        do {\n            currentT = aA + (aB - aA) / 2;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    }\n    function getTForX(aX) {\n        var lastSample = kSplineTableSize - 1;\n        var intervalStart = 0,\n            currentSample = 1;\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),\n            guessForT = intervalStart + dist * kSampleStepSize,\n            initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n        }\n    }\n    var precomputed = false;\n    function precompute() {\n        precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) {\n            calcSampleValues();\n        }\n    }\n    var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")",\n        f = function f(percentComplete, startValue, endValue, property) {\n        if (!precomputed) {\n            precompute();\n        }\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        if (mX1 === mY1 && mX2 === mY2) {\n            return startValue + percentComplete * (endValue - startValue);\n        }\n        return startValue + calcBezier(getTForX(percentComplete), mY1, mY2) * (endValue - startValue);\n    };\n    f.getControlPoints = function () {\n        return [{ x: mX1, y: mY1 }, { x: mX2, y: mY2 }];\n    };\n    f.toString = function () {\n        return str;\n    };\n    return f;\n}\n/* Common easings */\nvar easeIn = generateBezier(0.42, 0, 1, 1),\n    easeOut = generateBezier(0, 0, 0.58, 1),\n    easeInOut = generateBezier(0.42, 0, 0.58, 1);\nregisterEasing(["ease", generateBezier(0.25, 0.1, 0.25, 1)]);\nregisterEasing(["easeIn", easeIn]);\nregisterEasing(["ease-in", easeIn]);\nregisterEasing(["easeOut", easeOut]);\nregisterEasing(["ease-out", easeOut]);\nregisterEasing(["easeInOut", easeInOut]);\nregisterEasing(["ease-in-out", easeInOut]);\nregisterEasing(["easeInSine", generateBezier(0.47, 0, 0.745, 0.715)]);\nregisterEasing(["easeOutSine", generateBezier(0.39, 0.575, 0.565, 1)]);\nregisterEasing(["easeInOutSine", generateBezier(0.445, 0.05, 0.55, 0.95)]);\nregisterEasing(["easeInQuad", generateBezier(0.55, 0.085, 0.68, 0.53)]);\nregisterEasing(["easeOutQuad", generateBezier(0.25, 0.46, 0.45, 0.94)]);\nregisterEasing(["easeInOutQuad", generateBezier(0.455, 0.03, 0.515, 0.955)]);\nregisterEasing(["easeInCubic", generateBezier(0.55, 0.055, 0.675, 0.19)]);\nregisterEasing(["easeOutCubic", generateBezier(0.215, 0.61, 0.355, 1)]);\nregisterEasing(["easeInOutCubic", generateBezier(0.645, 0.045, 0.355, 1)]);\nregisterEasing(["easeInQuart", generateBezier(0.895, 0.03, 0.685, 0.22)]);\nregisterEasing(["easeOutQuart", generateBezier(0.165, 0.84, 0.44, 1)]);\nregisterEasing(["easeInOutQuart", generateBezier(0.77, 0, 0.175, 1)]);\nregisterEasing(["easeInQuint", generateBezier(0.755, 0.05, 0.855, 0.06)]);\nregisterEasing(["easeOutQuint", generateBezier(0.23, 1, 0.32, 1)]);\nregisterEasing(["easeInOutQuint", generateBezier(0.86, 0, 0.07, 1)]);\nregisterEasing(["easeInExpo", generateBezier(0.95, 0.05, 0.795, 0.035)]);\nregisterEasing(["easeOutExpo", generateBezier(0.19, 1, 0.22, 1)]);\nregisterEasing(["easeInOutExpo", generateBezier(1, 0, 0, 1)]);\nregisterEasing(["easeInCirc", generateBezier(0.6, 0.04, 0.98, 0.335)]);\nregisterEasing(["easeOutCirc", generateBezier(0.075, 0.82, 0.165, 1)]);\nregisterEasing(["easeInOutCirc", generateBezier(0.785, 0.135, 0.15, 0.86)]);\n\n/* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\r\n then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\nfunction springAccelerationForState(state) {\n    return -state.tension * state.x - state.friction * state.v;\n}\nfunction springEvaluateStateWithDerivative(initialState, dt, derivative) {\n    var state = {\n        x: initialState.x + derivative.dx * dt,\n        v: initialState.v + derivative.dv * dt,\n        tension: initialState.tension,\n        friction: initialState.friction\n    };\n    return {\n        dx: state.v,\n        dv: springAccelerationForState(state)\n    };\n}\nfunction springIntegrateState(state, dt) {\n    var a = {\n        dx: state.v,\n        dv: springAccelerationForState(state)\n    },\n        b = springEvaluateStateWithDerivative(state, dt * 0.5, a),\n        c = springEvaluateStateWithDerivative(state, dt * 0.5, b),\n        d = springEvaluateStateWithDerivative(state, dt, c),\n        dxdt = 1 / 6 * (a.dx + 2 * (b.dx + c.dx) + d.dx),\n        dvdt = 1 / 6 * (a.dv + 2 * (b.dv + c.dv) + d.dv);\n    state.x = state.x + dxdt * dt;\n    state.v = state.v + dvdt * dt;\n    return state;\n}\nfunction generateSpringRK4(tension, friction, duration) {\n    var initState = {\n        x: -1,\n        v: 0,\n        tension: parseFloat(tension) || 500,\n        friction: parseFloat(friction) || 20\n    },\n        path = [0],\n        tolerance = 1 / 10000,\n        DT = 16 / 1000,\n        haveDuration = duration != null; // deliberate "==", as undefined == null != 0\n    var timeLapsed = 0,\n        dt = void 0,\n        lastState = void 0;\n    /* Calculate the actual time it takes for this animation to complete with the provided conditions. */\n    if (haveDuration) {\n        /* Run the simulation without a duration. */\n        timeLapsed = generateSpringRK4(initState.tension, initState.friction);\n        /* Compute the adjusted time delta. */\n        dt = timeLapsed / duration * DT;\n    } else {\n        dt = DT;\n    }\n    while (true) {\n        /* Next/step function .*/\n        lastState = springIntegrateState(lastState || initState, dt);\n        /* Store the position. */\n        path.push(1 + lastState.x);\n        timeLapsed += 16;\n        /* If the change threshold is reached, break. */\n        if (!(Math.abs(lastState.x) > tolerance && Math.abs(lastState.v) > tolerance)) {\n            break;\n        }\n    }\n    /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\r\n     computed path and returns a snapshot of the position according to a given percentComplete. */\n    return !haveDuration ? timeLapsed : function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return startValue + path[Math.floor(percentComplete * (path.length - 1))] * (endValue - startValue);\n    };\n}\n\n// Constants\nvar cache = {};\nfunction generateStep(steps) {\n    var fn = cache[steps];\n    if (fn) {\n        return fn;\n    }\n    return cache[steps] = function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return startValue + Math.round(percentComplete * steps) * (1 / steps) * (endValue - startValue);\n    };\n}\n\n// Project\n/**\r\n * Parse a duration value and return an ms number. Optionally return a\r\n * default value if the number is not valid.\r\n */\nfunction parseDuration(duration, def) {\n    if (isNumber(duration)) {\n        return duration;\n    }\n    if (isString(duration)) {\n        return Duration[duration.toLowerCase()] || parseFloat(duration.replace("ms", "").replace("s", "000"));\n    }\n    return def == null ? undefined : parseDuration(def);\n}\n/**\r\n * Validate a <code>cache</code> option.\r\n */\nfunction validateCache(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'cache\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>begin</code> option.\r\n */\nfunction validateBegin(value) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'begin\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>complete</code> option.\r\n */\nfunction validateComplete(value, noError) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null && !noError) {\n        console.warn("VelocityJS: Trying to set \'complete\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>delay</code> option.\r\n */\nfunction validateDelay(value) {\n    var parsed = parseDuration(value);\n    if (!isNaN(parsed)) {\n        return parsed;\n    }\n    if (value != null) {\n        console.error("VelocityJS: Trying to set \'delay\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>duration</code> option.\r\n */\nfunction validateDuration(value, noError) {\n    var parsed = parseDuration(value);\n    if (!isNaN(parsed) && parsed >= 0) {\n        return parsed;\n    }\n    if (value != null && !noError) {\n        console.error("VelocityJS: Trying to set \'duration\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>easing</code> option.\r\n */\nfunction validateEasing(value, duration, noError) {\n    if (isString(value)) {\n        // Named easing\n        return Easings[value];\n    }\n    if (isFunction(value)) {\n        return value;\n    }\n    // TODO: We should only do these if the correct function exists - don\'t force loading.\n    if (Array.isArray(value)) {\n        if (value.length === 1) {\n            // Steps\n            return generateStep(value[0]);\n        }\n        if (value.length === 2) {\n            // springRK4 must be passed the animation\'s duration.\n            // Note: If the springRK4 array contains non-numbers,\n            // generateSpringRK4() returns an easing function generated with\n            // default tension and friction values.\n            return generateSpringRK4(value[0], value[1], duration);\n        }\n        if (value.length === 4) {\n            // Note: If the bezier array contains non-numbers, generateBezier()\n            // returns undefined.\n            return generateBezier.apply(null, value) || false;\n        }\n    }\n    if (value != null && !noError) {\n        console.error("VelocityJS: Trying to set \'easing\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>fpsLimit</code> option.\r\n */\nfunction validateFpsLimit(value) {\n    if (value === false) {\n        return 0;\n    } else {\n        var parsed = parseInt(value, 10);\n        if (!isNaN(parsed) && parsed >= 0) {\n            return Math.min(parsed, 60);\n        }\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'fpsLimit\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>loop</code> option.\r\n */\nfunction validateLoop(value) {\n    switch (value) {\n        case false:\n            return 0;\n        case true:\n            return true;\n        default:\n            var parsed = parseInt(value, 10);\n            if (!isNaN(parsed) && parsed >= 0) {\n                return parsed;\n            }\n            break;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'loop\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>progress</code> option.\r\n */\nfunction validateProgress(value) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'progress\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>promise</code> option.\r\n */\nfunction validatePromise(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'promise\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>promiseRejectEmpty</code> option.\r\n */\nfunction validatePromiseRejectEmpty(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'promiseRejectEmpty\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>queue</code> option.\r\n */\nfunction validateQueue(value, noError) {\n    if (value === false || isString(value)) {\n        return value;\n    }\n    if (value != null && !noError) {\n        console.warn("VelocityJS: Trying to set \'queue\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>repeat</code> option.\r\n */\nfunction validateRepeat(value) {\n    switch (value) {\n        case false:\n            return 0;\n        case true:\n            return true;\n        default:\n            var parsed = parseInt(value, 10);\n            if (!isNaN(parsed) && parsed >= 0) {\n                return parsed;\n            }\n            break;\n    }\n    if (value != null) {\n        console.warn("VelocityJS: Trying to set \'repeat\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>speed</code> option.\r\n */\nfunction validateSpeed(value) {\n    if (isNumber(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.error("VelocityJS: Trying to set \'speed\' to an invalid value:", value);\n    }\n}\n/**\r\n * Validate a <code>sync</code> option.\r\n */\nfunction validateSync(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.error("VelocityJS: Trying to set \'sync\' to an invalid value:", value);\n    }\n}\n\n// Project\n// NOTE: Add the variable here, then add the default state in "reset" below.\nvar cache$1 = void 0,\n    begin = void 0,\n    complete = void 0,\n    delay = void 0,\n    duration = void 0,\n    easing = void 0,\n    fpsLimit = void 0,\n    loop = void 0,\n    mobileHA = void 0,\n    minFrameTime = void 0,\n    promise = void 0,\n    promiseRejectEmpty = void 0,\n    queue = void 0,\n    repeat = void 0,\n    speed = void 0,\n    sync = void 0;\nvar defaults$1 = function () {\n    function defaults$$1() {\n        classCallCheck(this, defaults$$1);\n    }\n\n    createClass(defaults$$1, null, [{\n        key: "reset",\n        value: function reset() {\n            cache$1 = DEFAULT_CACHE;\n            begin = undefined;\n            complete = undefined;\n            delay = DEFAULT_DELAY;\n            duration = DEFAULT_DURATION;\n            easing = validateEasing(DEFAULT_EASING, DEFAULT_DURATION);\n            fpsLimit = DEFAULT_FPSLIMIT;\n            loop = DEFAULT_LOOP;\n            minFrameTime = FUZZY_MS_PER_SECOND / DEFAULT_FPSLIMIT;\n            promise = DEFAULT_PROMISE;\n            promiseRejectEmpty = DEFAULT_PROMISE_REJECT_EMPTY;\n            queue = DEFAULT_QUEUE;\n            repeat = DEFAULT_REPEAT;\n            speed = DEFAULT_SPEED;\n            sync = DEFAULT_SYNC;\n        }\n    }, {\n        key: "cache",\n        get: function get$$1() {\n            return cache$1;\n        },\n        set: function set$$1(value) {\n            value = validateCache(value);\n            if (value !== undefined) {\n                cache$1 = value;\n            }\n        }\n    }, {\n        key: "begin",\n        get: function get$$1() {\n            return begin;\n        },\n        set: function set$$1(value) {\n            value = validateBegin(value);\n            if (value !== undefined) {\n                begin = value;\n            }\n        }\n    }, {\n        key: "complete",\n        get: function get$$1() {\n            return complete;\n        },\n        set: function set$$1(value) {\n            value = validateComplete(value);\n            if (value !== undefined) {\n                complete = value;\n            }\n        }\n    }, {\n        key: "delay",\n        get: function get$$1() {\n            return delay;\n        },\n        set: function set$$1(value) {\n            value = validateDelay(value);\n            if (value !== undefined) {\n                delay = value;\n            }\n        }\n    }, {\n        key: "duration",\n        get: function get$$1() {\n            return duration;\n        },\n        set: function set$$1(value) {\n            value = validateDuration(value);\n            if (value !== undefined) {\n                duration = value;\n            }\n        }\n    }, {\n        key: "easing",\n        get: function get$$1() {\n            return easing;\n        },\n        set: function set$$1(value) {\n            value = validateEasing(value, duration);\n            if (value !== undefined) {\n                easing = value;\n            }\n        }\n    }, {\n        key: "fpsLimit",\n        get: function get$$1() {\n            return fpsLimit;\n        },\n        set: function set$$1(value) {\n            value = validateFpsLimit(value);\n            if (value !== undefined) {\n                fpsLimit = value;\n                minFrameTime = FUZZY_MS_PER_SECOND / value;\n            }\n        }\n    }, {\n        key: "loop",\n        get: function get$$1() {\n            return loop;\n        },\n        set: function set$$1(value) {\n            value = validateLoop(value);\n            if (value !== undefined) {\n                loop = value;\n            }\n        }\n    }, {\n        key: "mobileHA",\n        get: function get$$1() {\n            return mobileHA;\n        },\n        set: function set$$1(value) {\n            if (isBoolean(value)) {\n                mobileHA = value;\n            }\n        }\n    }, {\n        key: "minFrameTime",\n        get: function get$$1() {\n            return minFrameTime;\n        }\n    }, {\n        key: "promise",\n        get: function get$$1() {\n            return promise;\n        },\n        set: function set$$1(value) {\n            value = validatePromise(value);\n            if (value !== undefined) {\n                promise = value;\n            }\n        }\n    }, {\n        key: "promiseRejectEmpty",\n        get: function get$$1() {\n            return promiseRejectEmpty;\n        },\n        set: function set$$1(value) {\n            value = validatePromiseRejectEmpty(value);\n            if (value !== undefined) {\n                promiseRejectEmpty = value;\n            }\n        }\n    }, {\n        key: "queue",\n        get: function get$$1() {\n            return queue;\n        },\n        set: function set$$1(value) {\n            value = validateQueue(value);\n            if (value !== undefined) {\n                queue = value;\n            }\n        }\n    }, {\n        key: "repeat",\n        get: function get$$1() {\n            return repeat;\n        },\n        set: function set$$1(value) {\n            value = validateRepeat(value);\n            if (value !== undefined) {\n                repeat = value;\n            }\n        }\n    }, {\n        key: "repeatAgain",\n        get: function get$$1() {\n            return repeat;\n        }\n    }, {\n        key: "speed",\n        get: function get$$1() {\n            return speed;\n        },\n        set: function set$$1(value) {\n            value = validateSpeed(value);\n            if (value !== undefined) {\n                speed = value;\n            }\n        }\n    }, {\n        key: "sync",\n        get: function get$$1() {\n            return sync;\n        },\n        set: function set$$1(value) {\n            value = validateSync(value);\n            if (value !== undefined) {\n                sync = value;\n            }\n        }\n    }]);\n    return defaults$$1;\n}();\nObject.freeze(defaults$1);\n// Reset to our default values, currently everything is undefined.\ndefaults$1.reset();\n\n/**\r\n * The highest type index for finding the best normalization for a property.\r\n */\n/**\r\n * Unlike "actions", normalizations can always be replaced by users.\r\n */\nvar Normalizations = [];\n/**\r\n * Store a cross-reference to units to be added to specific normalization\r\n * functions if the user supplies a unit-less number.\r\n *\r\n * This is pretty much confined to adding "px" to several css properties.\r\n */\nvar NormalizationUnits = {};\n/**\r\n * Any normalisations that should never be cached are listed here.\r\n * Faster than an array - https://jsperf.com/array-includes-and-find-methods-vs-set-has\r\n */\nvar NoCacheNormalizations = new Set();\n/**\r\n * An array of classes used for the per-class normalizations. This\r\n * translates into a bitwise enum for quick cross-reference, and so that\r\n * the element doesn\'t need multiple <code>instanceof</code> calls every\r\n * frame.\r\n */\nvar constructors = [];\n/**\r\n * A cache of the various constructors we\'ve found and mapping to their real\r\n * name - saves expensive lookups.\r\n */\nvar constructorCache = new Map();\n\n// Project\n// Constants\nvar dataName = "velocityData";\n/**\r\n * Get (and create) the internal data store for an element.\r\n */\nfunction Data(element) {\n    // Use a string member so Uglify doesn\'t mangle it.\n    var data = element[dataName];\n    if (data) {\n        return data;\n    }\n    var window = element.ownerDocument.defaultView;\n    var types = 0;\n    for (var index = 0; index < constructors.length; index++) {\n        var _constructor = constructors[index];\n        if (isString(_constructor)) {\n            if (element instanceof window[_constructor]) {\n                types |= 1 << index; // tslint:disable-line:no-bitwise\n            }\n        } else if (element instanceof _constructor) {\n            types |= 1 << index; // tslint:disable-line:no-bitwise\n        }\n    }\n    // Use an intermediate object so it errors on incorrect data.\n    var newData = {\n        types: types,\n        count: 0,\n        computedStyle: null,\n        cache: {},\n        queueList: {},\n        lastAnimationList: {},\n        lastFinishList: {},\n        window: window\n    };\n    Object.defineProperty(element, dataName, {\n        value: newData\n    });\n    return newData;\n}\n\n// Constants\nvar isClient = window && window === window.window,\n    windowScrollAnchor = isClient && window.pageYOffset !== undefined;\nvar State = {\n    isClient: isClient,\n    isMobile: isClient && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n    isGingerbread: isClient && /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n    prefixElement: isClient && document.createElement("div"),\n    windowScrollAnchor: windowScrollAnchor,\n    scrollAnchor: windowScrollAnchor ? window : !isClient || document.documentElement || document.body.parentNode || document.body,\n    scrollPropertyLeft: windowScrollAnchor ? "pageXOffset" : "scrollLeft",\n    scrollPropertyTop: windowScrollAnchor ? "pageYOffset" : "scrollTop",\n    className: CLASSNAME,\n    isTicking: false,\n    first: undefined,\n    last: undefined,\n    firstNew: undefined\n};\n\n// Project\n/**\r\n * Simple queue management. Un-named queue is directly within the element data,\r\n * named queue is within an object within it.\r\n */\nfunction animate(animation) {\n    var prev = State.last;\n    animation._prev = prev;\n    animation._next = undefined;\n    if (prev) {\n        prev._next = animation;\n    } else {\n        State.first = animation;\n    }\n    State.last = animation;\n    if (!State.firstNew) {\n        State.firstNew = animation;\n    }\n    var element = animation.element,\n        data = Data(element);\n    if (!data.count++) {\n        ////////////////////////\n        // Feature: Classname //\n        ////////////////////////\n        addClass(element, State.className);\n    }\n}\n/**\r\n * Add an item to an animation queue.\r\n */\nfunction queue$1(element, animation, queueName) {\n    var data = Data(element);\n    if (queueName !== false) {\n        // Store the last animation added so we can use it for the\n        // beginning of the next one.\n        data.lastAnimationList[queueName] = animation;\n    }\n    if (queueName === false) {\n        animate(animation);\n    } else {\n        if (!isString(queueName)) {\n            queueName = "";\n        }\n        var last = data.queueList[queueName];\n        if (!last) {\n            if (last === null) {\n                data.queueList[queueName] = animation;\n            } else {\n                data.queueList[queueName] = null;\n                animate(animation);\n            }\n        } else {\n            while (last._next) {\n                last = last._next;\n            }\n            last._next = animation;\n            animation._prev = last;\n        }\n    }\n}\n/**\r\n * Start the next animation on this element\'s queue (named or default).\r\n *\r\n * @returns the next animation that is starting.\r\n */\nfunction dequeue(element, queueName, skip) {\n    if (queueName !== false) {\n        if (!isString(queueName)) {\n            queueName = "";\n        }\n        var data = Data(element),\n            animation = data.queueList[queueName];\n        if (animation) {\n            data.queueList[queueName] = animation._next || null;\n            if (!skip) {\n                animate(animation);\n            }\n        } else if (animation === null) {\n            delete data.queueList[queueName];\n        }\n        return animation;\n    }\n}\n/**\r\n * Remove an animation from the active animation list. If it has a queue set\r\n * then remember it as the last animation for that queue, and free the one\r\n * that was previously there. If the animation list is completely empty then\r\n * mark us as finished.\r\n */\nfunction freeAnimationCall(animation) {\n    var next = animation._next,\n        prev = animation._prev,\n        queueName = animation.queue == null ? animation.options.queue : animation.queue;\n    if (State.firstNew === animation) {\n        State.firstNew = next;\n    }\n    if (State.first === animation) {\n        State.first = next;\n    } else if (prev) {\n        prev._next = next;\n    }\n    if (State.last === animation) {\n        State.last = prev;\n    } else if (next) {\n        next._prev = prev;\n    }\n    if (queueName) {\n        var data = Data(animation.element);\n        if (data) {\n            animation._next = animation._prev = undefined;\n        }\n    }\n}\n\nvar SequencesObject = {};\n\n// Project\n/**\r\n * Call the complete method of an animation in a separate function so it can\r\n * benefit from JIT compiling while still having a try/catch block.\r\n */\nfunction callComplete(activeCall) {\n    var callback = activeCall.complete || activeCall.options.complete;\n    if (callback) {\n        try {\n            var elements = activeCall.elements;\n            callback.call(elements, elements, activeCall);\n        } catch (error) {\n            setTimeout(function () {\n                throw error;\n            }, 1);\n        }\n    }\n}\n/**\r\n * Complete an animation. This might involve restarting (for loop or repeat\r\n * options). Once it is finished we also check for any callbacks or Promises\r\n * that need updating.\r\n */\nfunction completeCall(activeCall) {\n    // TODO: Check if it\'s not been completed already\n    var options = activeCall.options,\n        queue = getValue(activeCall.queue, options.queue),\n        isLoop = getValue(activeCall.loop, options.loop, defaults$1.loop),\n        isRepeat = getValue(activeCall.repeat, options.repeat, defaults$1.repeat),\n        isStopped = activeCall._flags & 8 /* STOPPED */; // tslint:disable-line:no-bitwise\n    if (!isStopped && (isLoop || isRepeat)) {\n        ////////////////////\n        // Option: Loop   //\n        // Option: Repeat //\n        ////////////////////\n        if (isRepeat && isRepeat !== true) {\n            activeCall.repeat = isRepeat - 1;\n        } else if (isLoop && isLoop !== true) {\n            activeCall.loop = isLoop - 1;\n            activeCall.repeat = getValue(activeCall.repeatAgain, options.repeatAgain, defaults$1.repeatAgain);\n        }\n        if (isLoop) {\n            activeCall._flags ^= 64 /* REVERSE */; // tslint:disable-line:no-bitwise\n        }\n        if (queue !== false) {\n            // Can\'t be called when stopped so no need for an extra check.\n            Data(activeCall.element).lastFinishList[queue] = activeCall.timeStart + getValue(activeCall.duration, options.duration, defaults$1.duration);\n        }\n        activeCall.timeStart = activeCall.ellapsedTime = activeCall.percentComplete = 0;\n        activeCall._flags &= ~4 /* STARTED */; // tslint:disable-line:no-bitwise\n    } else {\n        var element = activeCall.element,\n            data = Data(element);\n        if (! --data.count && !isStopped) {\n            ////////////////////////\n            // Feature: Classname //\n            ////////////////////////\n            removeClass(element, State.className);\n        }\n        //////////////////////\n        // Option: Complete //\n        //////////////////////\n        // If this is the last animation in this list then we can check for\n        // and complete calls or Promises.\n        // TODO: When deleting an element we need to adjust these values.\n        if (options && ++options._completed === options._total) {\n            if (!isStopped && options.complete) {\n                // We don\'t call the complete if the animation is stopped,\n                // and we clear the key to prevent it being called again.\n                callComplete(activeCall);\n                options.complete = null;\n            }\n            var resolver = options._resolver;\n            if (resolver) {\n                // Fulfil the Promise\n                resolver(activeCall.elements);\n                delete options._resolver;\n            }\n        }\n        ///////////////////\n        // Option: Queue //\n        ///////////////////\n        if (queue !== false) {\n            // We only do clever things with queues...\n            if (!isStopped) {\n                // If we\'re not stopping an animation, we need to remember\n                // what time it finished so that the next animation in\n                // sequence gets the correct start time.\n                data.lastFinishList[queue] = activeCall.timeStart + getValue(activeCall.duration, options.duration, defaults$1.duration);\n            }\n            // Start the next animation in sequence, or delete the queue if\n            // this was the last one.\n            dequeue(element, queue);\n        }\n        // Cleanup any pointers, and remember the last animation etc.\n        freeAnimationCall(activeCall);\n    }\n}\n\n// Project\n/**\r\n * Used to register a normalization. This should never be called by users\r\n * directly, instead it should be called via an action:<br/>\r\n * <code>Velocity("registerNormalization", "Element", "name", VelocityNormalizationsFn[, false]);</code>\r\n *\r\n * The second argument is the class of the animatable object. If this is passed\r\n * as a class name (ie, `"Element"` -> `window["Element"]`) then this will work\r\n * cross-iframe. If passed as an actual class (ie `Element`) then it will\r\n * attempt to find the class on the window and use that name instead. If it\r\n * can\'t find it then it will use the class passed, which allows for custom\r\n * animation targets, but will not work cross-iframe boundary.\r\n *\r\n * The fourth argument can be an explicit <code>false</code>, which prevents\r\n * the property from being cached. Please note that this can be dangerous\r\n * for performance!\r\n */\nfunction registerNormalization(args) {\n    var constructor = args[0],\n        name = args[1],\n        callback = args[2];\n    if (isString(constructor) && !(window[constructor] instanceof Object) || !isString(constructor) && !(constructor instanceof Object)) {\n        console.warn("VelocityJS: Trying to set \'registerNormalization\' constructor to an invalid value:", constructor);\n    } else if (!isString(name)) {\n        console.warn("VelocityJS: Trying to set \'registerNormalization\' name to an invalid value:", name);\n    } else if (!isFunction(callback)) {\n        console.warn("VelocityJS: Trying to set \'registerNormalization\' callback to an invalid value:", name, callback);\n    } else {\n        var index = constructors.indexOf(constructor),\n            nextArg = 3;\n        if (index < 0 && !isString(constructor)) {\n            if (constructorCache.has(constructor)) {\n                index = constructors.indexOf(constructorCache.get(constructor));\n            } else {\n                for (var property in window) {\n                    if (window[property] === constructor) {\n                        index = constructors.indexOf(property);\n                        if (index < 0) {\n                            index = constructors.push(property) - 1;\n                            Normalizations[index] = {};\n                            constructorCache.set(constructor, property);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        if (index < 0) {\n            index = constructors.push(constructor) - 1;\n            Normalizations[index] = {};\n        }\n        Normalizations[index][name] = callback;\n        if (isString(args[nextArg])) {\n            var unit = args[nextArg++];\n            var units = NormalizationUnits[unit];\n            if (!units) {\n                units = NormalizationUnits[unit] = [];\n            }\n            units.push(callback);\n        }\n        if (args[nextArg] === false) {\n            NoCacheNormalizations.add(name);\n        }\n    }\n}\n/**\r\n * Used to check if a normalisation exists on a specific class.\r\n */\nfunction hasNormalization(args) {\n    var constructor = args[0],\n        name = args[1];\n    var index = constructors.indexOf(constructor);\n    if (index < 0 && !isString(constructor)) {\n        if (constructorCache.has(constructor)) {\n            index = constructors.indexOf(constructorCache.get(constructor));\n        } else {\n            for (var property in window) {\n                if (window[property] === constructor) {\n                    index = constructors.indexOf(property);\n                    break;\n                }\n            }\n        }\n    }\n    return index >= 0 && Normalizations[index].hasOwnProperty(name);\n}\n/**\r\n * Get the unit to add to a unitless number based on the normalization used.\r\n */\nfunction getNormalizationUnit(fn) {\n    for (var unit in NormalizationUnits) {\n        if (NormalizationUnits[unit].includes(fn)) {\n            return unit;\n        }\n    }\n    return "";\n}\n/**\r\n * Get the normalization for an element and propertyName combination. This\r\n * value should be cached at asking time, as it may change if the user adds\r\n * more normalizations.\r\n */\nfunction getNormalization(element, propertyName) {\n    var data = Data(element);\n    var fn = void 0;\n    for (var index = constructors.length - 1, types = data.types; !fn && index >= 0; index--) {\n        if (types & 1 << index) {\n            // tslint:disable-line:no-bitwise\n            fn = Normalizations[index][propertyName];\n        }\n    }\n    return fn;\n}\nregisterAction(["registerNormalization", registerNormalization]);\nregisterAction(["hasNormalization", hasNormalization]);\n\n// Project\n/**\r\n * The singular setPropertyValue, which routes the logic for all\r\n * normalizations.\r\n */\nfunction setPropertyValue(element, propertyName, propertyValue, fn) {\n    var noCache = NoCacheNormalizations.has(propertyName),\n        data = !noCache && Data(element);\n    if (noCache || data && data.cache[propertyName] !== propertyValue) {\n        // By setting it to undefined we force a true "get" later\n        if (!noCache) {\n            data.cache[propertyName] = propertyValue || undefined;\n        }\n        fn = fn || getNormalization(element, propertyName);\n        if (fn) {\n            fn(element, propertyValue);\n        }\n        if (Velocity$$1.debug >= 2) {\n            console.info("Set \\"" + propertyName + "\\": \\"" + propertyValue + "\\"", element);\n        }\n    }\n}\n\n/**\r\n * Remove nested `calc(0px + *)` or `calc(* + (0px + *))` correctly.\r\n */\nfunction removeNestedCalc(value) {\n    if (value.indexOf("calc(") >= 0) {\n        var tokens = value.split(/([\\(\\)])/);\n        var depth = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            switch (token) {\n                case "(":\n                    depth++;\n                    break;\n                case ")":\n                    depth--;\n                    break;\n                default:\n                    if (depth && token[0] === "0") {\n                        tokens[i] = token.replace(/^0[a-z%]+ \\+ /, "");\n                    }\n                    break;\n            }\n        }\n        return tokens.join("").replace(/(?:calc)?\\(([0-9\\.]+[a-z%]+)\\)/g, "$1");\n    }\n    return value;\n}\n\n/**\r\n * Cache every camelCase match to avoid repeating lookups.\r\n */\nvar cache$2 = {};\n/**\r\n * Camelcase a property name into its JavaScript notation (e.g.\r\n * "background-color" ==> "backgroundColor"). Camelcasing is used to\r\n * normalize property names between and across calls.\r\n */\nfunction camelCase(property) {\n  var fixed = cache$2[property];\n  if (fixed) {\n    return fixed;\n  }\n  return cache$2[property] = property.replace(/-([a-z])/g, function ($, letter) {\n    return letter.toUpperCase();\n  });\n}\n\n// Constants\nvar rxColor6 = /#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/gi,\n    rxColor3 = /#([a-f\\d])([a-f\\d])([a-f\\d])/gi,\n    rxColorName = /(rgba?\\(\\s*)?(\\b[a-z]+\\b)/g,\n    rxRGB = /rgb(a?)\\(([^\\)]+)\\)/gi,\n    rxSpaces = /\\s+/g;\n/**\r\n * This is the list of color names -> rgb values. The object is in here so\r\n * that the actual name conversion can be in a separate file and not\r\n * included for custom builds.\r\n */\nvar ColorNames = {};\n/**\r\n * Convert a hex list to an rgba value. Designed to be used in replace.\r\n */\nfunction makeRGBA(ignore, r, g, b) {\n    return "rgba(" + parseInt(r, 16) + "," + parseInt(g, 16) + "," + parseInt(b, 16) + ",1)";\n}\n/**\r\n * Replace any css colour name with its rgba() value. It is possible to use\r\n * the name within an "rgba(blue, 0.4)" string this way.\r\n */\nfunction fixColors(str) {\n    return str.replace(rxColor6, makeRGBA).replace(rxColor3, function ($0, r, g, b) {\n        return makeRGBA($0, r + r, g + g, b + b);\n    }).replace(rxColorName, function ($0, $1, $2) {\n        if (ColorNames[$2]) {\n            return ($1 ? $1 : "rgba(") + ColorNames[$2] + ($1 ? "" : ",1)");\n        }\n        return $0;\n    }).replace(rxRGB, function ($0, $1, $2) {\n        return "rgba(" + ($2.replace(rxSpaces, "") + ($1 ? "" : ",1")) + ")";\n    });\n}\n\n// Project\n/**\r\n * Figure out the dimensions for this width / height based on the\r\n * potential borders and whether we care about them.\r\n */\nfunction augmentDimension(element, name, wantInner) {\n    var isBorderBox = getPropertyValue(element, "boxSizing").toString().toLowerCase() === "border-box";\n    if (isBorderBox === wantInner) {\n        // in box-sizing mode, the CSS width / height accessors already\n        // give the outerWidth / outerHeight.\n        var sides = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"],\n            fields = ["padding" + sides[0], "padding" + sides[1], "border" + sides[0] + "Width", "border" + sides[1] + "Width"];\n        var augment = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var field = _step.value;\n\n                var value = parseFloat(getPropertyValue(element, field));\n                if (!isNaN(value)) {\n                    augment += value;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return wantInner ? -augment : augment;\n    }\n    return 0;\n}\n\n// Project\n/**\r\n * Get the width or height of an element, pulled out as it can be used when the\r\n * in two locations so don\'t want to repeat it.\r\n */\nfunction getWidthHeight(element, property) {\n    return element.getBoundingClientRect()[property] + augmentDimension(element, property, true) + "px";\n}\n// TODO: This is still a complete mess\nfunction computePropertyValue(element, property) {\n    var data = Data(element),\n\n    // If computedStyle is cached, use it. If not then get the correct one\n    // for the element to support cross-iframe boundaries.\n    computedStyle = data.computedStyle ? data.computedStyle : data.window.getComputedStyle(element, null);\n    var computedValue = 0;\n    if (!data.computedStyle) {\n        data.computedStyle = computedStyle;\n    }\n    if (computedStyle["display"] === "none") {\n        switch (property) {\n            case "width":\n            case "height":\n                // Browsers do not return height and width values for elements\n                // that are set to display:"none". Thus, we temporarily toggle\n                // display to the element type\'s default value.\n                setPropertyValue(element, "display", "auto");\n                computedValue = getWidthHeight(element, property);\n                setPropertyValue(element, "display", "none");\n                return String(computedValue);\n        }\n    }\n    /* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side\'s color.\r\n     Also, in all browsers, when border colors aren\'t all the same, a compound value is returned that Velocity isn\'t setup to parse.\r\n     So, as a polyfill for querying individual border side colors, we just return the top border\'s color and animate all borders from that value. */\n    /* TODO: There is a borderColor normalisation in legacy/ - figure out where this is needed... */\n    computedValue = computedStyle[property];\n    /* Fall back to the property\'s style value (if defined) when computedValue returns nothing,\r\n     which can happen when the element hasn\'t been painted. */\n    if (!computedValue) {\n        computedValue = element.style[property];\n    }\n    /* For top, right, bottom, and left (TRBL) values that are set to "auto" on elements of "fixed" or "absolute" position,\r\n     defer to jQuery for converting "auto" to a numeric value. (For elements with a "static" or "relative" position, "auto" has the same\r\n     effect as being set to 0, so no conversion is necessary.) */\n    /* An example of why numeric conversion is necessary: When an element with "position:absolute" has an untouched "left"\r\n     property, which reverts to "auto", left\'s value is 0 relative to its parent element, but is often non-zero relative\r\n     to its *containing* (not parent) element, which is the nearest "position:relative" ancestor or the viewport (and always the viewport in the case of "position:fixed"). */\n    if (computedValue === "auto") {\n        switch (property) {\n            case "width":\n            case "height":\n                computedValue = getWidthHeight(element, property);\n                break;\n            case "top":\n            case "left":\n\n            case "right":\n            case "bottom":\n                var position = getPropertyValue(element, "position");\n                if (position === "fixed" || position === "absolute") {\n                    // Note: this has no pixel unit on its returned values,\n                    // we re-add it here to conform with\n                    // computePropertyValue\'s behavior.\n                    computedValue = element.getBoundingClientRect[property] + "px";\n                    break;\n                }\n            // Deliberate fallthrough!\n            default:\n                computedValue = "0px";\n                break;\n        }\n    }\n    return computedValue ? String(computedValue) : "";\n}\n/**\r\n * Get a property value. This will grab via the cache if it exists, then\r\n * via any normalisations.\r\n */\nfunction getPropertyValue(element, propertyName, fn, skipCache) {\n    var data = Data(element);\n    var propertyValue = void 0;\n    if (NoCacheNormalizations.has(propertyName)) {\n        skipCache = true;\n    }\n    if (!skipCache && data && data.cache[propertyName] != null) {\n        propertyValue = data.cache[propertyName];\n    } else {\n        fn = fn || getNormalization(element, propertyName);\n        if (fn) {\n            propertyValue = fn(element);\n            if (data) {\n                data.cache[propertyName] = propertyValue;\n            }\n        }\n    }\n    if (Velocity$$1.debug >= 2) {\n        console.info("Get \\"" + propertyName + "\\": \\"" + propertyValue + "\\"", element);\n    }\n    return propertyValue;\n}\n\n// Project\n// Constants\nvar rxHex = /^#([A-f\\d]{3}){1,2}$/i,\n    commands = {\n    function: function _function(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return value.call(element, elementArrayIndex, elements.length, propertyName);\n    },\n    number: function number(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return String(value) + getNormalizationUnit(tween.fn);\n    },\n    string: function string(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return fixColors(value);\n    },\n    undefined: function undefined(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return fixColors(getPropertyValue(element, propertyName, tween.fn) || "");\n    }\n};\n/**\r\n * Expand a VelocityProperty argument into a valid sparse Tween array. This\r\n * pre-allocates the array as it is then the correct size and slightly\r\n * faster to access.\r\n */\nfunction expandProperties(animation, properties) {\n    var tweens = animation.tweens = Object.create(null),\n        elements = animation.elements,\n        element = animation.element,\n        elementArrayIndex = elements.indexOf(element),\n        data = Data(element),\n        queue = getValue(animation.queue, animation.options.queue),\n        duration = getValue(animation.options.duration, defaults$1.duration);\n    for (var property in properties) {\n        if (properties.hasOwnProperty(property)) {\n            var propertyName = camelCase(property),\n                fn = getNormalization(element, propertyName);\n            var valueData = properties[property];\n            if (!fn && propertyName !== "tween") {\n                if (Velocity$$1.debug) {\n                    console.log("Skipping \\"" + property + "\\" due to a lack of browser support.");\n                }\n                continue;\n            }\n            if (valueData == null) {\n                if (Velocity$$1.debug) {\n                    console.log("Skipping \\"" + property + "\\" due to no value supplied.");\n                }\n                continue;\n            }\n            var tween = tweens[propertyName] = {};\n            var endValue = void 0,\n                startValue = void 0;\n            tween.fn = fn;\n            if (isFunction(valueData)) {\n                // If we have a function as the main argument then resolve\n                // it first, in case it returns an array that needs to be\n                // split.\n                valueData = valueData.call(element, elementArrayIndex, elements.length, elements);\n            }\n            if (Array.isArray(valueData)) {\n                // valueData is an array in the form of\n                // [ endValue, [, easing] [, startValue] ]\n                var arr1 = valueData[1],\n                    arr2 = valueData[2];\n                endValue = valueData[0];\n                if (isString(arr1) && (/^[\\d-]/.test(arr1) || rxHex.test(arr1)) || isFunction(arr1) || isNumber(arr1)) {\n                    startValue = arr1;\n                } else if (isString(arr1) && Easings[arr1] || Array.isArray(arr1)) {\n                    tween.easing = validateEasing(arr1, duration);\n                    startValue = arr2;\n                } else {\n                    startValue = arr1 || arr2;\n                }\n            } else {\n                endValue = valueData;\n            }\n            tween.end = commands[typeof endValue === "undefined" ? "undefined" : _typeof(endValue)](endValue, element, elements, elementArrayIndex, propertyName, tween);\n            if (startValue != null || queue === false || data.queueList[queue] === undefined) {\n                tween.start = commands[typeof startValue === "undefined" ? "undefined" : _typeof(startValue)](startValue, element, elements, elementArrayIndex, propertyName, tween);\n                explodeTween(propertyName, tween, duration);\n            }\n        }\n    }\n}\n// TODO: Needs a better match for "translate3d" etc - a number must be preceded by some form of break...\nvar rxToken = /((?:[+\\-*/]=)?(?:[+-]?\\d*\\.\\d+|[+-]?\\d+)[a-z%]*|(?:.(?!$|[+-]?\\d|[+\\-*/]=[+-]?\\d))+.|.)/g,\n    rxNumber = /^([+\\-*/]=)?([+-]?\\d*\\.\\d+|[+-]?\\d+)(.*)$/;\n/**\r\n * Find a pattern between multiple strings, return a VelocitySequence with\r\n * the pattern and the tokenised values.\r\n *\r\n * If number then animate.\r\n * If a string then must match.\r\n * If units then convert between them by wrapping in a calc().\r\n * - If already in a calc then nest another layer.\r\n * If in an rgba() then the first three numbers are rounded.\r\n */\nfunction findPattern(parts, propertyName) {\n    var partsLength = parts.length,\n        tokens = [],\n        indexes = [];\n    var numbers = void 0;\n    // First tokenise the strings - these have all values, we will pull\n    // numbers later.\n    for (var part = 0; part < partsLength; part++) {\n        if (isString(parts[part])) {\n            if (parts[part] === "") {\n                tokens[part] = [""];\n            } else {\n                tokens[part] = cloneArray(parts[part].match(rxToken));\n            }\n            indexes[part] = 0;\n            // If it matches more than one thing then we\'ve got a number.\n            numbers = numbers || tokens[part].length > 1;\n            //console.log(`tokens:`, parts[part], tokens[part])\n        } else {\n            // We have an incomplete lineup, it will get tried again later...\n            return;\n        }\n    }\n    var sequence = [],\n        pattern = sequence.pattern = [],\n        addString = function addString(text) {\n        if (isString(pattern[pattern.length - 1])) {\n            pattern[pattern.length - 1] += text;\n        } else if (text) {\n            pattern.push(text);\n            for (var _part = 0; _part < partsLength; _part++) {\n                sequence[_part].push(null);\n            }\n        }\n    },\n        returnStringType = function returnStringType() {\n        if (numbers || pattern.length > 1) {\n            //console.error(`Velocity: Trying to pattern match mis-matched strings "${propertyName}":`, parts);\n            return;\n        }\n        var isDisplay = propertyName === "display",\n            isVisibility = propertyName === "visibility";\n        for (var _part2 = 0; _part2 < partsLength; _part2++) {\n            var value = parts[_part2];\n            sequence[_part2][0] = value;\n            // Don\'t care about duration...\n            sequence[_part2].easing = validateEasing(isDisplay && value === "none" || isVisibility && value === "hidden" || !isDisplay && !isVisibility ? "at-end" : "at-start", 400);\n        }\n        pattern[0] = false;\n        return sequence;\n    };\n    var more = true;\n    for (var _part3 = 0; _part3 < partsLength; _part3++) {\n        sequence[_part3] = [];\n    }\n    while (more) {\n        var bits = [],\n            units = [];\n        var text = void 0,\n            isUnitless = false,\n            hasNumbers = false;\n        for (var _part4 = 0; _part4 < partsLength; _part4++) {\n            var index = indexes[_part4]++,\n                token = tokens[_part4][index];\n            if (token) {\n                var num = token.match(rxNumber); // [ignore, change, number, unit]\n                if (num) {\n                    // It\'s a number, possibly with a += change and unit.\n                    if (text) {\n                        return returnStringType();\n                    }\n                    var digits = parseFloat(num[2]),\n                        unit = num[3],\n                        change = num[1] ? num[1][0] + unit : undefined,\n                        changeOrUnit = change || unit;\n                    if (digits && !units.includes(changeOrUnit)) {\n                        // Will be an empty string at the least.\n                        units.push(changeOrUnit);\n                    }\n                    if (!unit) {\n                        if (digits) {\n                            hasNumbers = true;\n                        } else {\n                            isUnitless = true;\n                        }\n                    }\n                    bits[_part4] = change ? [digits, changeOrUnit, true] : [digits, changeOrUnit];\n                } else if (bits.length) {\n                    return returnStringType();\n                } else {\n                    // It\'s a string.\n                    if (!text) {\n                        text = token;\n                    } else if (text !== token) {\n                        return returnStringType();\n                    }\n                }\n            } else if (!_part4) {\n                for (; _part4 < partsLength; _part4++) {\n                    var index2 = indexes[_part4]++;\n                    if (tokens[_part4][index2]) {\n                        return returnStringType();\n                    }\n                }\n                // IMPORTANT: This is the exit point.\n                more = false;\n                break;\n            } else {\n                // Different\n                return;\n            }\n        }\n        if (text) {\n            addString(text);\n        } else if (units.length) {\n            if (units.length === 2 && isUnitless && !hasNumbers) {\n                // If we only have two units, and one is empty, and it\'s only empty on "0", then treat us as having one unit\n                units.splice(units[0] ? 1 : 0, 1);\n            }\n            if (units.length === 1) {\n                // All the same units, so append number then unit.\n                var _unit = units[0],\n                    firstLetter = _unit[0];\n                switch (firstLetter) {\n                    case "+":\n                    case "-":\n                    case "*":\n                    case "/":\n                        if (propertyName) {\n                            console.error("Velocity: The first property must not contain a relative function \\"" + propertyName + "\\":", parts);\n                        }\n                        return;\n                }\n                pattern.push(false);\n                for (var _part5 = 0; _part5 < partsLength; _part5++) {\n                    sequence[_part5].push(bits[_part5][0]);\n                }\n                addString(_unit);\n            } else {\n                // Multiple units, so must be inside a calc.\n                addString("calc(");\n                var patternCalc = pattern.length - 1; // Store the beginning of our calc.\n                for (var i = 0; i < units.length; i++) {\n                    var _unit2 = units[i],\n                        _firstLetter = _unit2[0],\n                        isComplex = _firstLetter === "*" || _firstLetter === "/",\n                        isMaths = isComplex || _firstLetter === "+" || _firstLetter === "-";\n                    if (isComplex) {\n                        // TODO: Not sure this should be done automatically!\n                        pattern[patternCalc] += "(";\n                        addString(")");\n                    }\n                    if (i) {\n                        addString(" " + (isMaths ? _firstLetter : "+") + " ");\n                    }\n                    pattern.push(false);\n                    for (var _part6 = 0; _part6 < partsLength; _part6++) {\n                        var bit = bits[_part6],\n                            value = bit[1] === _unit2 ? bit[0] : bit.length === 3 ? sequence[_part6 - 1][sequence[_part6 - 1].length - 1] : isComplex ? 1 : 0;\n                        sequence[_part6].push(value);\n                    }\n                    addString(isMaths ? _unit2.substring(1) : _unit2);\n                }\n                addString(")");\n            }\n        }\n    }\n    // We\'ve got here, so a valid sequence - now check and fix RGB rounding\n    // and calc() nesting...\n    // TODO: Nested calc(a + calc(b + c)) -> calc(a + (b + c))\n    for (var _i = 0, inRGB = 0; _i < pattern.length; _i++) {\n        var _text = pattern[_i];\n        if (isString(_text)) {\n            if (inRGB && _text.indexOf(",") >= 0) {\n                inRGB++;\n            } else if (_text.indexOf("rgb") >= 0) {\n                inRGB = 1;\n            }\n        } else if (inRGB) {\n            if (inRGB < 4) {\n                pattern[_i] = true;\n            } else {\n                inRGB = 0;\n            }\n        }\n    }\n    return sequence;\n}\n/**\r\n * Convert a string-based tween with start and end strings, into a pattern\r\n * based tween with arrays.\r\n */\nfunction explodeTween(propertyName, tween, duration, starting) {\n    var startValue = tween.start,\n        endValue = tween.end;\n    if (!isString(endValue) || !isString(startValue)) {\n        return;\n    }\n    var sequence = findPattern([startValue, endValue], propertyName);\n    if (!sequence && starting) {\n        // This little piece will take a startValue, split out the\n        // various numbers in it, then copy the endValue into the\n        // startValue while replacing the numbers in it to match the\n        // original start numbers as a repeating sequence.\n        // Finally this function will run again with the new\n        // startValue and a now matching pattern.\n        var startNumbers = startValue.match(/\\d\\.?\\d*/g) || ["0"],\n            count = startNumbers.length;\n        var index = 0;\n        sequence = findPattern([endValue.replace(/\\d+\\.?\\d*/g, function () {\n            return startNumbers[index++ % count];\n        }), endValue], propertyName);\n    }\n    if (sequence) {\n        if (Velocity$$1.debug) {\n            console.log("Velocity: Sequence found:", sequence);\n        }\n        sequence[0].percent = 0;\n        sequence[1].percent = 1;\n        tween.sequence = sequence;\n        switch (tween.easing) {\n            case Easings["at-start"]:\n            case Easings["during"]:\n            case Easings["at-end"]:\n                sequence[0].easing = sequence[1].easing = tween.easing;\n                break;\n        }\n    }\n}\n/**\r\n * Expand all queued animations that haven\'t gone yet\r\n *\r\n * This will automatically expand the properties map for any recently added\r\n * animations so that the start and end values are correct.\r\n */\nfunction validateTweens(activeCall) {\n    // This might be called on an already-ready animation\n    if (State.firstNew === activeCall) {\n        State.firstNew = activeCall._next;\n    }\n    // Check if we\'re actually already ready\n    if (activeCall._flags & 1 /* EXPANDED */) {\n            // tslint:disable-line:no-bitwise\n            return;\n        }\n    var element = activeCall.element,\n        tweens = activeCall.tweens,\n        duration = getValue(activeCall.options.duration, defaults$1.duration);\n    // tslint:disable-next-line:forin\n    for (var propertyName in tweens) {\n        var tween = tweens[propertyName];\n        if (tween.start == null) {\n            // Get the start value as it\'s not been passed in\n            var startValue = getPropertyValue(activeCall.element, propertyName);\n            if (isString(startValue)) {\n                tween.start = fixColors(startValue);\n                explodeTween(propertyName, tween, duration, true);\n            } else if (!Array.isArray(startValue)) {\n                console.warn("bad type", tween, propertyName, startValue);\n            }\n        }\n        if (Velocity$$1.debug) {\n            console.log("tweensContainer \\"" + propertyName + "\\": " + JSON.stringify(tween), element);\n        }\n    }\n    activeCall._flags |= 1 /* EXPANDED */; // tslint:disable-line:no-bitwise\n}\n\n// Project\n/**\r\n * Call the begin method of an animation in a separate function so it can\r\n * benefit from JIT compiling while still having a try/catch block.\r\n */\nfunction beginCall(activeCall) {\n    var callback = activeCall.begin || activeCall.options.begin;\n    if (callback) {\n        try {\n            var elements = activeCall.elements;\n            callback.call(elements, elements, activeCall);\n        } catch (error) {\n            setTimeout(function () {\n                throw error;\n            }, 1);\n        }\n    }\n}\n/**\r\n * Call the progress method of an animation in a separate function so it can\r\n * benefit from JIT compiling while still having a try/catch block.\r\n */\nfunction progressCall(activeCall) {\n    var callback = activeCall.progress || activeCall.options.progress;\n    if (callback) {\n        try {\n            var elements = activeCall.elements,\n                percentComplete = activeCall.percentComplete,\n                options = activeCall.options,\n                tweenValue = activeCall.tween;\n            callback.call(elements, elements, percentComplete, Math.max(0, activeCall.timeStart + (activeCall.duration != null ? activeCall.duration : options.duration != null ? options.duration : defaults$1.duration) - lastTick), tweenValue !== undefined ? tweenValue : String(percentComplete * 100), activeCall);\n        } catch (error) {\n            setTimeout(function () {\n                throw error;\n            }, 1);\n        }\n    }\n}\n/**\r\n * Call callbacks, potentially run async with the main animation thread.\r\n */\nfunction asyncCallbacks() {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = progressed[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var activeCall = _step.value;\n\n            progressCall(activeCall);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    progressed.clear();\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = completed[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _activeCall = _step2.value;\n\n            completeCall(_activeCall);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    completed.clear();\n}\n/**************\r\n Timing\r\n **************/\nvar FRAME_TIME = 1000 / 60,\n\n/**\r\n * Animations with a Complete callback.\r\n */\ncompleted = new Set(),\n\n/**\r\n * Animations with a Progress callback.\r\n */\nprogressed = new Set(),\n\n/**\r\n * Shim for window.performance in case it doesn\'t exist\r\n */\nperformance = function () {\n    var perf = window.performance || {};\n    if (typeof perf.now !== "function") {\n        var nowOffset = perf.timing && perf.timing.navigationStart ? perf.timing.navigationStart : now();\n        perf.now = function () {\n            return now() - nowOffset;\n        };\n    }\n    return perf;\n}(),\n\n/**\r\n * Proxy function for when rAF is not available.\r\n *\r\n * This should hopefully never be used as the browsers often throttle\r\n * this to less than one frame per second in the background, making it\r\n * completely unusable.\r\n */\nrAFProxy = function rAFProxy(callback) {\n    return setTimeout(callback, Math.max(0, FRAME_TIME - (performance.now() - lastTick)));\n},\n\n/**\r\n * Either requestAnimationFrame, or a shim for it.\r\n */\nrAFShim = window.requestAnimationFrame || rAFProxy;\n/**\r\n * Set if we are currently inside a tick() to prevent double-calling.\r\n */\nvar ticking = void 0,\n\n/**\r\n * A background WebWorker that sends us framerate messages when we\'re in\r\n * the background. Without this we cannot maintain frame accuracy.\r\n */\nworker = void 0;\n/**\r\n * The time that the last animation frame ran at. Set from tick(), and used\r\n * for missing rAF (ie, when not in focus etc).\r\n */\nvar lastTick = 0;\n/**\r\n * WebWorker background function.\r\n *\r\n * When we\'re in the background this will send us a msg every tick, when in\r\n * the foreground it won\'t.\r\n *\r\n * When running in the background the browser reduces allowed CPU etc, so\r\n * we raun at 30fps instead of 60fps.\r\n */\nfunction workerFn() {\n    var _this = this;\n\n    var interval = void 0;\n    this.onmessage = function (e) {\n        switch (e.data) {\n            case true:\n                if (!interval) {\n                    interval = setInterval(function () {\n                        _this.postMessage(true);\n                    }, 1000 / 30);\n                }\n                break;\n            case false:\n                if (interval) {\n                    clearInterval(interval);\n                    interval = 0;\n                }\n                break;\n            default:\n                _this.postMessage(e.data);\n                break;\n        }\n    };\n}\ntry {\n    // Create the worker - this might not be supported, hence the try/catch.\n    worker = new Worker(URL.createObjectURL(new Blob(["(" + workerFn + ")()"])));\n    // Whenever the worker sends a message we tick()\n    worker.onmessage = function (e) {\n        if (e.data === true) {\n            tick();\n        } else {\n            asyncCallbacks();\n        }\n    };\n    // And watch for going to the background to start the WebWorker running.\n    if (!State.isMobile && document.hidden !== undefined) {\n        document.addEventListener("visibilitychange", function () {\n            worker.postMessage(State.isTicking && document.hidden);\n        });\n    }\n} catch (e) {}\n/*\r\n * WebWorkers are not supported in this format. This can happen in IE10\r\n * where it can\'t create one from a blob this way. We fallback, but make\r\n * no guarantees towards accuracy in this case.\r\n */\n\n/**\r\n * Called on every tick, preferably through rAF. This is reponsible for\r\n * initialising any new animations, then starting any that need starting.\r\n * Finally it will expand any tweens and set the properties relating to\r\n * them. If there are any callbacks relating to the animations then they\r\n * will attempt to call at the end (with the exception of "begin").\r\n */\nfunction tick(timestamp) {\n    if (ticking) {\n        // Should never happen - but if we\'ve swapped back from hidden to\n        // visibile then we want to make sure\n        return;\n    }\n    ticking = true;\n    /* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\r\n     We leverage this metadata to fully ignore the first tick pass since RAF\'s initial pass is fired whenever\r\n     the browser\'s next tick sync time occurs, which results in the first elements subjected to Velocity\r\n     calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\r\n     the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\r\n     by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */\n    if (timestamp !== false) {\n        var timeCurrent = performance.now(),\n            deltaTime = lastTick ? timeCurrent - lastTick : FRAME_TIME,\n            defaultSpeed = defaults$1.speed,\n            defaultEasing = defaults$1.easing,\n            defaultDuration = defaults$1.duration;\n        var activeCall = void 0,\n            nextCall = void 0;\n        if (deltaTime >= defaults$1.minFrameTime || !lastTick) {\n            lastTick = timeCurrent;\n            /********************\r\n             Call Iteration\r\n             ********************/\n            // Expand any tweens that might need it.\n            while (State.firstNew) {\n                validateTweens(State.firstNew);\n            }\n            // Iterate through each active call.\n            for (activeCall = State.first; activeCall && activeCall !== State.firstNew; activeCall = activeCall._next) {\n                var element = activeCall.element,\n                    data = Data(element);\n                // Check to see if this element has been deleted midway\n                // through the animation. If it\'s gone then end this\n                // animation.\n                if (!element.parentNode || !data) {\n                    // TODO: Remove safely - decrease count, delete data, remove from arrays\n                    freeAnimationCall(activeCall);\n                    continue;\n                }\n                // Don\'t bother getting until we can use these.\n                var options = activeCall.options,\n                    flags = activeCall._flags;\n                var timeStart = activeCall.timeStart;\n                // If this is the first time that this call has been\n                // processed by tick() then we assign timeStart now so that\n                // it\'s value is as close to the real animation start time\n                // as possible.\n                if (!timeStart) {\n                    var queue = activeCall.queue != null ? activeCall.queue : options.queue;\n                    timeStart = timeCurrent - deltaTime;\n                    if (queue !== false) {\n                        timeStart = Math.max(timeStart, data.lastFinishList[queue] || 0);\n                    }\n                    activeCall.timeStart = timeStart;\n                }\n                // If this animation is paused then skip processing unless\n                // it has been set to resume.\n                if (flags & 16 /* PAUSED */) {\n                        // tslint:disable-line:no-bitwise\n                        // Update the time start to accomodate the paused\n                        // completion amount.\n                        activeCall.timeStart += deltaTime;\n                        continue;\n                    }\n                // Check if this animation is ready - if it\'s synced then it\n                // needs to wait for all other animations in the sync\n                if (!(flags & 2 /* READY */)) {\n                    // tslint:disable-line:no-bitwise\n                    activeCall._flags |= 2 /* READY */; // tslint:disable-line:no-bitwise\n                    options._ready++;\n                }\n            }\n            // Need to split the loop, as ready sync animations must all get\n            // the same start time.\n            for (activeCall = State.first; activeCall && activeCall !== State.firstNew; activeCall = nextCall) {\n                var _flags = activeCall._flags;\n                nextCall = activeCall._next;\n                if (!(_flags & 2 /* READY */) || _flags & 16 /* PAUSED */) {\n                    // tslint:disable-line:no-bitwise\n                    continue;\n                }\n                var _options = activeCall.options;\n                if (_flags & 32 /* SYNC */ && _options._ready < _options._total) {\n                    // tslint:disable-line:no-bitwise\n                    activeCall.timeStart += deltaTime;\n                    continue;\n                }\n                var speed = activeCall.speed != null ? activeCall.speed : _options.speed != null ? _options.speed : defaultSpeed;\n                var _timeStart = activeCall.timeStart;\n                // Don\'t bother getting until we can use these.\n                if (!(_flags & 4 /* STARTED */)) {\n                    // tslint:disable-line:no-bitwise\n                    var delay = activeCall.delay != null ? activeCall.delay : _options.delay;\n                    // Make sure anything we\'ve delayed doesn\'t start\n                    // animating yet, there might still be an active delay\n                    // after something has been un-paused\n                    if (delay) {\n                        if (_timeStart + delay / speed > timeCurrent) {\n                            continue;\n                        }\n                        activeCall.timeStart = _timeStart += delay / (delay > 0 ? speed : 1);\n                    }\n                    activeCall._flags |= 4 /* STARTED */; // tslint:disable-line:no-bitwise\n                    // The begin callback is fired once per call, not once\n                    // per element, and is passed the full raw DOM element\n                    // set as both its context and its first argument.\n                    if (_options._started++ === 0) {\n                        _options._first = activeCall;\n                        if (_options.begin) {\n                            // Pass to an external fn with a try/catch block for optimisation\n                            beginCall(activeCall);\n                            // Only called once, even if reversed or repeated\n                            _options.begin = undefined;\n                        }\n                    }\n                }\n                if (speed !== 1) {\n                    // On the first frame we may have a shorter delta\n                    // const delta = Math.min(deltaTime, timeCurrent - timeStart);\n                    activeCall.timeStart = _timeStart += Math.min(deltaTime, timeCurrent - _timeStart) * (1 - speed);\n                }\n                var activeEasing = activeCall.easing != null ? activeCall.easing : _options.easing != null ? _options.easing : defaultEasing,\n                    millisecondsEllapsed = activeCall.ellapsedTime = timeCurrent - _timeStart,\n                    duration = activeCall.duration != null ? activeCall.duration : _options.duration != null ? _options.duration : defaultDuration,\n                    percentComplete = activeCall.percentComplete = Velocity$$1.mock ? 1 : Math.min(millisecondsEllapsed / duration, 1),\n                    tweens = activeCall.tweens,\n                    reverse = _flags & 64 /* REVERSE */; // tslint:disable-line:no-bitwise\n                if (activeCall.progress || _options._first === activeCall && _options.progress) {\n                    progressed.add(activeCall);\n                }\n                if (percentComplete === 1) {\n                    completed.add(activeCall);\n                }\n                // tslint:disable-next-line:forin\n                for (var property in tweens) {\n                    // For every element, iterate through each property.\n                    var tween = tweens[property],\n                        sequence = tween.sequence,\n                        pattern = sequence.pattern;\n                    var currentValue = "",\n                        i = 0;\n                    if (pattern) {\n                        var easingComplete = (tween.easing || activeEasing)(percentComplete, 0, 1, property);\n                        var best = 0;\n                        for (var j = 0; j < sequence.length - 1; j++) {\n                            if (sequence[j].percent < easingComplete) {\n                                best = j;\n                            }\n                        }\n                        var tweenFrom = sequence[best],\n                            tweenTo = sequence[best + 1] || tweenFrom,\n                            rawPercent = (percentComplete - tweenFrom.percent) / (tweenTo.percent - tweenFrom.percent),\n                            tweenPercent = reverse ? 1 - rawPercent : rawPercent,\n                            easing = tweenTo.easing || activeEasing || linearEasing;\n                        for (; i < pattern.length; i++) {\n                            var startValue = tweenFrom[i];\n                            if (startValue == null) {\n                                currentValue += pattern[i];\n                            } else {\n                                var endValue = tweenTo[i];\n                                if (startValue === endValue) {\n                                    currentValue += startValue;\n                                } else {\n                                    // All easings must deal with numbers except for our internal ones.\n                                    var result = easing(tweenPercent, startValue, endValue, property);\n                                    currentValue += pattern[i] !== true ? result : Math.round(result);\n                                }\n                            }\n                        }\n                        if (property !== "tween") {\n                            if (percentComplete === 1) {\n                                currentValue = removeNestedCalc(currentValue);\n                            }\n                            // TODO: To solve an IE<=8 positioning bug, the unit type must be dropped when setting a property value of 0 - add normalisations to legacy\n                            setPropertyValue(activeCall.element, property, currentValue, tween.fn);\n                        } else {\n                            // Skip the fake \'tween\' property as that is only\n                            // passed into the progress callback.\n                            activeCall.tween = currentValue;\n                        }\n                    } else {\n                        console.warn("VelocityJS: Missing pattern:", property, JSON.stringify(tween[property]));\n                        delete tweens[property];\n                    }\n                }\n            }\n            if (progressed.size || completed.size) {\n                if (!document.hidden) {\n                    asyncCallbacks();\n                } else if (worker) {\n                    worker.postMessage("");\n                } else {\n                    setTimeout(asyncCallbacks, 1);\n                }\n            }\n        }\n    }\n    if (State.first) {\n        State.isTicking = true;\n        if (!document.hidden) {\n            rAFShim(tick);\n        } else if (!worker) {\n            rAFProxy(tick);\n        } else if (timestamp === false) {\n            // Make sure we turn on the messages.\n            worker.postMessage(true);\n        }\n    } else {\n        State.isTicking = false;\n        lastTick = 0;\n        if (document.hidden && worker) {\n            // Make sure we turn off the messages.\n            worker.postMessage(false);\n        }\n    }\n    ticking = false;\n}\n\n// Project\n/**\r\n * Check if an animation should be finished, and if so we set the tweens to\r\n * the final value for it, then call complete.\r\n */\nfunction checkAnimationShouldBeFinished(animation, queueName, defaultQueue) {\n    validateTweens(animation);\n    if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n        if (!(animation._flags & 4 /* STARTED */)) {\n            // tslint:disable-line:no-bitwise\n            // Copied from tick.ts - ensure that the animation is completely\n            // valid and run begin() before complete().\n            var options = animation.options;\n            // The begin callback is fired once per call, not once per\n            // element, and is passed the full raw DOM element set as both\n            // its context and its first argument.\n            if (options._started++ === 0) {\n                options._first = animation;\n                if (options.begin) {\n                    // Pass to an external fn with a try/catch block for optimisation\n                    beginCall(animation);\n                    // Only called once, even if reversed or repeated\n                    options.begin = undefined;\n                }\n            }\n            animation._flags |= 4 /* STARTED */; // tslint:disable-line:no-bitwise\n        }\n        // tslint:disable-next-line:forin\n        for (var property in animation.tweens) {\n            var tween = animation.tweens[property],\n                sequence = tween.sequence,\n                pattern = sequence.pattern;\n            var currentValue = "",\n                i = 0;\n            if (pattern) {\n                var endValues = sequence[sequence.length - 1];\n                for (; i < pattern.length; i++) {\n                    var endValue = endValues[i];\n                    currentValue += endValue == null ? pattern[i] : endValue;\n                }\n            }\n            setPropertyValue(animation.element, property, currentValue, tween.fn);\n        }\n        completeCall(animation);\n    }\n}\n/**\r\n * When the finish action is triggered, the elements\' currently active call is\r\n * immediately finished. When an element is finished, the next item in its\r\n * animation queue is immediately triggered. If passed via a chained call\r\n * then this will only target the animations in that call, and not the\r\n * elements linked to it.\r\n *\r\n * A queue name may be passed in to specify that only animations on the\r\n * named queue are finished. The default queue is named "". In addition the\r\n * value of `false` is allowed for the queue name.\r\n *\r\n * An final argument may be passed in to clear an element\'s remaining queued\r\n * calls. This may only be the value `true`.\r\n */\nfunction finish(args, elements, promiseHandler) {\n    var queueName = validateQueue(args[0], true),\n        defaultQueue = defaults$1.queue,\n        finishAll = args[queueName === undefined ? 0 : 1] === true;\n    if (isVelocityResult(elements) && elements.velocity.animations) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = elements.velocity.animations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var animation = _step.value;\n\n                checkAnimationShouldBeFinished(animation, queueName, defaultQueue);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else {\n        while (State.firstNew) {\n            validateTweens(State.firstNew);\n        }\n        for (var activeCall = State.first, nextCall; activeCall && (finishAll || activeCall !== State.firstNew); activeCall = nextCall || State.firstNew) {\n            nextCall = activeCall._next;\n            if (!elements || elements.includes(activeCall.element)) {\n                checkAnimationShouldBeFinished(activeCall, queueName, defaultQueue);\n            }\n        }\n    }\n    if (promiseHandler) {\n        if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n            elements.then(promiseHandler._resolver);\n        } else {\n            promiseHandler._resolver(elements);\n        }\n    }\n}\nregisterAction(["finish", finish], true);\n\n/**\r\n * Used to map getters for the various AnimationFlags.\r\n */\nvar animationFlags = {\n    isExpanded: 1 /* EXPANDED */\n    , isReady: 2 /* READY */\n    , isStarted: 4 /* STARTED */\n    , isStopped: 8 /* STOPPED */\n    , isPaused: 16 /* PAUSED */\n    , isSync: 32 /* SYNC */\n    , isReverse: 64 /* REVERSE */\n};\n/**\r\n * Get or set an option or running AnimationCall data value. If there is no\r\n * value passed then it will get, otherwise we will set.\r\n *\r\n * NOTE: When using "get" this will not touch the Promise as it is never\r\n * returned to the user.\r\n */\nfunction option(args, elements, promiseHandler, action) {\n    var key = args[0],\n        queue = action.indexOf(".") >= 0 ? action.replace(/^.*\\./, "") : undefined,\n        queueName = queue === "false" ? false : validateQueue(queue, true);\n    var animations = void 0,\n        value = args[1];\n    if (!key) {\n        console.warn("VelocityJS: Cannot access a non-existant key!");\n        return null;\n    }\n    // If we\'re chaining the return value from Velocity then we are only\n    // interested in the values related to that call\n    if (isVelocityResult(elements) && elements.velocity.animations) {\n        animations = elements.velocity.animations;\n    } else {\n        animations = [];\n        for (var activeCall = State.first; activeCall; activeCall = activeCall._next) {\n            if (elements.indexOf(activeCall.element) >= 0 && getValue(activeCall.queue, activeCall.options.queue) === queueName) {\n                animations.push(activeCall);\n            }\n        }\n        // If we\'re dealing with multiple elements that are pointing at a\n        // single running animation, then instead treat them as a single\n        // animation.\n        if (elements.length > 1 && animations.length > 1) {\n            var i = 1,\n                options = animations[0].options;\n            while (i < animations.length) {\n                if (animations[i++].options !== options) {\n                    options = null;\n                    break;\n                }\n            }\n            // TODO: this needs to check that they\'re actually a sync:true animation to merge the results, otherwise the individual values may be different\n            if (options) {\n                animations = [animations[0]];\n            }\n        }\n    }\n    // GET\n    if (value === undefined) {\n        var result = [],\n            flag = animationFlags[key];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = animations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var animation = _step.value;\n\n                if (flag === undefined) {\n                    // A normal key to get.\n                    result.push(getValue(animation[key], animation.options[key]));\n                } else {\n                    // A flag that we\'re checking against.\n                    result.push((animation._flags & flag) === 0); // tslint:disable-line:no-bitwise\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        if (elements.length === 1 && animations.length === 1) {\n            // If only a single animation is found and we\'re only targetting a\n            // single element, then return the value directly\n            return result[0];\n        }\n        return result;\n    }\n    // SET\n    var isPercentComplete = void 0;\n    switch (key) {\n        case "cache":\n            value = validateCache(value);\n            break;\n        case "begin":\n            value = validateBegin(value);\n            break;\n        case "complete":\n            value = validateComplete(value);\n            break;\n        case "delay":\n            value = validateDelay(value);\n            break;\n        case "duration":\n            value = validateDuration(value);\n            break;\n        case "fpsLimit":\n            value = validateFpsLimit(value);\n            break;\n        case "loop":\n            value = validateLoop(value);\n            break;\n        case "percentComplete":\n            isPercentComplete = true;\n            value = parseFloat(value);\n            break;\n        case "repeat":\n        case "repeatAgain":\n            value = validateRepeat(value);\n            break;\n        default:\n            if (key[0] !== "_") {\n                var num = parseFloat(value);\n                if (value === String(num)) {\n                    value = num;\n                }\n                break;\n            }\n        // deliberate fallthrough\n        case "queue":\n        case "promise":\n        case "promiseRejectEmpty":\n        case "easing":\n        case "started":\n            console.warn("VelocityJS: Trying to set a read-only key:", key);\n            return;\n    }\n    if (value === undefined || value !== value) {\n        console.warn("VelocityJS: Trying to set an invalid value:" + key + "=" + value + " (" + args[1] + ")");\n        return null;\n    }\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = animations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _animation = _step2.value;\n\n            if (isPercentComplete) {\n                _animation.timeStart = lastTick - getValue(_animation.duration, _animation.options.duration, defaults$1.duration) * value;\n            } else {\n                _animation[key] = value;\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    if (promiseHandler) {\n        if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n            elements.then(promiseHandler._resolver);\n        } else {\n            promiseHandler._resolver(elements);\n        }\n    }\n}\nregisterAction(["option", option], true);\n\n// Project\n/**\r\n * Check if an animation should be paused / resumed.\r\n */\nfunction checkAnimation(animation, queueName, defaultQueue, isPaused) {\n    if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n        if (isPaused) {\n            animation._flags |= 16 /* PAUSED */; // tslint:disable-line:no-bitwise\n        } else {\n            animation._flags &= ~16 /* PAUSED */; // tslint:disable-line:no-bitwise\n        }\n    }\n}\n/**\r\n * Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a\r\n * single element will cause any calls that contain tweens for that element to be paused/resumed\r\n * as well.\r\n */\nfunction pauseResume(args, elements, promiseHandler, action) {\n    var isPaused = action.indexOf("pause") === 0,\n        queue = action.indexOf(".") >= 0 ? action.replace(/^.*\\./, "") : undefined,\n        queueName = queue === "false" ? false : validateQueue(args[0]),\n        defaultQueue = defaults$1.queue;\n    if (isVelocityResult(elements) && elements.velocity.animations) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = elements.velocity.animations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var animation = _step.value;\n\n                checkAnimation(animation, queueName, defaultQueue, isPaused);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else {\n        var activeCall = State.first;\n        while (activeCall) {\n            if (!elements || elements.includes(activeCall.element)) {\n                checkAnimation(activeCall, queueName, defaultQueue, isPaused);\n            }\n            activeCall = activeCall._next;\n        }\n    }\n    if (promiseHandler) {\n        if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n            elements.then(promiseHandler._resolver);\n        } else {\n            promiseHandler._resolver(elements);\n        }\n    }\n}\nregisterAction(["pause", pauseResume], true);\nregisterAction(["resume", pauseResume], true);\n\n// Project\n/**\r\n * Get or set a style of Nomralised property value on one or more elements.\r\n * If there is no value passed then it will get, otherwise we will set.\r\n *\r\n * NOTE: When using "get" this will not touch the Promise as it is never\r\n * returned to the user.\r\n *\r\n * This can fail to set, and will reject the Promise if it does so.\r\n *\r\n * Velocity(elements, "style", "property", "value") => elements;\r\n * Velocity(elements, "style", {"property": "value", ...}) => elements;\r\n * Velocity(element, "style", "property") => "value";\r\n * Velocity(elements, "style", "property") => ["value", ...];\r\n */\nfunction propertyAction(args, elements, promiseHandler, action) {\n    var property = args[0],\n        value = args[1];\n    if (!property) {\n        console.warn("VelocityJS: Cannot access a non-existant property!");\n        return null;\n    }\n    // GET\n    if (value === undefined && !isPlainObject(property)) {\n        if (Array.isArray(property)) {\n            if (elements.length === 1) {\n                var result = {};\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = property[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var prop = _step.value;\n\n                        result[prop] = fixColors(getPropertyValue(elements[0], prop));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return result;\n            } else {\n                var _result = [];\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = elements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var element = _step2.value;\n\n                        var res = {};\n                        var _iteratorNormalCompletion3 = true;\n                        var _didIteratorError3 = false;\n                        var _iteratorError3 = undefined;\n\n                        try {\n                            for (var _iterator3 = property[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                                var _prop = _step3.value;\n\n                                res[_prop] = fixColors(getPropertyValue(element, _prop));\n                            }\n                        } catch (err) {\n                            _didIteratorError3 = true;\n                            _iteratorError3 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                    _iterator3.return();\n                                }\n                            } finally {\n                                if (_didIteratorError3) {\n                                    throw _iteratorError3;\n                                }\n                            }\n                        }\n\n                        _result.push(res);\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n\n                return _result;\n            }\n        } else {\n            // If only a single animation is found and we\'re only targetting a\n            // single element, then return the value directly\n            if (elements.length === 1) {\n                return fixColors(getPropertyValue(elements[0], property));\n            }\n            var _result2 = [];\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = elements[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var _element = _step4.value;\n\n                    _result2.push(fixColors(getPropertyValue(_element, property)));\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n\n            return _result2;\n        }\n    }\n    // SET\n    var error = [];\n    if (isPlainObject(property)) {\n        for (var propertyName in property) {\n            if (property.hasOwnProperty(propertyName)) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    for (var _iterator5 = elements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _element2 = _step5.value;\n\n                        var propertyValue = property[propertyName];\n                        if (isString(propertyValue) || isNumber(propertyValue)) {\n                            setPropertyValue(_element2, propertyName, property[propertyName]);\n                        } else {\n                            error.push("Cannot set a property \\"" + propertyName + "\\" to an unknown type: " + (typeof propertyValue === "undefined" ? "undefined" : _typeof(propertyValue)));\n                            console.warn("VelocityJS: Cannot set a property \\"" + propertyName + "\\" to an unknown type:", propertyValue);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n        }\n    } else if (isString(value) || isNumber(value)) {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n            for (var _iterator6 = elements[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var _element3 = _step6.value;\n\n                setPropertyValue(_element3, property, String(value));\n            }\n        } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                }\n            } finally {\n                if (_didIteratorError6) {\n                    throw _iteratorError6;\n                }\n            }\n        }\n    } else {\n        error.push("Cannot set a property \\"" + property + "\\" to an unknown type: " + (typeof value === "undefined" ? "undefined" : _typeof(value)));\n        console.warn("VelocityJS: Cannot set a property \\"" + property + "\\" to an unknown type:", value);\n    }\n    if (promiseHandler) {\n        if (error.length) {\n            promiseHandler._rejecter(error.join(", "));\n        } else if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n            elements.then(promiseHandler._resolver);\n        } else {\n            promiseHandler._resolver(elements);\n        }\n    }\n}\nregisterAction(["property", propertyAction], true);\n\n// Project\nregisterAction(["reverse", function (args, elements, promiseHandler, action) {\n        // NOTE: Code needs to split out before here - but this is needed to prevent it being overridden\n        throw new SyntaxError("VelocityJS: The \'reverse\' action is built in and private.");\n}], true);\n\n// Project\n/**\r\n * Check if an animation should be stopped, and if so then set the STOPPED\r\n * flag on it, then call complete.\r\n */\nfunction checkAnimationShouldBeStopped(animation, queueName, defaultQueue) {\n    validateTweens(animation);\n    if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n        animation._flags |= 8 /* STOPPED */; // tslint:disable-line:no-bitwise\n        completeCall(animation);\n    }\n}\n/**\r\n * When the stop action is triggered, the elements\' currently active call is\r\n * immediately stopped. When an element is stopped, the next item in its\r\n * animation queue is immediately triggered. If passed via a chained call\r\n * then this will only target the animations in that call, and not the\r\n * elements linked to it.\r\n *\r\n * A queue name may be passed in to specify that only animations on the\r\n * named queue are stopped. The default queue is named "". In addition the\r\n * value of `false` is allowed for the queue name.\r\n *\r\n * An final argument may be passed in to clear an element\'s remaining queued\r\n * calls. This may only be the value `true`.\r\n *\r\n * Note: The stop command runs prior to Velocity\'s Queueing phase since its\r\n * behavior is intended to take effect *immediately*, regardless of the\r\n * element\'s current queue state.\r\n */\nfunction stop(args, elements, promiseHandler, action) {\n    var queueName = validateQueue(args[0], true),\n        defaultQueue = defaults$1.queue,\n        finishAll = args[queueName === undefined ? 0 : 1] === true;\n    if (isVelocityResult(elements) && elements.velocity.animations) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = elements.velocity.animations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var animation = _step.value;\n\n                checkAnimationShouldBeStopped(animation, queueName, defaultQueue);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else {\n        while (State.firstNew) {\n            validateTweens(State.firstNew);\n        }\n        for (var activeCall = State.first, nextCall; activeCall && (finishAll || activeCall !== State.firstNew); activeCall = nextCall || State.firstNew) {\n            nextCall = activeCall._next;\n            if (!elements || elements.includes(activeCall.element)) {\n                checkAnimationShouldBeStopped(activeCall, queueName, defaultQueue);\n            }\n        }\n    }\n    if (promiseHandler) {\n        if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n            elements.then(promiseHandler._resolver);\n        } else {\n            promiseHandler._resolver(elements);\n        }\n    }\n}\nregisterAction(["stop", stop], true);\n\n// Project\nregisterAction(["style", propertyAction], true);\n\n// Project\n/**\r\n *\r\n */\nfunction tweenAction(args, elements, promiseHandler, action) {\n    var requireForcefeeding = void 0;\n    if (!elements) {\n        if (!args.length) {\n            console.info("Velocity(<element>, \\"tween\\", percentComplete, property, end | [end, <easing>, <start>], <easing>) => value\\nVelocity(<element>, \\"tween\\", percentComplete, {property: end | [end, <easing>, <start>], ...}, <easing>) => {property: value, ...}");\n            return null;\n        }\n        elements = [document.body];\n        requireForcefeeding = true;\n    } else if (elements.length !== 1) {\n        // TODO: Allow more than a single element to return an array of results\n        throw new Error("VelocityJS: Cannot tween more than one element!");\n    }\n    var percentComplete = args[0],\n        fakeAnimation = {\n        elements: elements,\n        element: elements[0],\n        queue: false,\n        options: {\n            duration: 1000\n        },\n        tweens: null\n    },\n        result = {};\n    var properties = args[1],\n        singleResult = void 0,\n        maybeSequence = void 0,\n        easing = args[2],\n        count = 0;\n    if (isString(args[1])) {\n        if (SequencesObject && SequencesObject[args[1]]) {\n            maybeSequence = SequencesObject[args[1]];\n            properties = {};\n            easing = args[2];\n        } else {\n            singleResult = true;\n            properties = defineProperty({}, args[1], args[2]);\n            easing = args[3];\n        }\n    } else if (Array.isArray(args[1])) {\n        singleResult = true;\n        properties = {\n            tween: args[1]\n        };\n        easing = args[2];\n    }\n    if (!isNumber(percentComplete) || percentComplete < 0 || percentComplete > 1) {\n        throw new Error("VelocityJS: Must tween a percentage from 0 to 1!");\n    }\n    if (!isPlainObject(properties)) {\n        throw new Error("VelocityJS: Cannot tween an invalid property!");\n    }\n    if (requireForcefeeding) {\n        for (var property in properties) {\n            if (properties.hasOwnProperty(property) && (!Array.isArray(properties[property]) || properties[property].length < 2)) {\n                throw new Error("VelocityJS: When not supplying an element you must force-feed values: " + property);\n            }\n        }\n    }\n    var activeEasing = validateEasing(getValue(easing, defaults$1.easing), DEFAULT_DURATION);\n    if (maybeSequence) {\n        expandSequence(fakeAnimation, maybeSequence);\n    } else {\n        expandProperties(fakeAnimation, properties);\n    }\n    // tslint:disable-next-line:forin\n    for (var _property in fakeAnimation.tweens) {\n        // For every element, iterate through each property.\n        var propertyTween = fakeAnimation.tweens[_property],\n            sequence = propertyTween.sequence,\n            pattern = sequence.pattern;\n        var currentValue = "",\n            i = 0;\n        count++;\n        if (pattern) {\n            var easingComplete = (propertyTween.easing || activeEasing)(percentComplete, 0, 1, _property);\n            var best = 0;\n            for (var j = 0; j < sequence.length - 1; j++) {\n                if (sequence[j].percent < easingComplete) {\n                    best = j;\n                }\n            }\n            var tweenFrom = sequence[best],\n                tweenTo = sequence[best + 1] || tweenFrom,\n                tweenPercent = (percentComplete - tweenFrom.percent) / (tweenTo.percent - tweenFrom.percent),\n                tweenEasing = tweenTo.easing || linearEasing;\n            for (; i < pattern.length; i++) {\n                var startValue = tweenFrom[i];\n                if (startValue == null) {\n                    currentValue += pattern[i];\n                } else {\n                    var endValue = tweenTo[i];\n                    if (startValue === endValue) {\n                        currentValue += startValue;\n                    } else {\n                        // All easings must deal with numbers except for our internal ones.\n                        var value = tweenEasing(tweenPercent, startValue, endValue, _property);\n                        currentValue += pattern[i] === true ? Math.round(value) : value;\n                    }\n                }\n            }\n            result[_property] = currentValue;\n        }\n    }\n    if (singleResult && count === 1) {\n        for (var _property2 in result) {\n            if (result.hasOwnProperty(_property2)) {\n                return result[_property2];\n            }\n        }\n    }\n    return result;\n}\nregisterAction(["tween", tweenAction], true);\n\n// Project\n/**\r\n * Converting from hex as it makes for a smaller file.\r\n */\nvar colorValues = {\n    aliceblue: 0xF0F8FF,\n    antiquewhite: 0xFAEBD7,\n    aqua: 0x00FFFF,\n    aquamarine: 0x7FFFD4,\n    azure: 0xF0FFFF,\n    beige: 0xF5F5DC,\n    bisque: 0xFFE4C4,\n    black: 0x000000,\n    blanchedalmond: 0xFFEBCD,\n    blue: 0x0000FF,\n    blueviolet: 0x8A2BE2,\n    brown: 0xA52A2A,\n    burlywood: 0xDEB887,\n    cadetblue: 0x5F9EA0,\n    chartreuse: 0x7FFF00,\n    chocolate: 0xD2691E,\n    coral: 0xFF7F50,\n    cornflowerblue: 0x6495ED,\n    cornsilk: 0xFFF8DC,\n    crimson: 0xDC143C,\n    cyan: 0x00FFFF,\n    darkblue: 0x00008B,\n    darkcyan: 0x008B8B,\n    darkgoldenrod: 0xB8860B,\n    darkgray: 0xA9A9A9,\n    darkgrey: 0xA9A9A9,\n    darkgreen: 0x006400,\n    darkkhaki: 0xBDB76B,\n    darkmagenta: 0x8B008B,\n    darkolivegreen: 0x556B2F,\n    darkorange: 0xFF8C00,\n    darkorchid: 0x9932CC,\n    darkred: 0x8B0000,\n    darksalmon: 0xE9967A,\n    darkseagreen: 0x8FBC8F,\n    darkslateblue: 0x483D8B,\n    darkslategray: 0x2F4F4F,\n    darkslategrey: 0x2F4F4F,\n    darkturquoise: 0x00CED1,\n    darkviolet: 0x9400D3,\n    deeppink: 0xFF1493,\n    deepskyblue: 0x00BFFF,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1E90FF,\n    firebrick: 0xB22222,\n    floralwhite: 0xFFFAF0,\n    forestgreen: 0x228B22,\n    fuchsia: 0xFF00FF,\n    gainsboro: 0xDCDCDC,\n    ghostwhite: 0xF8F8FF,\n    gold: 0xFFD700,\n    goldenrod: 0xDAA520,\n    gray: 0x808080,\n    grey: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xADFF2F,\n    honeydew: 0xF0FFF0,\n    hotpink: 0xFF69B4,\n    indianred: 0xCD5C5C,\n    indigo: 0x4B0082,\n    ivory: 0xFFFFF0,\n    khaki: 0xF0E68C,\n    lavender: 0xE6E6FA,\n    lavenderblush: 0xFFF0F5,\n    lawngreen: 0x7CFC00,\n    lemonchiffon: 0xFFFACD,\n    lightblue: 0xADD8E6,\n    lightcoral: 0xF08080,\n    lightcyan: 0xE0FFFF,\n    lightgoldenrodyellow: 0xFAFAD2,\n    lightgray: 0xD3D3D3,\n    lightgrey: 0xD3D3D3,\n    lightgreen: 0x90EE90,\n    lightpink: 0xFFB6C1,\n    lightsalmon: 0xFFA07A,\n    lightseagreen: 0x20B2AA,\n    lightskyblue: 0x87CEFA,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xB0C4DE,\n    lightyellow: 0xFFFFE0,\n    lime: 0x00FF00,\n    limegreen: 0x32CD32,\n    linen: 0xFAF0E6,\n    magenta: 0xFF00FF,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66CDAA,\n    mediumblue: 0x0000CD,\n    mediumorchid: 0xBA55D3,\n    mediumpurple: 0x9370DB,\n    mediumseagreen: 0x3CB371,\n    mediumslateblue: 0x7B68EE,\n    mediumspringgreen: 0x00FA9A,\n    mediumturquoise: 0x48D1CC,\n    mediumvioletred: 0xC71585,\n    midnightblue: 0x191970,\n    mintcream: 0xF5FFFA,\n    mistyrose: 0xFFE4E1,\n    moccasin: 0xFFE4B5,\n    navajowhite: 0xFFDEAD,\n    navy: 0x000080,\n    oldlace: 0xFDF5E6,\n    olive: 0x808000,\n    olivedrab: 0x6B8E23,\n    orange: 0xFFA500,\n    orangered: 0xFF4500,\n    orchid: 0xDA70D6,\n    palegoldenrod: 0xEEE8AA,\n    palegreen: 0x98FB98,\n    paleturquoise: 0xAFEEEE,\n    palevioletred: 0xDB7093,\n    papayawhip: 0xFFEFD5,\n    peachpuff: 0xFFDAB9,\n    peru: 0xCD853F,\n    pink: 0xFFC0CB,\n    plum: 0xDDA0DD,\n    powderblue: 0xB0E0E6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xFF0000,\n    rosybrown: 0xBC8F8F,\n    royalblue: 0x4169E1,\n    saddlebrown: 0x8B4513,\n    salmon: 0xFA8072,\n    sandybrown: 0xF4A460,\n    seagreen: 0x2E8B57,\n    seashell: 0xFFF5EE,\n    sienna: 0xA0522D,\n    silver: 0xC0C0C0,\n    skyblue: 0x87CEEB,\n    slateblue: 0x6A5ACD,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xFFFAFA,\n    springgreen: 0x00FF7F,\n    steelblue: 0x4682B4,\n    tan: 0xD2B48C,\n    teal: 0x008080,\n    thistle: 0xD8BFD8,\n    tomato: 0xFF6347,\n    turquoise: 0x40E0D0,\n    violet: 0xEE82EE,\n    wheat: 0xF5DEB3,\n    white: 0xFFFFFF,\n    whitesmoke: 0xF5F5F5,\n    yellow: 0xFFFF00,\n    yellowgreen: 0x9ACD32\n};\nfor (var name in colorValues) {\n    if (colorValues.hasOwnProperty(name)) {\n        var color = colorValues[name];\n        ColorNames[name] = Math.floor(color / 65536) + "," + Math.floor(color / 256 % 256) + "," + color % 256;\n    }\n}\n\n// Project\nfunction registerBackIn(name, amount) {\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return Math.pow(percentComplete, 2) * ((amount + 1) * percentComplete - amount) * (endValue - startValue);\n    }]);\n}\nfunction registerBackOut(name, amount) {\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return (Math.pow(--percentComplete, 2) * ((amount + 1) * percentComplete + amount) + 1) * (endValue - startValue);\n    }]);\n}\nfunction registerBackInOut(name, amount) {\n    amount *= 1.525;\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        percentComplete *= 2;\n        return (percentComplete < 1 ? Math.pow(percentComplete, 2) * ((amount + 1) * percentComplete - amount) : Math.pow(percentComplete - 2, 2) * ((amount + 1) * (percentComplete - 2) + amount) + 2) * 0.5 * (endValue - startValue);\n    }]);\n}\nregisterBackIn("easeInBack", 1.7);\nregisterBackOut("easeOutBack", 1.7);\nregisterBackInOut("easeInOutBack", 1.7);\n// TODO: Expose these as actions to register custom easings?\n\n// Project\nfunction easeOutBouncePercent(percentComplete) {\n    if (percentComplete < 1 / 2.75) {\n        return 7.5625 * percentComplete * percentComplete;\n    }\n    if (percentComplete < 2 / 2.75) {\n        return 7.5625 * (percentComplete -= 1.5 / 2.75) * percentComplete + 0.75;\n    }\n    if (percentComplete < 2.5 / 2.75) {\n        return 7.5625 * (percentComplete -= 2.25 / 2.75) * percentComplete + 0.9375;\n    }\n    return 7.5625 * (percentComplete -= 2.625 / 2.75) * percentComplete + 0.984375;\n}\nfunction easeInBouncePercent(percentComplete) {\n    return 1 - easeOutBouncePercent(1 - percentComplete);\n}\nfunction easeInBounce(percentComplete, startValue, endValue) {\n    if (percentComplete === 0) {\n        return startValue;\n    }\n    if (percentComplete === 1) {\n        return endValue;\n    }\n    return easeInBouncePercent(percentComplete) * (endValue - startValue);\n}\nfunction easeOutBounce(percentComplete, startValue, endValue) {\n    if (percentComplete === 0) {\n        return startValue;\n    }\n    if (percentComplete === 1) {\n        return endValue;\n    }\n    return easeOutBouncePercent(percentComplete) * (endValue - startValue);\n}\nfunction easeInOutBounce(percentComplete, startValue, endValue) {\n    if (percentComplete === 0) {\n        return startValue;\n    }\n    if (percentComplete === 1) {\n        return endValue;\n    }\n    return (percentComplete < 0.5 ? easeInBouncePercent(percentComplete * 2) * 0.5 : easeOutBouncePercent(percentComplete * 2 - 1) * 0.5 + 0.5) * (endValue - startValue);\n}\nregisterEasing(["easeInBounce", easeInBounce]);\nregisterEasing(["easeOutBounce", easeOutBounce]);\nregisterEasing(["easeInOutBounce", easeInOutBounce]);\n\n// Project\n// Constants\nvar PI2 = Math.PI * 2;\nfunction registerElasticIn(name, amplitude, period) {\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return -(amplitude * Math.pow(2, 10 * (percentComplete -= 1)) * Math.sin((percentComplete - period / PI2 * Math.asin(1 / amplitude)) * PI2 / period)) * (endValue - startValue);\n    }]);\n}\nfunction registerElasticOut(name, amplitude, period) {\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        return (amplitude * Math.pow(2, -10 * percentComplete) * Math.sin((percentComplete - period / PI2 * Math.asin(1 / amplitude)) * PI2 / period) + 1) * (endValue - startValue);\n    }]);\n}\nfunction registerElasticInOut(name, amplitude, period) {\n    registerEasing([name, function (percentComplete, startValue, endValue) {\n        if (percentComplete === 0) {\n            return startValue;\n        }\n        if (percentComplete === 1) {\n            return endValue;\n        }\n        var s = period / PI2 * Math.asin(1 / amplitude);\n        percentComplete = percentComplete * 2 - 1;\n        return (percentComplete < 0 ? -0.5 * (amplitude * Math.pow(2, 10 * percentComplete) * Math.sin((percentComplete - s) * PI2 / period)) : amplitude * Math.pow(2, -10 * percentComplete) * Math.sin((percentComplete - s) * PI2 / period) * 0.5 + 1) * (endValue - startValue);\n    }]);\n}\nregisterElasticIn("easeInElastic", 1, 0.3);\nregisterElasticOut("easeOutElastic", 1, 0.3);\nregisterElasticInOut("easeInOutElastic", 1, 0.3 * 1.5);\n// TODO: Expose these as actions to register custom easings?\n\n// Project\n/**\r\n * Easing function that sets to the specified value immediately after the\r\n * animation starts.\r\n */\nfunction atStart(percentComplete, startValue, endValue) {\n  return percentComplete === 0 ? startValue : endValue;\n}\n/**\r\n * Easing function that sets to the specified value while the animation is\r\n * running.\r\n */\nfunction during(percentComplete, startValue, endValue) {\n  return percentComplete === 0 || percentComplete === 1 ? startValue : endValue;\n}\n/**\r\n * Easing function that sets to the specified value when the animation ends.\r\n */\nfunction atEnd(percentComplete, startValue, endValue) {\n  return percentComplete === 1 ? endValue : startValue;\n}\nregisterEasing(["at-start", atStart]);\nregisterEasing(["during", during]);\nregisterEasing(["at-end", atEnd]);\n\n// Project\n/**\r\n * Get/set the inner/outer dimension.\r\n */\nfunction getDimension(name, wantInner) {\n    return function (element, propertyValue) {\n        if (propertyValue === undefined) {\n            return augmentDimension(element, name, wantInner) + "px";\n        }\n        setPropertyValue(element, name, parseFloat(propertyValue) - augmentDimension(element, name, wantInner) + "px");\n    };\n}\nregisterNormalization(["Element", "innerWidth", getDimension("width", true)]);\nregisterNormalization(["Element", "innerHeight", getDimension("height", true)]);\nregisterNormalization(["Element", "outerWidth", getDimension("width", false)]);\nregisterNormalization(["Element", "outerHeight", getDimension("height", false)]);\n\n// Project\n// Constants\nvar inlineRx = /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|let|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i,\n    listItemRx = /^(li)$/i,\n    tableRowRx = /^(tr)$/i,\n    tableRx = /^(table)$/i,\n    tableRowGroupRx = /^(tbody)$/i;\nfunction display(element, propertyValue) {\n    var style = element.style;\n    if (propertyValue === undefined) {\n        return computePropertyValue(element, "display");\n    }\n    if (propertyValue === "auto") {\n        var nodeName = element && element.nodeName,\n            data = Data(element);\n        if (inlineRx.test(nodeName)) {\n            propertyValue = "inline";\n        } else if (listItemRx.test(nodeName)) {\n            propertyValue = "list-item";\n        } else if (tableRowRx.test(nodeName)) {\n            propertyValue = "table-row";\n        } else if (tableRx.test(nodeName)) {\n            propertyValue = "table";\n        } else if (tableRowGroupRx.test(nodeName)) {\n            propertyValue = "table-row-group";\n        } else {\n            // Default to "block" when no match is found.\n            propertyValue = "block";\n        }\n        // IMPORTANT: We need to do this as getPropertyValue bypasses the\n        // Normalisation when it exists in the cache.\n        data.cache["display"] = propertyValue;\n    }\n    style.display = propertyValue;\n}\nregisterNormalization(["Element", "display", display]);\n\n// Project\nfunction clientWidth(element, propertyValue) {\n    if (propertyValue == null) {\n        return element.clientWidth + "px";\n    }\n}\nfunction scrollWidth(element, propertyValue) {\n    if (propertyValue == null) {\n        return element.scrollWidth + "px";\n    }\n}\nfunction clientHeight(element, propertyValue) {\n    if (propertyValue == null) {\n        return element.clientHeight + "px";\n    }\n}\nfunction scrollHeight(element, propertyValue) {\n    if (propertyValue == null) {\n        return element.scrollHeight + "px";\n    }\n}\nfunction scroll(direction, end) {\n    return function (element, propertyValue) {\n        if (propertyValue == null) {\n            // Make sure we have these values cached.\n            getPropertyValue(element, "client" + direction, null, true);\n            getPropertyValue(element, "scroll" + direction, null, true);\n            return element["scroll" + end] + "px";\n        }\n        var value = parseFloat(propertyValue),\n            unit = propertyValue.replace(String(value), "");\n        switch (unit) {\n            case "":\n            case "px":\n                element["scroll" + end] = value;\n                break;\n            case "%":\n                var client = parseFloat(getPropertyValue(element, "client" + direction)),\n                    scrollValue = parseFloat(getPropertyValue(element, "scroll" + direction));\n                element["scroll" + end] = Math.max(0, scrollValue - client) * value / 100;\n                break;\n        }\n    };\n}\nregisterNormalization(["HTMLElement", "scroll", scroll("Height", "Top"), false]);\nregisterNormalization(["HTMLElement", "scrollTop", scroll("Height", "Top"), false]);\nregisterNormalization(["HTMLElement", "scrollLeft", scroll("Width", "Left"), false]);\nregisterNormalization(["HTMLElement", "scrollWidth", scrollWidth]);\nregisterNormalization(["HTMLElement", "clientWidth", clientWidth]);\nregisterNormalization(["HTMLElement", "scrollHeight", scrollHeight]);\nregisterNormalization(["HTMLElement", "clientHeight", clientHeight]);\n\n// Project\n/**\r\n * An RegExp pattern for the following list of css words using\r\n * http://kemio.com.ar/tools/lst-trie-re.php to generate:\r\n *\r\n * blockSize\r\n * borderBottomLeftRadius\r\n * borderBottomRightRadius\r\n * borderBottomWidth\r\n * borderImageOutset\r\n * borderImageWidth\r\n * borderLeftWidth\r\n * borderRadius\r\n * borderRightWidth\r\n * borderSpacing\r\n * borderTopLeftRadius\r\n * borderTopRightRadius\r\n * borderTopWidth\r\n * borderWidth\r\n * bottom\r\n * columnGap\r\n * columnRuleWidth\r\n * columnWidth\r\n * flexBasis\r\n * fontSize\r\n * gridColumnGap\r\n * gridGap\r\n * gridRowGap\r\n * height\r\n * inlineSize\r\n * left\r\n * letterSpacing\r\n * margin\r\n * marginBottom\r\n * marginLeft\r\n * marginRight\r\n * marginTop\r\n * maxBlockSize\r\n * maxHeight\r\n * maxInlineSize\r\n * maxWidth\r\n * minBlockSize\r\n * minHeight\r\n * minInlineSize\r\n * minWidth\r\n * objectPosition\r\n * outlineOffset\r\n * outlineWidth\r\n * padding\r\n * paddingBottom\r\n * paddingLeft\r\n * paddingRight\r\n * paddingTop\r\n * perspective\r\n * right\r\n * shapeMargin\r\n * strokeDashoffset\r\n * strokeWidth\r\n * textIndent\r\n * top\r\n * transformOrigin\r\n * width\r\n * wordSpacing\r\n */\n// tslint:disable-next-line:max-line-length\nvar rxAddPx = /^(b(lockSize|o(rder(Bottom(LeftRadius|RightRadius|Width)|Image(Outset|Width)|LeftWidth|R(adius|ightWidth)|Spacing|Top(LeftRadius|RightRadius|Width)|Width)|ttom))|column(Gap|RuleWidth|Width)|f(lexBasis|ontSize)|grid(ColumnGap|Gap|RowGap)|height|inlineSize|le(ft|tterSpacing)|m(a(rgin(Bottom|Left|Right|Top)|x(BlockSize|Height|InlineSize|Width))|in(BlockSize|Height|InlineSize|Width))|o(bjectPosition|utline(Offset|Width))|p(adding(Bottom|Left|Right|Top)|erspective)|right|s(hapeMargin|troke(Dashoffset|Width))|t(extIndent|op|ransformOrigin)|w(idth|ordSpacing))$/;\n/**\r\n * Return a Normalisation that can be used to set / get a prefixed style\r\n * property.\r\n */\nfunction getSetPrefixed(propertyName, unprefixed) {\n    return function (element, propertyValue) {\n        if (propertyValue === undefined) {\n            return computePropertyValue(element, propertyName) || computePropertyValue(element, unprefixed);\n        }\n        element.style[propertyName] = element.style[unprefixed] = propertyValue;\n    };\n}\n/**\r\n * Return a Normalisation that can be used to set / get a style property.\r\n */\nfunction getSetStyle(propertyName) {\n    return function (element, propertyValue) {\n        if (propertyValue === undefined) {\n            return computePropertyValue(element, propertyName);\n        }\n        element.style[propertyName] = propertyValue;\n    };\n}\n/**\r\n * Vendor prefixes. Chrome / Safari, Firefox, IE / Edge, Opera.\r\n */\nvar rxVendors = /^(webkit|moz|ms|o)[A-Z]/,\n    prefixElement = State.prefixElement;\nif (prefixElement) {\n    for (var propertyName in prefixElement.style) {\n        if (rxVendors.test(propertyName)) {\n            var unprefixed = propertyName.replace(/^[a-z]+([A-Z])/, function ($, letter) {\n                return letter.toLowerCase();\n            });\n            {\n                var addUnit = rxAddPx.test(unprefixed) ? "px" : undefined;\n                registerNormalization(["Element", unprefixed, getSetPrefixed(propertyName, unprefixed), addUnit]);\n            }\n        } else if (!hasNormalization(["Element", propertyName])) {\n            var _addUnit = rxAddPx.test(propertyName) ? "px" : undefined;\n            registerNormalization(["Element", propertyName, getSetStyle(propertyName), _addUnit]);\n        }\n    }\n}\n\n// Project\n/**\r\n * Get/set an attribute.\r\n */\nfunction getAttribute(name) {\n    return function (element, propertyValue) {\n        if (propertyValue === undefined) {\n            return element.getAttribute(name);\n        }\n        element.setAttribute(name, propertyValue);\n    };\n}\nvar base = document.createElement("div"),\n    rxSubtype = /^SVG(.*)Element$/,\n    rxElement = /Element$/;\nObject.getOwnPropertyNames(window).forEach(function (property) {\n    var subtype = rxSubtype.exec(property);\n    if (subtype && subtype[1] !== "SVG") {\n        // Don\'t do SVGSVGElement.\n        try {\n            var element = subtype[1] ? document.createElementNS("http://www.w3.org/2000/svg", (subtype[1] || "svg").toLowerCase()) : document.createElement("svg");\n            // tslint:disable-next-line:forin\n            for (var attribute in element) {\n                // Although this isn\'t a tween without prototypes, we do\n                // want to get hold of all attributes and not just own ones.\n                var value = element[attribute];\n                if (isString(attribute) && !(attribute[0] === "o" && attribute[1] === "n") && attribute !== attribute.toUpperCase() && !rxElement.test(attribute) && !(attribute in base) && !isFunction(value)) {\n                    // TODO: Should this all be set on the generic SVGElement, it would save space and time, but not as powerful\n                    registerNormalization([property, attribute, getAttribute(attribute)]);\n                }\n            }\n        } catch (e) {\n            console.error("VelocityJS: Error when trying to identify SVG attributes on " + property + ".", e);\n        }\n    }\n});\n\n// Project\n/**\r\n * Get/set the width or height.\r\n */\nfunction getDimension$1(name) {\n    return function (element, propertyValue) {\n        if (propertyValue === undefined) {\n            // Firefox throws an error if .getBBox() is called on an SVG that isn\'t attached to the DOM.\n            try {\n                return element.getBBox()[name] + "px";\n            } catch (e) {\n                return "0px";\n            }\n        }\n        element.setAttribute(name, propertyValue);\n    };\n}\nregisterNormalization(["SVGElement", "width", getDimension$1("width")]);\nregisterNormalization(["SVGElement", "height", getDimension$1("height")]);\n\n// Project\n/**\r\n * A fake normalization used to allow the "tween" property easy access.\r\n */\nfunction getSetTween(element, propertyValue) {\n    if (propertyValue === undefined) {\n        return "";\n    }\n}\nregisterNormalization(["Element", "tween", getSetTween]);\n\n// Automatically generated\nvar VERSION = "2.0.6";\n\n// Project\nvar Velocity$$1 = Velocity$1;\n/**\r\n * These parts of Velocity absolutely must be included, even if they\'re unused!\r\n */\nvar VelocityStatic;\n(function (VelocityStatic) {\n    /**\r\n     * Actions cannot be replaced if they are internal (hasOwnProperty is false\r\n     * but they still exist). Otherwise they can be replaced by users.\r\n     *\r\n     * All external method calls should be using actions rather than sub-calls\r\n     * of Velocity itself.\r\n     */\n    VelocityStatic.Actions = Actions;\n    /**\r\n     * Our known easing functions.\r\n     */\n    VelocityStatic.Easings = Easings;\n    /**\r\n     * The currently registered sequences.\r\n     */\n    VelocityStatic.Sequences = SequencesObject;\n    /**\r\n     * Current internal state of Velocity.\r\n     */\n    VelocityStatic.State = State; // tslint:disable-line:no-shadowed-variable\n    /**\r\n     * Velocity option defaults, which can be overriden by the user.\r\n     */\n    VelocityStatic.defaults = defaults$1;\n    /**\r\n     * Used to patch any object to allow Velocity chaining. In order to chain an\r\n     * object must either be treatable as an array - with a <code>.length</code>\r\n     * property, and each member a Node, or a Node directly.\r\n     *\r\n     * By default Velocity will try to patch <code>window</code>,\r\n     * <code>jQuery</code>, <code>Zepto</code>, and several classes that return\r\n     * Nodes or lists of Nodes.\r\n     */\n    VelocityStatic.patch = patch;\n    /**\r\n     * Set to true, 1 or 2 (most verbose) to output debug info to console.\r\n     */\n    VelocityStatic.debug = false;\n    /**\r\n     * In mock mode, all animations are forced to complete immediately upon the\r\n     * next rAF tick. If there are further animations queued then they will each\r\n     * take one single frame in turn. Loops and repeats will be disabled while\r\n     * <code>mock = true</code>.\r\n     */\n    VelocityStatic.mock = false;\n    /**\r\n     * Save our version number somewhere visible.\r\n     */\n    VelocityStatic.version = VERSION;\n    /**\r\n     * Added as a fallback for "import {Velocity} from \'velocity-animate\';".\r\n     */\n    VelocityStatic.Velocity = Velocity$1; // tslint:disable-line:no-shadowed-variable\n})(VelocityStatic || (VelocityStatic = {}));\n/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\nvar IE = function () {\n    if (document.documentMode) {\n        return document.documentMode;\n    } else {\n        for (var i = 7; i > 4; i--) {\n            var div = document.createElement("div");\n            div.innerHTML = "<!" + "--" + "[if IE " + i + "]><span></span><![endif]--\x3e";\n            if (div.getElementsByTagName("span").length) {\n                div = null;\n                return i;\n            }\n        }\n    }\n    return undefined;\n}();\n/******************\r\n Unsupported\r\n ******************/\nif (IE <= 8) {\n    throw new Error("VelocityJS cannot run on Internet Explorer 8 or earlier");\n}\n/******************\r\n Frameworks\r\n ******************/\nif (window) {\n    /*\r\n     * Both jQuery and Zepto allow their $.fn object to be extended to allow\r\n     * wrapped elements to be subjected to plugin calls. If either framework is\r\n     * loaded, register a "velocity" extension pointing to Velocity\'s core\r\n     * animate() method. Velocity also registers itself onto a global container\r\n     * (window.jQuery || window.Zepto || window) so that certain features are\r\n     * accessible beyond just a per-element scope. Accordingly, Velocity can\r\n     * both act on wrapped DOM elements and stand alone for targeting raw DOM\r\n     * elements.\r\n     */\n    var jQuery = window.jQuery,\n        Zepto = window.Zepto;\n    patch(window, true);\n    patch(Element && Element.prototype);\n    patch(NodeList && NodeList.prototype);\n    patch(HTMLCollection && HTMLCollection.prototype);\n    patch(jQuery, true);\n    patch(jQuery && jQuery.fn);\n    patch(Zepto, true);\n    patch(Zepto && Zepto.fn);\n}\n// Make sure that the values within Velocity are read-only and upatchable.\n\nvar _loop = function _loop(property) {\n    if (VelocityStatic.hasOwnProperty(property)) {\n        switch (typeof property === "undefined" ? "undefined" : _typeof(property)) {\n            case "number":\n            case "boolean":\n                defineProperty$1(Velocity$$1, property, {\n                    get: function get$$1() {\n                        return VelocityStatic[property];\n                    },\n                    set: function set$$1(value) {\n                        VelocityStatic[property] = value;\n                    }\n                }, true);\n                break;\n            default:\n                defineProperty$1(Velocity$$1, property, VelocityStatic[property], true);\n                break;\n        }\n    }\n};\n\nfor (var property in VelocityStatic) {\n    _loop(property);\n}\nObject.freeze(Velocity$$1);\n\n// Project\nvar rxPercents = /(\\d*\\.\\d+|\\d+\\.?|from|to)/g;\nfunction expandSequence(animation, sequence) {\n    var tweens = animation.tweens = Object.create(null),\n        element = animation.element;\n    for (var propertyName in sequence.tweens) {\n        if (sequence.tweens.hasOwnProperty(propertyName)) {\n            var fn = getNormalization(element, propertyName);\n            if (!fn && propertyName !== "tween") {\n                if (Velocity$$1.debug) {\n                    console.log("Skipping [" + propertyName + "] due to a lack of browser support.");\n                }\n                continue;\n            }\n            tweens[propertyName] = {\n                fn: fn,\n                sequence: sequence.tweens[propertyName]\n            };\n        }\n    }\n}\n/**\r\n * Used to register a sequence. This should never be called by users\r\n * directly, instead it should be called via an action:<br/>\r\n * <code>Velocity("registerSequence", ""name", VelocitySequence);</code>\r\n */\nfunction registerSequence(args) {\n    if (isPlainObject(args[0])) {\n        for (var name in args[0]) {\n            if (args[0].hasOwnProperty(name)) {\n                registerSequence([name, args[0][name]]);\n            }\n        }\n    } else if (isString(args[0])) {\n        var _name = args[0],\n            sequence = args[1];\n        if (!isString(_name)) {\n            console.warn("VelocityJS: Trying to set \'registerSequence\' name to an invalid value:", _name);\n        } else if (!isPlainObject(sequence)) {\n            console.warn("VelocityJS: Trying to set \'registerSequence\' sequence to an invalid value:", _name, sequence);\n        } else {\n            if (SequencesObject[_name]) {\n                console.warn("VelocityJS: Replacing named sequence:", _name);\n            }\n            var percents = {},\n                steps = new Array(100),\n                properties = [],\n                sequenceList = SequencesObject[_name] = {},\n                duration = validateDuration(sequence.duration);\n            sequenceList.tweens = {};\n            if (isNumber(duration)) {\n                sequenceList.duration = duration;\n            }\n            for (var part in sequence) {\n                if (sequence.hasOwnProperty(part)) {\n                    var keys = String(part).match(rxPercents);\n                    if (keys) {\n                        var _iteratorNormalCompletion = true;\n                        var _didIteratorError = false;\n                        var _iteratorError = undefined;\n\n                        try {\n                            for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                                var key = _step.value;\n\n                                var percent = key === "from" ? 0 : key === "to" ? 100 : parseFloat(key);\n                                if (percent < 0 || percent > 100) {\n                                    console.warn("VelocityJS: Trying to use an invalid value as a percentage (0 <= n <= 100):", _name, percent);\n                                } else if (isNaN(percent)) {\n                                    console.warn("VelocityJS: Trying to use an invalid number as a percentage:", _name, part, key);\n                                } else {\n                                    if (!percents[String(percent)]) {\n                                        percents[String(percent)] = [];\n                                    }\n                                    percents[String(percent)].push(part);\n                                    for (var property in sequence[part]) {\n                                        if (!properties.includes(property)) {\n                                            properties.push(property);\n                                        }\n                                    }\n                                }\n                            }\n                        } catch (err) {\n                            _didIteratorError = true;\n                            _iteratorError = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion && _iterator.return) {\n                                    _iterator.return();\n                                }\n                            } finally {\n                                if (_didIteratorError) {\n                                    throw _iteratorError;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var orderedPercents = Object.keys(percents).sort(function (a, b) {\n                var a1 = parseFloat(a),\n                    b1 = parseFloat(b);\n                return a1 > b1 ? 1 : a1 < b1 ? -1 : 0;\n            });\n            orderedPercents.forEach(function (key) {\n                steps.push.apply(percents[key]);\n            });\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = properties[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _property = _step2.value;\n\n                    var parts = [],\n                        propertyName = camelCase(_property);\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = orderedPercents[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var _key = _step3.value;\n                            var _iteratorNormalCompletion6 = true;\n                            var _didIteratorError6 = false;\n                            var _iteratorError6 = undefined;\n\n                            try {\n                                for (var _iterator6 = percents[_key][Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                                    var _value = _step6.value;\n\n                                    var stepProperties = sequence[_value];\n                                    if (stepProperties[propertyName]) {\n                                        parts.push(isString(stepProperties[propertyName]) ? stepProperties[propertyName] : stepProperties[propertyName][0]);\n                                    }\n                                }\n                            } catch (err) {\n                                _didIteratorError6 = true;\n                                _iteratorError6 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                        _iterator6.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError6) {\n                                        throw _iteratorError6;\n                                    }\n                                }\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n\n                    if (parts.length) {\n                        var realSequence = findPattern(parts, propertyName);\n                        var index = 0;\n                        if (realSequence) {\n                            var _iteratorNormalCompletion4 = true;\n                            var _didIteratorError4 = false;\n                            var _iteratorError4 = undefined;\n\n                            try {\n                                for (var _iterator4 = orderedPercents[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                                    var _key2 = _step4.value;\n                                    var _iteratorNormalCompletion5 = true;\n                                    var _didIteratorError5 = false;\n                                    var _iteratorError5 = undefined;\n\n                                    try {\n                                        for (var _iterator5 = percents[_key2][Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                                            var value = _step5.value;\n\n                                            var originalProperty = sequence[value][propertyName];\n                                            if (originalProperty) {\n                                                if (Array.isArray(originalProperty) && originalProperty.length > 1 && (isString(originalProperty[1]) || Array.isArray(originalProperty[1]))) {\n                                                    realSequence[index].easing = validateEasing(originalProperty[1], sequenceList.duration || DEFAULT_DURATION);\n                                                }\n                                                realSequence[index++].percent = parseFloat(_key2) / 100;\n                                            }\n                                        }\n                                    } catch (err) {\n                                        _didIteratorError5 = true;\n                                        _iteratorError5 = err;\n                                    } finally {\n                                        try {\n                                            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                                                _iterator5.return();\n                                            }\n                                        } finally {\n                                            if (_didIteratorError5) {\n                                                throw _iteratorError5;\n                                            }\n                                        }\n                                    }\n                                }\n                            } catch (err) {\n                                _didIteratorError4 = true;\n                                _iteratorError4 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                        _iterator4.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError4) {\n                                        throw _iteratorError4;\n                                    }\n                                }\n                            }\n\n                            sequenceList.tweens[propertyName] = realSequence;\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    }\n}\nregisterAction(["registerSequence", registerSequence], true);\n\n// Project\nvar globalPromise = void 0;\ntry {\n    globalPromise = Promise;\n} catch ( /**/_a) {/**/}\nvar noPromiseOption = ", if that is deliberate then pass `promiseRejectEmpty:false` as an option";\n/**\r\n * Patch a VelocityResult with a Promise.\r\n */\nfunction patchPromise(promiseObject, result) {\n    defineProperty$1(result, "promise", promiseObject);\n    defineProperty$1(result, "then", promiseObject.then.bind(promiseObject));\n    defineProperty$1(result, "catch", promiseObject.catch.bind(promiseObject));\n    if (promiseObject.finally) {\n        // Semi-standard\n        defineProperty$1(result, "finally", promiseObject.finally.bind(promiseObject));\n    }\n}\n/* tslint:enable:max-line-length */\nfunction Velocity$1() {\n    var\n    /**\r\n     * A shortcut to the default options.\r\n     */\n    defaults$$1 = defaults$1,\n\n    /**\r\n     * Cache of the first argument - this is used often enough to be saved.\r\n     */\n    args0 = arguments.length <= 0 ? undefined : arguments[0],\n\n    /**\r\n     * To allow for expressive CoffeeScript code, Velocity supports an\r\n     * alternative syntax in which "elements" (or "e"), "properties" (or\r\n     * "p"), and "options" (or "o") objects are defined on a container\r\n     * object that\'s passed in as Velocity\'s sole argument.\r\n     *\r\n     * Note: Some browsers automatically populate arguments with a\r\n     * "properties" object. We detect it by checking for its default\r\n     * "names" property.\r\n     */\n    // TODO: Confirm which browsers - if <=IE8 the we can drop completely\n    syntacticSugar = isPlainObject(args0) && (args0.p || isPlainObject(args0.properties) && !args0.properties.names || isString(args0.properties));\n    var\n    /**\r\n     *  When Velocity is called via the utility function (Velocity()),\r\n     * elements are explicitly passed in as the first parameter. Thus,\r\n     * argument positioning varies.\r\n     */\n    argumentIndex = 0,\n\n    /**\r\n     * The list of elements, extended with Promise and Velocity.\r\n     */\n    elements = void 0,\n\n    /**\r\n     * The properties being animated. This can be a string, in which case it\r\n     * is either a function for these elements, or it is a "named" animation\r\n     * sequence to use instead. Named sequences start with either "callout."\r\n     * or "transition.". When used as a callout the values will be reset\r\n     * after finishing. When used as a transtition then there is no special\r\n     * handling after finishing.\r\n     */\n    propertiesMap = void 0,\n\n    /**\r\n     * Options supplied, this will be mapped and validated into\r\n     * <code>options</code>.\r\n     */\n    optionsMap = void 0,\n\n    /**\r\n     * If called via a chain then this contains the <b>last</b> calls\r\n     * animations. If this does not have a value then any access to the\r\n     * element\'s animations needs to be to the currently-running ones.\r\n     */\n    animations = void 0,\n\n    /**\r\n     * The promise that is returned.\r\n     */\n    promise = void 0,\n\n    // Used when the animation is finished\n    resolver = void 0,\n\n    // Used when there was an issue with one or more of the Velocity arguments\n    rejecter = void 0;\n    //console.log(`Velocity`, args)\n    // First get the elements, and the animations connected to the last call if\n    // this is chained.\n    // TODO: Clean this up a bit\n    // TODO: Throw error if the chain is called with elements as the first argument. isVelocityResult(this) && ( (isNode(arg0) || isWrapped(arg0)) && arg0 == this)\n    if (isNode(this)) {\n        // This is from a chain such as document.getElementById("").velocity(...)\n        elements = [this];\n    } else if (isWrapped(this)) {\n        // This might be a chain from something else, but if chained from a\n        // previous Velocity() call then grab the animations it\'s related to.\n        elements = cloneArray(this);\n        if (isVelocityResult(this)) {\n            animations = this.velocity.animations;\n        }\n    } else if (syntacticSugar) {\n        elements = cloneArray(args0.elements || args0.e);\n        argumentIndex++;\n    } else if (isNode(args0)) {\n        elements = cloneArray([args0]);\n        argumentIndex++;\n    } else if (isWrapped(args0)) {\n        elements = cloneArray(args0);\n        argumentIndex++;\n    }\n    // Allow elements to be chained.\n    if (elements) {\n        defineProperty$1(elements, "velocity", Velocity$1.bind(elements));\n        if (animations) {\n            defineProperty$1(elements.velocity, "animations", animations);\n        }\n    }\n    // Next get the propertiesMap and options.\n    if (syntacticSugar) {\n        propertiesMap = getValue(args0.properties, args0.p);\n    } else {\n        var _ref;\n\n        // TODO: Should be possible to call Velocity("pauseAll") - currently not possible\n        propertiesMap = (_ref = argumentIndex++, arguments.length <= _ref ? undefined : arguments[_ref]);\n    }\n    // Get any options map passed in as arguments first, expand any direct\n    // options if possible.\n    var isReverse = propertiesMap === "reverse",\n        isAction = !isReverse && isString(propertiesMap),\n        maybeSequence = isAction && SequencesObject[propertiesMap],\n        opts = syntacticSugar ? getValue(args0.options, args0.o) : arguments.length <= argumentIndex ? undefined : arguments[argumentIndex];\n    if (isPlainObject(opts)) {\n        optionsMap = opts;\n    }\n    // Create the promise if supported and wanted.\n    if (globalPromise && getValue(optionsMap && optionsMap.promise, defaults$$1.promise)) {\n        promise = new globalPromise(function (resolve, reject) {\n            rejecter = reject;\n            // IMPORTANT:\n            // If a resolver tries to run on a Promise then it will wait until\n            // that Promise resolves - but in this case we\'re running on our own\n            // Promise, so need to make sure it\'s not seen as one. Removing\n            // these values for the duration of the resolve.\n            // Due to being an async call, they should be back to "normal"\n            // before the <code>.then()</code> function gets called.\n            resolver = function resolver(result) {\n                if (isVelocityResult(result) && result.promise) {\n                    delete result.then;\n                    delete result.catch;\n                    delete result.finally;\n                    resolve(result);\n                    patchPromise(result.promise, result);\n                } else {\n                    resolve(result);\n                }\n            };\n        });\n        if (elements) {\n            patchPromise(promise, elements);\n        }\n    }\n    if (promise) {\n        var optionPromiseRejectEmpty = optionsMap && optionsMap.promiseRejectEmpty,\n            promiseRejectEmpty = getValue(optionPromiseRejectEmpty, defaults$$1.promiseRejectEmpty);\n        if (!elements && !isAction) {\n            if (promiseRejectEmpty) {\n                rejecter("Velocity: No elements supplied" + (isBoolean(optionPromiseRejectEmpty) ? "" : noPromiseOption) + ". Aborting.");\n            } else {\n                resolver();\n            }\n        } else if (!propertiesMap) {\n            if (promiseRejectEmpty) {\n                rejecter("Velocity: No properties supplied" + (isBoolean(optionPromiseRejectEmpty) ? "" : noPromiseOption) + ". Aborting.");\n            } else {\n                resolver();\n            }\n        }\n    }\n    if (!elements && !isAction || !propertiesMap) {\n        return promise;\n    }\n    // NOTE: Can\'t use isAction here due to type inference - there are callbacks\n    // between so the type isn\'t considered safe.\n    if (isAction) {\n        var actionArgs = [],\n            promiseHandler = promise && {\n            _promise: promise,\n            _resolver: resolver,\n            _rejecter: rejecter\n        };\n        while (argumentIndex < arguments.length) {\n            var _ref2;\n\n            actionArgs.push((_ref2 = argumentIndex++, arguments.length <= _ref2 ? undefined : arguments[_ref2]));\n        }\n        // Velocity\'s behavior is categorized into "actions". If a string is\n        // passed in instead of a propertiesMap then that will call a function\n        // to do something special to the animation linked.\n        // There is one special case - "reverse" - which is handled differently,\n        // by being stored on the animation and then expanded when the animation\n        // starts.\n        var action = propertiesMap.replace(/\\..*$/, ""),\n            callback = Actions[action];\n        if (callback) {\n            var result = callback(actionArgs, elements, promiseHandler, propertiesMap);\n            if (result !== undefined) {\n                return result;\n            }\n            return elements || promise;\n        } else if (!maybeSequence) {\n            console.error("VelocityJS: First argument (" + propertiesMap + ") was not a property map, a known action, or a registered redirect. Aborting.");\n            return;\n        }\n    }\n    var hasValidDuration = void 0;\n    if (isPlainObject(propertiesMap) || isReverse || maybeSequence) {\n        /**\r\n         * The options for this set of animations.\r\n         */\n        var options = {};\n        var isSync = defaults$$1.sync;\n        // Private options first - set as non-enumerable, and starting with an\n        // underscore so we can filter them out.\n        if (promise) {\n            defineProperty$1(options, "_promise", promise);\n            defineProperty$1(options, "_rejecter", rejecter);\n            defineProperty$1(options, "_resolver", resolver);\n        }\n        defineProperty$1(options, "_ready", 0);\n        defineProperty$1(options, "_started", 0);\n        defineProperty$1(options, "_completed", 0);\n        defineProperty$1(options, "_total", 0);\n        // Now check the optionsMap\n        if (isPlainObject(optionsMap)) {\n            var validDuration = validateDuration(optionsMap.duration);\n            hasValidDuration = validDuration !== undefined;\n            options.duration = getValue(validDuration, defaults$$1.duration);\n            options.delay = getValue(validateDelay(optionsMap.delay), defaults$$1.delay);\n            // Need the extra fallback here in case it supplies an invalid\n            // easing that we need to overrride with the default.\n            options.easing = validateEasing(getValue(optionsMap.easing, defaults$$1.easing), options.duration) || validateEasing(defaults$$1.easing, options.duration);\n            options.loop = getValue(validateLoop(optionsMap.loop), defaults$$1.loop);\n            options.repeat = options.repeatAgain = getValue(validateRepeat(optionsMap.repeat), defaults$$1.repeat);\n            if (optionsMap.speed != null) {\n                options.speed = getValue(validateSpeed(optionsMap.speed), 1);\n            }\n            if (isBoolean(optionsMap.promise)) {\n                options.promise = optionsMap.promise;\n            }\n            options.queue = getValue(validateQueue(optionsMap.queue), defaults$$1.queue);\n            if (optionsMap.mobileHA && !State.isGingerbread) {\n                /* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\r\n                 on animating elements. HA is removed from the element at the completion of its animation. */\n                /* Note: Android Gingerbread doesn\'t support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n                /* Note: You can read more about the use of mobileHA in Velocity\'s documentation: velocity-animate/#mobileHA. */\n                options.mobileHA = true;\n            }\n            if (optionsMap.drag === true) {\n                options.drag = true;\n            }\n            if (isNumber(optionsMap.stagger) || isFunction(optionsMap.stagger)) {\n                options.stagger = optionsMap.stagger;\n            }\n            if (!isReverse) {\n                if (optionsMap["display"] != null) {\n                    propertiesMap.display = optionsMap["display"];\n                    console.error("Deprecated \\"options.display\\" used, this is now a property:", optionsMap["display"]);\n                }\n                if (optionsMap["visibility"] != null) {\n                    propertiesMap.visibility = optionsMap["visibility"];\n                    console.error("Deprecated \\"options.visibility\\" used, this is now a property:", optionsMap["visibility"]);\n                }\n            }\n            // TODO: Allow functional options for different options per element\n            var optionsBegin = validateBegin(optionsMap.begin),\n                optionsComplete = validateComplete(optionsMap.complete),\n                optionsProgress = validateProgress(optionsMap.progress),\n                optionsSync = validateSync(optionsMap.sync);\n            if (optionsBegin != null) {\n                options.begin = optionsBegin;\n            }\n            if (optionsComplete != null) {\n                options.complete = optionsComplete;\n            }\n            if (optionsProgress != null) {\n                options.progress = optionsProgress;\n            }\n            if (optionsSync != null) {\n                isSync = optionsSync;\n            }\n        } else if (!syntacticSugar) {\n            // Expand any direct options if possible.\n            var offset = 0;\n            options.duration = validateDuration(arguments.length <= argumentIndex ? undefined : arguments[argumentIndex], true);\n            if (options.duration === undefined) {\n                options.duration = defaults$$1.duration;\n            } else {\n                hasValidDuration = true;\n                offset++;\n            }\n            if (!isFunction(arguments.length <= argumentIndex + offset ? undefined : arguments[argumentIndex + offset])) {\n                // Despite coming before Complete, we can\'t pass a fn easing\n                var easing = validateEasing(arguments.length <= argumentIndex + offset ? undefined : arguments[argumentIndex + offset], getValue(options && validateDuration(options.duration), defaults$$1.duration), true);\n                if (easing !== undefined) {\n                    offset++;\n                    options.easing = easing;\n                }\n            }\n            var complete = validateComplete(arguments.length <= argumentIndex + offset ? undefined : arguments[argumentIndex + offset], true);\n            if (complete !== undefined) {\n                options.complete = complete;\n            }\n            options.delay = defaults$$1.delay;\n            options.loop = defaults$$1.loop;\n            options.repeat = options.repeatAgain = defaults$$1.repeat;\n        }\n        if (isReverse && options.queue === false) {\n            throw new Error("VelocityJS: Cannot reverse a queue:false animation.");\n        }\n        if (!hasValidDuration && maybeSequence && maybeSequence.duration) {\n            options.duration = maybeSequence.duration;\n        }\n        // When a set of elements is targeted by a Velocity call, the set is\n        // broken up and each element has the current Velocity call individually\n        // queued onto it. In this way, each element\'s existing queue is\n        // respected; some elements may already be animating and accordingly\n        // should not have this current Velocity call triggered immediately\n        // unless the sync:true option is used.\n        var rootAnimation = {\n            options: options,\n            elements: elements,\n            _prev: undefined,\n            _next: undefined,\n            _flags: isSync ? 32 /* SYNC */ : 0,\n            percentComplete: 0,\n            ellapsedTime: 0,\n            timeStart: 0\n        };\n        animations = [];\n        for (var index = 0; index < elements.length; index++) {\n            var element = elements[index];\n            var flags = 0;\n            if (isNode(element)) {\n                // TODO: This needs to check for valid animation targets, not just Elements\n                if (isReverse) {\n                    var lastAnimation = Data(element).lastAnimationList[options.queue];\n                    propertiesMap = lastAnimation && lastAnimation.tweens;\n                    if (!propertiesMap) {\n                        console.error("VelocityJS: Attempting to reverse an animation on an element with no previous animation:", element);\n                        continue;\n                    }\n                    flags |= 64 /* REVERSE */ & ~(lastAnimation._flags & 64 /* REVERSE */); // tslint:disable-line:no-bitwise\n                }\n                var animation = Object.assign({}, rootAnimation, { element: element, _flags: rootAnimation._flags | flags });\n                options._total++;\n                animations.push(animation);\n                if (options.stagger) {\n                    if (isFunction(options.stagger)) {\n                        var num = optionCallback(options.stagger, element, index, elements.length, elements, "stagger");\n                        if (isNumber(num)) {\n                            animation.delay = options.delay + num;\n                        }\n                    } else {\n                        animation.delay = options.delay + options.stagger * index;\n                    }\n                }\n                if (options.drag) {\n                    animation.duration = options.duration - options.duration * Math.max(1 - (index + 1) / elements.length, 0.75);\n                }\n                if (maybeSequence) {\n                    expandSequence(animation, maybeSequence);\n                } else if (isReverse) {\n                    // In this case we\'re using the previous animation, so\n                    // it will be expanded correctly when that one runs.\n                    animation.tweens = propertiesMap;\n                } else {\n                    animation.tweens = Object.create(null);\n                    expandProperties(animation, propertiesMap);\n                }\n                queue$1(element, animation, options.queue);\n            }\n        }\n        if (State.isTicking === false) {\n            // If the animation tick isn\'t running, start it. (Velocity shuts it\n            // off when there are no active calls to process.)\n            tick(false);\n        }\n        if (animations) {\n            defineProperty$1(elements.velocity, "animations", animations);\n        }\n    }\n    /***************\r\n     Chaining\r\n     ***************/\n    /* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */\n    return elements || promise;\n}\n/**\r\n * Call an option callback in a try/catch block and report an error if needed.\r\n */\nfunction optionCallback(fn, element, index, length, elements, option) {\n    try {\n        return fn.call(element, index, length, elements, option);\n    } catch (e) {\n        console.error("VelocityJS: Exception when calling \'" + option + "\' callback:", e);\n    }\n}\n\n// Project\n/**\r\n * Used to patch any object to allow Velocity chaining. In order to chain an\r\n * object must either be treatable as an array - with a <code>.length</code>\r\n * property, and each member a Node, or a Node directly.\r\n *\r\n * By default Velocity will try to patch <code>window</code>,\r\n * <code>jQuery</code>, <code>Zepto</code>, and several classes that return\r\n * Nodes or lists of Nodes.\r\n */\nfunction patch(proto, global) {\n    try {\n        defineProperty$1(proto, (global ? "V" : "v") + "elocity", Velocity$1);\n    } catch (e) {\n        console.warn("VelocityJS: Error when trying to add prototype.", e);\n    }\n}\n\n// Project\nvar Velocity$2 = Velocity$1;\n/**\r\n * These parts of Velocity absolutely must be included, even if they\'re unused!\r\n */\nvar VelocityStatic$1;\n(function (VelocityStatic) {\n    /**\r\n     * Actions cannot be replaced if they are internal (hasOwnProperty is false\r\n     * but they still exist). Otherwise they can be replaced by users.\r\n     *\r\n     * All external method calls should be using actions rather than sub-calls\r\n     * of Velocity itself.\r\n     */\n    VelocityStatic.Actions = Actions;\n    /**\r\n     * Our known easing functions.\r\n     */\n    VelocityStatic.Easings = Easings;\n    /**\r\n     * The currently registered sequences.\r\n     */\n    VelocityStatic.Sequences = SequencesObject;\n    /**\r\n     * Current internal state of Velocity.\r\n     */\n    VelocityStatic.State = State; // tslint:disable-line:no-shadowed-variable\n    /**\r\n     * Velocity option defaults, which can be overriden by the user.\r\n     */\n    VelocityStatic.defaults = defaults$1;\n    /**\r\n     * Used to patch any object to allow Velocity chaining. In order to chain an\r\n     * object must either be treatable as an array - with a <code>.length</code>\r\n     * property, and each member a Node, or a Node directly.\r\n     *\r\n     * By default Velocity will try to patch <code>window</code>,\r\n     * <code>jQuery</code>, <code>Zepto</code>, and several classes that return\r\n     * Nodes or lists of Nodes.\r\n     */\n    VelocityStatic.patch = patch;\n    /**\r\n     * Set to true, 1 or 2 (most verbose) to output debug info to console.\r\n     */\n    VelocityStatic.debug = false;\n    /**\r\n     * In mock mode, all animations are forced to complete immediately upon the\r\n     * next rAF tick. If there are further animations queued then they will each\r\n     * take one single frame in turn. Loops and repeats will be disabled while\r\n     * <code>mock = true</code>.\r\n     */\n    VelocityStatic.mock = false;\n    /**\r\n     * Save our version number somewhere visible.\r\n     */\n    VelocityStatic.version = VERSION;\n    /**\r\n     * Added as a fallback for "import {Velocity} from \'velocity-animate\';".\r\n     */\n    VelocityStatic.Velocity = Velocity$1; // tslint:disable-line:no-shadowed-variable\n})(VelocityStatic$1 || (VelocityStatic$1 = {}));\n/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\nvar IE$1 = function () {\n    if (document.documentMode) {\n        return document.documentMode;\n    } else {\n        for (var i = 7; i > 4; i--) {\n            var div = document.createElement("div");\n            div.innerHTML = "<!" + "--" + "[if IE " + i + "]><span></span><![endif]--\x3e";\n            if (div.getElementsByTagName("span").length) {\n                div = null;\n                return i;\n            }\n        }\n    }\n    return undefined;\n}();\n/******************\r\n Unsupported\r\n ******************/\nif (IE$1 <= 8) {\n    throw new Error("VelocityJS cannot run on Internet Explorer 8 or earlier");\n}\n/******************\r\n Frameworks\r\n ******************/\nif (window) {\n    /*\r\n     * Both jQuery and Zepto allow their $.fn object to be extended to allow\r\n     * wrapped elements to be subjected to plugin calls. If either framework is\r\n     * loaded, register a "velocity" extension pointing to Velocity\'s core\r\n     * animate() method. Velocity also registers itself onto a global container\r\n     * (window.jQuery || window.Zepto || window) so that certain features are\r\n     * accessible beyond just a per-element scope. Accordingly, Velocity can\r\n     * both act on wrapped DOM elements and stand alone for targeting raw DOM\r\n     * elements.\r\n     */\n    var jQuery$1 = window.jQuery,\n        Zepto$1 = window.Zepto;\n    patch(window, true);\n    patch(Element && Element.prototype);\n    patch(NodeList && NodeList.prototype);\n    patch(HTMLCollection && HTMLCollection.prototype);\n    patch(jQuery$1, true);\n    patch(jQuery$1 && jQuery$1.fn);\n    patch(Zepto$1, true);\n    patch(Zepto$1 && Zepto$1.fn);\n}\n// Make sure that the values within Velocity are read-only and upatchable.\n\nvar _loop$1 = function _loop(property) {\n    if (VelocityStatic$1.hasOwnProperty(property)) {\n        switch (typeof property === "undefined" ? "undefined" : _typeof(property)) {\n            case "number":\n            case "boolean":\n                defineProperty$1(Velocity$2, property, {\n                    get: function get$$1() {\n                        return VelocityStatic$1[property];\n                    },\n                    set: function set$$1(value) {\n                        VelocityStatic$1[property] = value;\n                    }\n                }, true);\n                break;\n            default:\n                defineProperty$1(Velocity$2, property, VelocityStatic$1[property], true);\n                break;\n        }\n    }\n};\n\nfor (var property$1 in VelocityStatic$1) {\n    _loop$1(property$1);\n}\nObject.freeze(Velocity$2);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Velocity$2);\n//# sourceMappingURL=velocity.es5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8581\n')}},__webpack_module_cache__={};function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var n=__webpack_module_cache__[I]={id:I,exports:{}};return __webpack_modules__[I].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=I=>{var g=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(g,{a:g}),g},__webpack_require__.d=(I,g)=>{for(var n in g)__webpack_require__.o(g,n)&&!__webpack_require__.o(I,n)&&Object.defineProperty(I,n,{enumerable:!0,get:g[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(I){if("object"==typeof window)return window}}(),__webpack_require__.o=(I,g)=>Object.prototype.hasOwnProperty.call(I,g),__webpack_require__.r=I=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(4256)})();